


RUNNING SCRIPT: job_codet5.sh
Mon Nov 27 18:36:48 2023       
+---------------------------------------------------------------------------------------+
| NVIDIA-SMI 530.30.02              Driver Version: 530.30.02    CUDA Version: 12.1     |
|-----------------------------------------+----------------------+----------------------+
| GPU  Name                  Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf            Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                                         |                      |               MIG M. |
|=========================================+======================+======================|
|   0  NVIDIA GeForce RTX 3090         On | 00000000:C1:00.0 Off |                  N/A |
| 63%   50C    P8               34W / 350W|      1MiB / 24576MiB |      0%      Default |
|                                         |                      |                  N/A |
+-----------------------------------------+----------------------+----------------------+
                                                                                         
+---------------------------------------------------------------------------------------+
| Processes:                                                                            |
|  GPU   GI   CI        PID   Type   Process name                            GPU Memory |
|        ID   ID                                                             Usage      |
|=======================================================================================|
|  No running processes found                                                           |
+---------------------------------------------------------------------------------------+
nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2022 NVIDIA Corporation
Built on Wed_Jun__8_16:49:14_PDT_2022
Cuda compilation tools, release 11.7, V11.7.99
Build cuda_11.7.r11.7/compiler.31442593_0
11/27/2023 18:36:54 - INFO - __main__ -   Namespace(adam_epsilon=1e-08, beam_size=5, config_name='Salesforce/codet5-base', dev_filename='/home/ysnamgoong42/ws/BANKWAREGLOBAL/#WORKSPACE/4_2023-11-24_CodeBase/dataset/valid.java,/home/ysnamgoong42/ws/BANKWAREGLOBAL/#WORKSPACE/4_2023-11-24_CodeBase/dataset/valid.txt', do_eval=True, do_lower_case=False, do_test=False, do_train=True, eval_batch_size=16, eval_steps=2500, gradient_accumulation_steps=1, learning_rate=5e-05, load_model_path=None, local_rank=-1, max_grad_norm=1.0, max_source_length=512, max_steps=-1, max_target_length=128, model_name_or_path='Salesforce/codet5-base', model_type='codet5', no_cuda=False, num_train_epochs=10.0, output_dir='/home/ysnamgoong42/ws/BANKWAREGLOBAL/#WORKSPACE/4_2023-11-24_CodeBase/saved_models/Salesforce/codet5-base', seed=42, test_filename=None, tokenizer_name='Salesforce/codet5-base', train_batch_size=16, train_filename='/home/ysnamgoong42/ws/BANKWAREGLOBAL/#WORKSPACE/4_2023-11-24_CodeBase/dataset/train.java,/home/ysnamgoong42/ws/BANKWAREGLOBAL/#WORKSPACE/4_2023-11-24_CodeBase/dataset/train.txt', train_steps=5000, warmup_steps=0, weight_decay=0.0)
11/27/2023 18:36:54 - WARNING - __main__ -   Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
11/27/2023 18:37:01 - INFO - __main__ -   *** Example ***
11/27/2023 18:37:01 - INFO - __main__ -   idx: 0
11/27/2023 18:37:01 - INFO - __main__ -   source_tokens: ['<s>', 'public', '_void', '_save', 'Sub', 'Info', '(', 'I', 'Value', 'Object', '_sub', 'Info', '_,', '_St', 'St', 'l', 'mnt', 'SI', 'O', '_st', 'St', 'l', 'mnt', 'SI', 'O', 'In', ')', '_{', '_logger', '.', 'debug', '("', '##', '<', 'ST', '-', 'St', 'l', 'mnt', 'Sub', 'Info', 'B', 'iz', '>', '_save', 'Sub', 'Info', '");', '_//', '_null', '_check', '_if', '(', 'sub', 'Info', '_==', '_null', '){', '_throw', '_new', '_B', 'iz', 'Application', 'Exception', '("', 'A', 'AP', 'C', 'ME', '000', '6', '",', '_new', '_Object', '[]', '_{', 'this', '.', 'get', 'Class', '().', 'get', 'Simple', 'Name', '()}', ');', '_}', '_logger', '.', 'debug', '("', '##', '<', 'ST', '-', 'St', 'l', 'mnt', 'Sub', 'Info', 'B', 'iz', '>', '_save', 'Sub', 'Info', '_null', '_check', '_ok', '");', '_//', '_1', '.', 'create', '_a', '_new', '_instance', '_of', '_DB', '_IO', '_I', 'Value', 'Object', '_sub', 'Info', 'DB', 'IO', '_=', '_new', '_St', 'St', 'l', 'mnt', 'SI', 'O', '();', '_//', '_2', '.', 'set', '_primary', '_key', '__', 'set', 'Key', '(', 'sub', 'Info', 'DB', 'IO', ',', '_st', 'St', 'l', 'mnt', 'SI', 'O', 'In', ');', '_//', '_3', '.', 'convert', '_I', 'value', 'Object', '_to', '_DB', 'IO', '_V', 'O', '_D', 'to', 'Utils', '.', 'set', 'Sub', 'Info', 'IO', '(', 'sub', 'Info', ',', '_sub', 'Info', 'DB', 'IO', ');', '_//', '_4', '.', 'save', '_sub', 'sid', 'i', 'ary', '_detail', '(', 'ë', '³', '´', 'ì', '¡', '°', 'ë', 'ª', 'ħ', 'ì', 'Ħ', '¸', ')', '__', 'insert', 'Sub', 'Info', '(', 'sub', 'Info', 'DB', 'IO', ');', '_/*', '_*', '_sett', 'lement', 'ë', 'Ĭ', 'Ķ', '_', 'ì', 'Ĩ', 'į', 'ì', 'Ħ', '±', 'ì', 'Ŀ', 'Ħ', '_', 'ë', 'Į', 'Ģ', 'ë', '¶', 'Ģ', 'ë', '¶', 'Ħ', '_insert', '_', 'í', 'ķ', 'ĺ', 'ë', 'Ĭ', 'Ķ', '_', 'ê', '²', '½', 'ì', 'ļ', '°', 'ì', 'Ŀ', '´', 'ë', '¯', 'Ģ', 'ë', '¡', 'ľ', '_', 'ì', 'ķ', 'Ħ', 'ë', 'ŀ', 'ĺ', '_', 'ë', '¡', 'ľ', 'ì', '§', 'ģ', 'ì', 'Ŀ', 'Ħ', '_', 'ë', '§', 'ī', 'ì', 'Ŀ', 'Į', '_*/', '_//', '_I', 'Value', 'Object', '_sql', 'Out', '_=', '_getSub', 'Info', '(', 'st', 'l', 'mnt', ');', '_//', '_//', '_//', '_', 'í', 'ķ', '´', 'ë', 'ĭ', '¹', '_', 'ê', '±', '°', 'ë', 'ŀ', 'ĺ', 'ê', '´', 'Ģ', 'ë', 'ł', '¨', '_', 'ë', '³', '´', 'ì', '¡', '°', 'ë', 'ª', 'ħ', 'ì', 'Ħ', '¸', '_', 'ë', 'į', '°', 'ì', 'Ŀ', '´', 'í', 'Ħ', '°', 'ê', '°', 'Ģ', '_', 'ì', 'Ĺ', 'Ĩ', 'ì', 'Ŀ', 'Ħ', '_', 'ë', 'ķ', 'Į', '_//', '_if', '(', 'sql', 'Out', '_==', '_null', ')', '_{', '_//', '__', 'insert', 'Sub', 'Info', '(', 'sub', 'Info', 'DB', 'IO', ');', '_//', '_//', '_', 'ë', '§', '´', 'ë', '²', 'Ħ', 'ë', '³', 'Ģ', 'ì', 'Ī', 'ĺ', '_V', 'O', '_', 'ê', '°', 'Ĵ', '_', 'ì', 'Ħ', '¤', 'ì', 'ł', 'ķ', '_//', '_St', 'l', 'mnt', '.', 'set', 'St', 'l', 'mnt', 'Sub', 'Info', '(', 'sub', 'Info', ');', '_//', '_//', '_}', 'else', '_{', '_//', '_//', '_', 'ê', '¸', '°', '_', 'ì', '¡', '°', 'í', 'ļ', 'Į', '_', 'ë', 'Ĳ', 'ľ', '_', 'ê', '°', 'Ĵ', 'ì', 'Ĺ', 'Ĳ', '_update', 'ë', 'Ĳ', 'ĺ', 'ì', 'ĸ', '´', 'í', 'ķ', 'ł', '_', 'í', 'ķ', 'Ħ', 'ë', 'ĵ', 'ľ', '_', 'ì', 'Ħ', '¤', 'ì', 'ł', 'ķ', '_//', '_D', 'to', 'Utils', '.', 'set', 'Sub', 'Info', 'IO', '(', 'sub', 'Info', ',', '_sql', 'Out', ');', '_//', '_//', '_DB', 'IO', '_IO', 'ì', 'Ĺ', 'Ĳ', '</s>']
11/27/2023 18:37:01 - INFO - __main__ -   source_ids: 1 482 918 1923 1676 966 12 45 620 921 720 966 269 934 510 80 21818 2320 51 384 510 80 21818 2320 51 382 13 288 1194 18 4148 2932 1189 32 882 17 510 80 21818 1676 966 38 452 34 1923 1676 966 8863 368 446 866 309 12 1717 966 422 446 15329 604 394 605 452 3208 503 2932 37 2203 39 958 3784 26 3113 394 1033 8526 288 2211 18 588 797 7675 588 5784 461 17767 1769 289 1194 18 4148 2932 1189 32 882 17 510 80 21818 1676 966 38 452 34 1923 1676 966 446 866 1529 8863 368 404 18 2640 279 394 791 434 2383 1665 467 620 921 720 966 2290 4294 273 394 934 510 80 21818 2320 51 5621 368 576 18 542 3354 498 389 542 653 12 1717 966 2290 4294 16 384 510 80 21818 2320 51 382 1769 368 890 18 6283 467 1132 921 358 2383 4294 776 51 463 869 1989 18 542 1676 966 4294 12 1717 966 16 720 966 2290 4294 1769 368 1059 18 5688 720 7453 77 814 7664 12 172 116 117 173 99 113 172 108 232 173 231 121 13 389 6387 1676 966 12 1717 966 2290 4294 1769 1748 380 26319 806 172 237 247 225 173 233 240 173 231 114 173 256 231 225 172 239 227 172 119 227 172 119 231 2243 225 174 248 251 172 237 247 225 171 115 126 173 253 113 173 256 117 172 112 227 172 99 255 225 173 248 231 172 257 251 225 172 99 255 173 105 228 173 256 231 225 172 105 236 173 256 239 1195 368 467 620 921 1847 1182 273 7040 966 12 334 80 21818 1769 368 368 368 225 174 248 117 172 238 122 225 171 114 113 172 257 251 171 117 227 172 259 106 225 172 116 117 173 99 113 172 108 232 173 231 121 225 172 240 113 173 256 117 174 231 113 171 113 227 225 173 250 233 173 256 231 225 172 248 239 368 309 12 4669 1182 422 446 13 288 368 389 6387 1676 966 12 1717 966 2290 4294 1769 368 368 225 172 105 117 172 115 231 172 116 227 173 235 251 776 51 225 171 113 245 225 173 231 102 173 259 248 368 934 80 21818 18 542 510 80 21818 1676 966 12 1717 966 1769 368 368 289 12107 288 368 368 225 171 121 113 225 173 99 113 174 253 239 225 172 243 255 225 171 113 245 173 250 243 1089 172 243 251 173 249 117 174 248 259 225 174 248 231 172 246 255 225 173 231 102 173 259 248 368 463 869 1989 18 542 1676 966 4294 12 1717 966 16 1847 1182 1769 368 368 2383 4294 1665 173 250 243 2
11/27/2023 18:37:01 - INFO - __main__ -   source_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
11/27/2023 18:37:01 - INFO - __main__ -   target_tokens: ['<s>', 'Save', '_an', '_app', 'ra', 'is', 'al', '_prefer', 'ential', '_claim', '_sub', 'sid', 'i', 'ary', '_information', '.', '</s>']
11/27/2023 18:37:01 - INFO - __main__ -   target_ids: 1 4755 392 595 354 291 287 13256 2001 7516 720 7453 77 814 1779 18 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
11/27/2023 18:37:01 - INFO - __main__ -   target_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
11/27/2023 18:37:01 - INFO - __main__ -   *** Example ***
11/27/2023 18:37:01 - INFO - __main__ -   idx: 1
11/27/2023 18:37:01 - INFO - __main__ -   source_tokens: ['<s>', 'public', '_Map', '<', 'String', ',', '_String', '>', '_getMap', 'Sub', 'Info', '(', 'Arr', 'Real', 'Core', '_arr', 'Real', ')', '_throws', '_B', 'iz', 'Application', 'Exception', '_{', '_return', '__', 'get', 'Arr', 'Sub', 'Info', 'B', 'iz', '().', 'get', 'Map', 'Sub', 'Info', '((', 'Arr', 'Real', 'Impl', ')', '_arr', 'Real', ');', '_}', '</s>']
11/27/2023 18:37:01 - INFO - __main__ -   source_ids: 1 482 1635 32 780 16 514 34 15489 1676 966 12 5715 6955 4670 2454 6955 13 1216 605 452 3208 503 288 327 389 588 5715 1676 966 38 452 7675 588 863 1676 966 12443 5715 6955 2828 13 2454 6955 1769 289 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
11/27/2023 18:37:01 - INFO - __main__ -   source_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
11/27/2023 18:37:01 - INFO - __main__ -   target_tokens: ['<s>', 'In', 'quire', '_all', '_sub', 'sid', 'i', 'ary', '_information', '_of', '_the', '_asset', '_thing', '_as', '_a', '_map', '.', '</s>']
11/27/2023 18:37:01 - INFO - __main__ -   target_ids: 1 382 1039 777 720 7453 77 814 1779 434 326 3310 7757 487 279 852 18 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
11/27/2023 18:37:01 - INFO - __main__ -   target_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
11/27/2023 18:37:01 - INFO - __main__ -   *** Example ***
11/27/2023 18:37:01 - INFO - __main__ -   idx: 2
11/27/2023 18:37:01 - INFO - __main__ -   source_tokens: ['<s>', 'public', '_C', 'ust', 'Check', 'P', 'wd', 'Out', '_check', 'Password', '(', 'String', '_lo', 'in', 'Id', 'N', 'br', ',', '_String', '_ps', 'wd', ',', '_String', '_lo', 'in', 'T', 'p', 'Cd', ')', '_throws', '_B', 'iz', 'Application', 'Exception', '_{', '_if', '_(', 'String', 'Utils', '.', 'is', 'Empty', '(', 'ps', 'wd', '))', '_{', '_throw', '_new', '_B', 'iz', 'Application', 'Exception', '("', 'A', 'AP', 'C', 'ME', '000', '6', '",', '_new', '_String', '[]', '_{"', '@', 'ps', 'wd', '"', '});', '_}', '_if', '_(', 'String', 'Utils', '.', 'is', 'Empty', '(', 'lo', 'in', 'Id', 'N', 'br', '))', '_{', '_return', '__', 'get', 'C', 'ust', 'R', 'pr', 'sn', 'L', 'oin', 'Info', 'B', 'iz', '().', 'check', 'Password', '(', 'get', 'C', 'ust', 'R', 'pr', 'sn', 'Basic', 'Info', '(),', '_getC', 'ust', 'R', 'pr', 'sn', 'Login', 'Info', '(', 'get', 'C', 'ust', 'R', 'pr', 'sn', 'Basic', 'Info', '().', 'get', 'L', 'oin', 'Id', 'N', 'br', '()', '),', '_ps', 'wd', ',', '_lo', 'in', 'T', 'p', 'Cd', ',', '_get', 'Actor', 'Core', '().', 'get', 'List', 'Actor', 'Info', 'M', 'gmt', 'Item', '());', '_}', '_else', '_{', '_return', '__', 'get', 'C', 'ust', 'R', 'pr', 'sn', 'L', 'oin', 'Info', 'B', 'iz', '().', 'check', 'Password', '(', 'get', 'C', 'ust', 'R', 'pr', 'sn', 'Basic', 'Info', '(),', '_getC', 'ust', 'R', 'pr', 'sn', 'Login', 'Info', '(', 'lo', 'in', 'Id', 'N', 'br', '),', '_ps', 'wd', ',', '_lo', 'in', 'T', 'p', 'Cd', ',', '_get', 'Actor', 'Core', '().', 'get', 'List', 'Actor', 'Info', 'M', 'gmt', 'Item', '());', '_}', '_}', '</s>']
11/27/2023 18:37:01 - INFO - __main__ -   source_ids: 1 482 385 641 1564 52 3623 1182 866 3913 12 780 437 267 548 50 2848 16 514 4250 3623 16 514 437 267 56 84 19728 13 1216 605 452 3208 503 288 309 261 780 1989 18 291 1921 12 1121 3623 3719 288 604 394 605 452 3208 503 2932 37 2203 39 958 3784 26 3113 394 514 8526 12528 36 1121 3623 6 22938 289 309 261 780 1989 18 291 1921 12 383 267 548 50 2848 3719 288 327 389 588 39 641 54 683 8134 48 885 966 38 452 7675 1893 3913 12 588 39 641 54 683 8134 8252 966 9334 1927 641 54 683 8134 5358 966 12 588 39 641 54 683 8134 8252 966 7675 588 48 885 548 50 2848 1435 3631 4250 3623 16 437 267 56 84 19728 16 336 17876 4670 7675 588 682 17876 966 49 7714 1180 10663 289 469 288 327 389 588 39 641 54 683 8134 48 885 966 38 452 7675 1893 3913 12 588 39 641 54 683 8134 8252 966 9334 1927 641 54 683 8134 5358 966 12 383 267 548 50 2848 3631 4250 3623 16 437 267 56 84 19728 16 336 17876 4670 7675 588 682 17876 966 49 7714 1180 10663 289 289 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
11/27/2023 18:37:01 - INFO - __main__ -   source_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
11/27/2023 18:37:01 - INFO - __main__ -   target_tokens: ['<s>', 'It', '_checks', '_if', '_the', '_input', '_password', '_equals', '_with', '_the', '_registered', '_password', '_of', '_the', '_input', '_login', '_information', '.', '</s>']
11/27/2023 18:37:01 - INFO - __main__ -   target_ids: 1 7193 4271 309 326 810 2201 1606 598 326 4104 2201 434 326 810 3925 1779 18 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
11/27/2023 18:37:01 - INFO - __main__ -   target_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
11/27/2023 18:37:01 - INFO - __main__ -   *** Example ***
11/27/2023 18:37:01 - INFO - __main__ -   idx: 3
11/27/2023 18:37:01 - INFO - __main__ -   source_tokens: ['<s>', 'public', '_Ca', 'St', 'aff', 'Role', 'M', 'gmt', 'Svc', 'St', 'aff', 'Role', 'In', '_clone', '()', '{', '_try', '{', '_Ca', 'St', 'aff', 'Role', 'M', 'gmt', 'Svc', 'St', 'aff', 'Role', 'In', '_object', '=', '_(', 'Ca', 'St', 'aff', 'Role', 'M', 'gmt', 'Svc', 'St', 'aff', 'Role', 'In', ')', 'super', '.', 'clone', '();', '_return', '_object', ';', '_}', '_catch', '(', 'Clone', 'NotSupportedException', '_e', '){', '_throw', '_new', '_bx', 'm', '.', 'om', 'm', '.', 'exception', '.', 'Clone', 'FailedException', '();', '_}', '_}', '</s>']
11/27/2023 18:37:01 - INFO - __main__ -   source_ids: 1 482 23318 510 7329 2996 49 7714 17444 510 7329 2996 382 3236 1435 95 775 95 23318 510 7329 2996 49 7714 17444 510 7329 2996 382 733 33 261 23508 510 7329 2996 49 7714 17444 510 7329 2996 382 13 9565 18 14056 5621 327 733 31 289 1044 12 10930 25482 425 15329 604 394 24356 81 18 362 81 18 4064 18 10930 12417 5621 289 289 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
11/27/2023 18:37:01 - INFO - __main__ -   source_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
11/27/2023 18:37:01 - INFO - __main__ -   target_tokens: ['<s>', 'Clone', '_the', '_array', '.', '</s>']
11/27/2023 18:37:01 - INFO - __main__ -   target_ids: 1 10930 326 526 18 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
11/27/2023 18:37:01 - INFO - __main__ -   target_mask: 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
11/27/2023 18:37:01 - INFO - __main__ -   *** Example ***
11/27/2023 18:37:01 - INFO - __main__ -   idx: 4
11/27/2023 18:37:01 - INFO - __main__ -   source_tokens: ['<s>', 'public', '_String', '_getSub', 'Info', '(', 'C', 'ust', 'Core', '_c', 'ust', 'Core', ',', '_String', '_x', 'tn', 'A', 'tr', 'bt', 'Nm', ')', '_throws', '_B', 'iz', 'Application', 'Exception', '_{', '_return', '__', 'get', 'C', 'ust', 'Sub', 'Info', 'B', 'iz', '().', 'get', 'Sub', 'Info', '(', 'x', 'tn', 'A', 'tr', 'bt', 'Nm', ',', '_(', 'C', 'ust', 'Impl', ')', '_c', 'ust', 'Core', ');', '_}', '</s>']
11/27/2023 18:37:01 - INFO - __main__ -   source_ids: 1 482 514 7040 966 12 39 641 4670 276 641 4670 16 514 619 5088 37 313 23602 25246 13 1216 605 452 3208 503 288 327 389 588 39 641 1676 966 38 452 7675 588 1676 966 12 92 5088 37 313 23602 25246 16 261 39 641 2828 13 276 641 4670 1769 289 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
11/27/2023 18:37:01 - INFO - __main__ -   source_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
11/27/2023 18:37:01 - INFO - __main__ -   target_tokens: ['<s>', 'This', '_method', '_provides', '_to', '_in', 'quire', '_the', '_specific', '_sub', 'sid', 'i', 'ary', '_information', '_named', "_'", 'x', 'tn', 'A', 'tr', 'bt', 'Nm', "'.", '</s>']
11/27/2023 18:37:01 - INFO - __main__ -   target_ids: 1 2503 707 8121 358 316 1039 326 2923 720 7453 77 814 1779 4141 296 92 5088 37 313 23602 25246 10332 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
11/27/2023 18:37:01 - INFO - __main__ -   target_mask: 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
/home/ysnamgoong42/miniconda3/envs/xlcost/lib/python3.8/site-packages/transformers/optimization.py:407: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
11/27/2023 18:37:29 - INFO - __main__ -   ***** Running training *****
11/27/2023 18:37:29 - INFO - __main__ -     Num examples = 23679
11/27/2023 18:37:29 - INFO - __main__ -     Batch size = 16
11/27/2023 18:37:29 - INFO - __main__ -     Num epoch = 9
11/27/2023 18:38:26 - INFO - __main__ -     step 100 loss 0.4606
11/27/2023 18:39:23 - INFO - __main__ -     step 200 loss 0.3584
11/27/2023 18:40:20 - INFO - __main__ -     step 300 loss 0.3101
11/27/2023 18:41:17 - INFO - __main__ -     step 400 loss 0.2768
11/27/2023 18:42:14 - INFO - __main__ -     step 500 loss 0.2547
11/27/2023 18:43:12 - INFO - __main__ -     step 600 loss 0.233
11/27/2023 18:44:09 - INFO - __main__ -     step 700 loss 0.218
11/27/2023 18:45:06 - INFO - __main__ -     step 800 loss 0.205
11/27/2023 18:46:03 - INFO - __main__ -     step 900 loss 0.1943
11/27/2023 18:47:01 - INFO - __main__ -     step 1000 loss 0.1851
11/27/2023 18:47:58 - INFO - __main__ -     step 1100 loss 0.1783
11/27/2023 18:48:55 - INFO - __main__ -     step 1200 loss 0.1713
11/27/2023 18:49:52 - INFO - __main__ -     step 1300 loss 0.1649
11/27/2023 18:50:49 - INFO - __main__ -     step 1400 loss 0.159
11/27/2023 18:51:47 - INFO - __main__ -     step 1500 loss 0.1541
11/27/2023 18:52:44 - INFO - __main__ -     step 1600 loss 0.1495
11/27/2023 18:53:41 - INFO - __main__ -     step 1700 loss 0.1451
11/27/2023 18:54:38 - INFO - __main__ -     step 1800 loss 0.1409
11/27/2023 18:55:35 - INFO - __main__ -     step 1900 loss 0.1373
11/27/2023 18:56:33 - INFO - __main__ -     step 2000 loss 0.1336
11/27/2023 18:57:30 - INFO - __main__ -     step 2100 loss 0.1299
11/27/2023 18:58:27 - INFO - __main__ -     step 2200 loss 0.1268
11/27/2023 18:59:24 - INFO - __main__ -     step 2300 loss 0.1238
11/27/2023 19:00:21 - INFO - __main__ -     step 2400 loss 0.1209
11/27/2023 19:01:19 - INFO - __main__ -     step 2500 loss 0.1181
11/27/2023 19:02:16 - INFO - __main__ -     step 2600 loss 0.116
11/27/2023 19:03:13 - INFO - __main__ -     step 2700 loss 0.1135
11/27/2023 19:04:10 - INFO - __main__ -     step 2800 loss 0.1114
11/27/2023 19:05:07 - INFO - __main__ -     step 2900 loss 0.1091
11/27/2023 19:05:42 - INFO - __main__ -   
***** Running evaluation *****
11/27/2023 19:05:42 - INFO - __main__ -     Num examples = 1000
11/27/2023 19:05:42 - INFO - __main__ -     Batch size = 16
11/27/2023 19:05:54 - INFO - __main__ -     eval_ppl = 1.03998
11/27/2023 19:05:54 - INFO - __main__ -     global_step = 2959
11/27/2023 19:05:54 - INFO - __main__ -     train_loss = 0.108
11/27/2023 19:05:54 - INFO - __main__ -     ********************
11/27/2023 19:05:57 - INFO - __main__ -     Best ppl:1.03998
11/27/2023 19:05:57 - INFO - __main__ -     ********************
11/27/2023 19:20:41 - INFO - __main__ -     bleu-4 = 53.91 
11/27/2023 19:20:41 - INFO - __main__ -     xMatch = 51.1 
11/27/2023 19:20:41 - INFO - __main__ -     ********************
11/27/2023 19:20:41 - INFO - __main__ -     Best bleu:53.91
11/27/2023 19:20:41 - INFO - __main__ -     ********************
11/27/2023 19:21:07 - INFO - __main__ -     step 3000 loss 0.0448
11/27/2023 19:22:04 - INFO - __main__ -     step 3100 loss 0.0466
11/27/2023 19:23:01 - INFO - __main__ -     step 3200 loss 0.0478
11/27/2023 19:23:58 - INFO - __main__ -     step 3300 loss 0.0464
11/27/2023 19:24:55 - INFO - __main__ -     step 3400 loss 0.0457
11/27/2023 19:25:52 - INFO - __main__ -     step 3500 loss 0.0448
11/27/2023 19:26:50 - INFO - __main__ -     step 3600 loss 0.0434
11/27/2023 19:27:47 - INFO - __main__ -     step 3700 loss 0.0432
11/27/2023 19:28:44 - INFO - __main__ -     step 3800 loss 0.0426
11/27/2023 19:29:41 - INFO - __main__ -     step 3900 loss 0.0421
11/27/2023 19:30:39 - INFO - __main__ -     step 4000 loss 0.0414
11/27/2023 19:31:36 - INFO - __main__ -     step 4100 loss 0.0413
11/27/2023 19:32:33 - INFO - __main__ -     step 4200 loss 0.0408
11/27/2023 19:33:30 - INFO - __main__ -     step 4300 loss 0.0403
11/27/2023 19:34:27 - INFO - __main__ -     step 4400 loss 0.0398
11/27/2023 19:35:24 - INFO - __main__ -     step 4500 loss 0.0393
11/27/2023 19:36:22 - INFO - __main__ -     step 4600 loss 0.0391
11/27/2023 19:37:19 - INFO - __main__ -     step 4700 loss 0.0387
11/27/2023 19:38:17 - INFO - __main__ -     step 4800 loss 0.0383
11/27/2023 19:39:14 - INFO - __main__ -     step 4900 loss 0.0378
11/27/2023 19:40:11 - INFO - __main__ -     step 5000 loss 0.0373
11/27/2023 19:41:08 - INFO - __main__ -     step 5100 loss 0.0368
11/27/2023 19:42:06 - INFO - __main__ -     step 5200 loss 0.0366
11/27/2023 19:43:03 - INFO - __main__ -     step 5300 loss 0.0362
11/27/2023 19:44:00 - INFO - __main__ -     step 5400 loss 0.0358
11/27/2023 19:44:57 - INFO - __main__ -     step 5500 loss 0.0355
11/27/2023 19:45:55 - INFO - __main__ -     step 5600 loss 0.0352
11/27/2023 19:46:52 - INFO - __main__ -     step 5700 loss 0.0349
11/27/2023 19:47:49 - INFO - __main__ -     step 5800 loss 0.0346
11/27/2023 19:48:46 - INFO - __main__ -     step 5900 loss 0.0343
11/27/2023 19:48:56 - INFO - __main__ -   
***** Running evaluation *****
11/27/2023 19:48:56 - INFO - __main__ -     Num examples = 1000
11/27/2023 19:48:56 - INFO - __main__ -     Batch size = 16
11/27/2023 19:49:09 - INFO - __main__ -     eval_ppl = 1.03036
11/27/2023 19:49:09 - INFO - __main__ -     global_step = 5918
11/27/2023 19:49:09 - INFO - __main__ -     train_loss = 0.0342
11/27/2023 19:49:09 - INFO - __main__ -     ********************
11/27/2023 19:49:12 - INFO - __main__ -     Best ppl:1.03036
11/27/2023 19:49:12 - INFO - __main__ -     ********************
11/27/2023 20:03:40 - INFO - __main__ -     bleu-4 = 53.22 
11/27/2023 20:03:40 - INFO - __main__ -     xMatch = 54.4 
11/27/2023 20:03:40 - INFO - __main__ -     ********************
11/27/2023 20:04:27 - INFO - __main__ -     step 6000 loss 0.0241
11/27/2023 20:05:24 - INFO - __main__ -     step 6100 loss 0.0253
11/27/2023 20:06:21 - INFO - __main__ -     step 6200 loss 0.0251
11/27/2023 20:07:18 - INFO - __main__ -     step 6300 loss 0.0247
11/27/2023 20:08:15 - INFO - __main__ -     step 6400 loss 0.0242
11/27/2023 20:09:12 - INFO - __main__ -     step 6500 loss 0.0236
11/27/2023 20:10:09 - INFO - __main__ -     step 6600 loss 0.0234
11/27/2023 20:11:07 - INFO - __main__ -     step 6700 loss 0.0234
11/27/2023 20:12:04 - INFO - __main__ -     step 6800 loss 0.023
11/27/2023 20:13:01 - INFO - __main__ -     step 6900 loss 0.0227
11/27/2023 20:13:58 - INFO - __main__ -     step 7000 loss 0.0226
11/27/2023 20:14:55 - INFO - __main__ -     step 7100 loss 0.0225
11/27/2023 20:15:52 - INFO - __main__ -     step 7200 loss 0.0224
11/27/2023 20:16:49 - INFO - __main__ -     step 7300 loss 0.0222
11/27/2023 20:17:46 - INFO - __main__ -     step 7400 loss 0.0221
11/27/2023 20:18:43 - INFO - __main__ -     step 7500 loss 0.022
11/27/2023 20:19:41 - INFO - __main__ -     step 7600 loss 0.0218
11/27/2023 20:20:38 - INFO - __main__ -     step 7700 loss 0.0217
11/27/2023 20:21:35 - INFO - __main__ -     step 7800 loss 0.0215
11/27/2023 20:22:32 - INFO - __main__ -     step 7900 loss 0.0213
11/27/2023 20:23:30 - INFO - __main__ -     step 8000 loss 0.0211
11/27/2023 20:24:27 - INFO - __main__ -     step 8100 loss 0.0211
11/27/2023 20:25:24 - INFO - __main__ -     step 8200 loss 0.0209
11/27/2023 20:26:21 - INFO - __main__ -     step 8300 loss 0.0208
11/27/2023 20:27:18 - INFO - __main__ -     step 8400 loss 0.0206
11/27/2023 20:28:15 - INFO - __main__ -     step 8500 loss 0.0205
11/27/2023 20:29:12 - INFO - __main__ -     step 8600 loss 0.0204
11/27/2023 20:30:09 - INFO - __main__ -     step 8700 loss 0.0203
11/27/2023 20:31:06 - INFO - __main__ -     step 8800 loss 0.0202
11/27/2023 20:31:51 - INFO - __main__ -   
***** Running evaluation *****
11/27/2023 20:31:51 - INFO - __main__ -     Num examples = 1000
11/27/2023 20:31:51 - INFO - __main__ -     Batch size = 16
11/27/2023 20:32:03 - INFO - __main__ -     eval_ppl = 1.02656
11/27/2023 20:32:03 - INFO - __main__ -     global_step = 8877
11/27/2023 20:32:03 - INFO - __main__ -     train_loss = 0.0201
11/27/2023 20:32:03 - INFO - __main__ -     ********************
11/27/2023 20:32:06 - INFO - __main__ -     Best ppl:1.02656
11/27/2023 20:32:06 - INFO - __main__ -     ********************
11/27/2023 20:46:49 - INFO - __main__ -     bleu-4 = 55.0 
11/27/2023 20:46:49 - INFO - __main__ -     xMatch = 55.8 
11/27/2023 20:46:49 - INFO - __main__ -     ********************
11/27/2023 20:46:49 - INFO - __main__ -     Best bleu:55.0
11/27/2023 20:46:49 - INFO - __main__ -     ********************
11/27/2023 20:47:05 - INFO - __main__ -     step 8900 loss 0.0159
11/27/2023 20:48:01 - INFO - __main__ -     step 9000 loss 0.0169
11/27/2023 20:48:58 - INFO - __main__ -     step 9100 loss 0.0167
11/27/2023 20:49:55 - INFO - __main__ -     step 9200 loss 0.0164
11/27/2023 20:50:52 - INFO - __main__ -     step 9300 loss 0.0163
11/27/2023 20:51:49 - INFO - __main__ -     step 9400 loss 0.0161
11/27/2023 20:52:46 - INFO - __main__ -     step 9500 loss 0.016
11/27/2023 20:53:43 - INFO - __main__ -     step 9600 loss 0.016
11/27/2023 20:54:40 - INFO - __main__ -     step 9700 loss 0.0158
11/27/2023 20:55:37 - INFO - __main__ -     step 9800 loss 0.0157
11/27/2023 20:56:34 - INFO - __main__ -     step 9900 loss 0.0155
11/27/2023 20:57:31 - INFO - __main__ -     step 10000 loss 0.0156
11/27/2023 20:58:28 - INFO - __main__ -     step 10100 loss 0.0155
11/27/2023 20:59:25 - INFO - __main__ -     step 10200 loss 0.0154
11/27/2023 21:00:22 - INFO - __main__ -     step 10300 loss 0.0153
11/27/2023 21:01:19 - INFO - __main__ -     step 10400 loss 0.0153
11/27/2023 21:02:15 - INFO - __main__ -     step 10500 loss 0.0152
11/27/2023 21:03:12 - INFO - __main__ -     step 10600 loss 0.0152
11/27/2023 21:04:09 - INFO - __main__ -     step 10700 loss 0.0151
11/27/2023 21:05:06 - INFO - __main__ -     step 10800 loss 0.0151
11/27/2023 21:06:03 - INFO - __main__ -     step 10900 loss 0.015
11/27/2023 21:07:00 - INFO - __main__ -     step 11000 loss 0.0149
11/27/2023 21:07:56 - INFO - __main__ -     step 11100 loss 0.0149
11/27/2023 21:08:54 - INFO - __main__ -     step 11200 loss 0.0148
11/27/2023 21:09:51 - INFO - __main__ -     step 11300 loss 0.0147
11/27/2023 21:10:47 - INFO - __main__ -     step 11400 loss 0.0146
11/27/2023 21:11:44 - INFO - __main__ -     step 11500 loss 0.0146
11/27/2023 21:12:41 - INFO - __main__ -     step 11600 loss 0.0145
11/27/2023 21:13:38 - INFO - __main__ -     step 11700 loss 0.0145
11/27/2023 21:14:35 - INFO - __main__ -     step 11800 loss 0.0144
11/27/2023 21:14:56 - INFO - __main__ -   
***** Running evaluation *****
11/27/2023 21:14:56 - INFO - __main__ -     Num examples = 1000
11/27/2023 21:14:56 - INFO - __main__ -     Batch size = 16
11/27/2023 21:15:08 - INFO - __main__ -     eval_ppl = 1.02521
11/27/2023 21:15:08 - INFO - __main__ -     global_step = 11836
11/27/2023 21:15:08 - INFO - __main__ -     train_loss = 0.0144
11/27/2023 21:15:08 - INFO - __main__ -     ********************
11/27/2023 21:15:11 - INFO - __main__ -     Best ppl:1.02521
11/27/2023 21:15:11 - INFO - __main__ -     ********************
11/27/2023 21:29:40 - INFO - __main__ -     bleu-4 = 54.82 
11/27/2023 21:29:40 - INFO - __main__ -     xMatch = 55.8 
11/27/2023 21:29:40 - INFO - __main__ -     ********************
11/27/2023 21:30:16 - INFO - __main__ -     step 11900 loss 0.0121
11/27/2023 21:31:12 - INFO - __main__ -     step 12000 loss 0.0128
11/27/2023 21:32:09 - INFO - __main__ -     step 12100 loss 0.0127
11/27/2023 21:33:06 - INFO - __main__ -     step 12200 loss 0.0127
11/27/2023 21:34:03 - INFO - __main__ -     step 12300 loss 0.0126
11/27/2023 21:35:00 - INFO - __main__ -     step 12400 loss 0.0125
11/27/2023 21:35:56 - INFO - __main__ -     step 12500 loss 0.0124
11/27/2023 21:36:53 - INFO - __main__ -     step 12600 loss 0.0125
11/27/2023 21:37:50 - INFO - __main__ -     step 12700 loss 0.0124
11/27/2023 21:38:47 - INFO - __main__ -     step 12800 loss 0.0123
11/27/2023 21:39:44 - INFO - __main__ -     step 12900 loss 0.0122
11/27/2023 21:40:41 - INFO - __main__ -     step 13000 loss 0.0122
11/27/2023 21:41:38 - INFO - __main__ -     step 13100 loss 0.0122
11/27/2023 21:42:34 - INFO - __main__ -     step 13200 loss 0.0121
11/27/2023 21:43:31 - INFO - __main__ -     step 13300 loss 0.0121
11/27/2023 21:44:28 - INFO - __main__ -     step 13400 loss 0.012
11/27/2023 21:45:25 - INFO - __main__ -     step 13500 loss 0.012
11/27/2023 21:46:22 - INFO - __main__ -     step 13600 loss 0.012
11/27/2023 21:47:19 - INFO - __main__ -     step 13700 loss 0.0119
11/27/2023 21:48:16 - INFO - __main__ -     step 13800 loss 0.0119
11/27/2023 21:49:13 - INFO - __main__ -     step 13900 loss 0.0119
11/27/2023 21:50:09 - INFO - __main__ -     step 14000 loss 0.0119
11/27/2023 21:51:06 - INFO - __main__ -     step 14100 loss 0.0119
11/27/2023 21:52:03 - INFO - __main__ -     step 14200 loss 0.0118
11/27/2023 21:52:59 - INFO - __main__ -     step 14300 loss 0.0118
11/27/2023 21:53:56 - INFO - __main__ -     step 14400 loss 0.0117
11/27/2023 21:54:53 - INFO - __main__ -     step 14500 loss 0.0117
11/27/2023 21:55:50 - INFO - __main__ -     step 14600 loss 0.0117
11/27/2023 21:56:46 - INFO - __main__ -     step 14700 loss 0.0116
11/27/2023 21:57:40 - INFO - __main__ -   
***** Running evaluation *****
11/27/2023 21:57:40 - INFO - __main__ -     Num examples = 1000
11/27/2023 21:57:40 - INFO - __main__ -     Batch size = 16
11/27/2023 21:57:52 - INFO - __main__ -     eval_ppl = 1.0245
11/27/2023 21:57:52 - INFO - __main__ -     global_step = 14795
11/27/2023 21:57:52 - INFO - __main__ -     train_loss = 0.0116
11/27/2023 21:57:52 - INFO - __main__ -     ********************
11/27/2023 21:57:55 - INFO - __main__ -     Best ppl:1.0245
11/27/2023 21:57:55 - INFO - __main__ -     ********************
11/27/2023 22:12:47 - INFO - __main__ -     bleu-4 = 55.17 
11/27/2023 22:12:47 - INFO - __main__ -     xMatch = 56.6 
11/27/2023 22:12:47 - INFO - __main__ -     ********************
11/27/2023 22:12:47 - INFO - __main__ -     Best bleu:55.17
11/27/2023 22:12:47 - INFO - __main__ -     ********************
11/27/2023 22:13:47 - INFO - __main__ -   Namespace(adam_epsilon=1e-08, beam_size=5, config_name='Salesforce/codet5-base', dev_filename=None, do_eval=False, do_lower_case=False, do_test=True, do_train=False, eval_batch_size=16, eval_steps=-1, gradient_accumulation_steps=1, learning_rate=5e-05, load_model_path='/home/ysnamgoong42/ws/BANKWAREGLOBAL/#WORKSPACE/4_2023-11-24_CodeBase/saved_models/Salesforce/codet5-base/checkpoint-best-ppl/pytorch_model.bin', local_rank=-1, max_grad_norm=1.0, max_source_length=512, max_steps=-1, max_target_length=128, model_name_or_path='Salesforce/codet5-base', model_type='codet5', no_cuda=False, num_train_epochs=3.0, output_dir='/home/ysnamgoong42/ws/BANKWAREGLOBAL/#WORKSPACE/4_2023-11-24_CodeBase/saved_models/Salesforce/codet5-base', seed=42, test_filename='/home/ysnamgoong42/ws/BANKWAREGLOBAL/#WORKSPACE/4_2023-11-24_CodeBase/dataset/test.java,/home/ysnamgoong42/ws/BANKWAREGLOBAL/#WORKSPACE/4_2023-11-24_CodeBase/dataset/test.txt', tokenizer_name='Salesforce/codet5-base', train_batch_size=8, train_filename=None, train_steps=-1, warmup_steps=0, weight_decay=0.0)
11/27/2023 22:13:47 - WARNING - __main__ -   Process rank: -1, device: cuda, n_gpu: 1, distributed training: False
11/27/2023 22:13:50 - INFO - __main__ -   reload model from /home/ysnamgoong42/ws/BANKWAREGLOBAL/#WORKSPACE/4_2023-11-24_CodeBase/saved_models/Salesforce/codet5-base/checkpoint-best-ppl/pytorch_model.bin
11/27/2023 22:13:55 - INFO - __main__ -   Test file: /home/ysnamgoong42/ws/BANKWAREGLOBAL/#WORKSPACE/4_2023-11-24_CodeBase/dataset/test.java,/home/ysnamgoong42/ws/BANKWAREGLOBAL/#WORKSPACE/4_2023-11-24_CodeBase/dataset/test.txt
files:  ['/home/ysnamgoong42/ws/BANKWAREGLOBAL/#WORKSPACE/4_2023-11-24_CodeBase/dataset/test.java,/home/ysnamgoong42/ws/BANKWAREGLOBAL/#WORKSPACE/4_2023-11-24_CodeBase/dataset/test.txt']
  0%|          | 0/63 [00:00<?, ?it/s]  2%|▏         | 1/63 [00:09<09:33,  9.26s/it]  3%|▎         | 2/63 [00:16<08:28,  8.34s/it]  5%|▍         | 3/63 [00:22<06:51,  6.86s/it]  6%|▋         | 4/63 [00:30<07:19,  7.44s/it]  8%|▊         | 5/63 [00:37<06:54,  7.15s/it] 10%|▉         | 6/63 [00:43<06:40,  7.03s/it] 11%|█         | 7/63 [00:52<07:08,  7.65s/it] 13%|█▎        | 8/63 [01:00<07:07,  7.77s/it] 14%|█▍        | 9/63 [01:09<07:10,  7.98s/it] 16%|█▌        | 10/63 [01:18<07:31,  8.53s/it] 17%|█▋        | 11/63 [01:29<07:47,  9.00s/it] 19%|█▉        | 12/63 [01:38<07:53,  9.29s/it] 21%|██        | 13/63 [01:50<08:13,  9.87s/it] 22%|██▏       | 14/63 [01:59<07:48,  9.56s/it] 24%|██▍       | 15/63 [02:09<07:57,  9.95s/it] 25%|██▌       | 16/63 [02:22<08:20, 10.65s/it] 27%|██▋       | 17/63 [02:34<08:32, 11.15s/it] 29%|██▊       | 18/63 [02:47<08:45, 11.67s/it] 30%|███       | 19/63 [03:00<08:52, 12.10s/it] 32%|███▏      | 20/63 [03:14<09:00, 12.58s/it] 33%|███▎      | 21/63 [03:28<09:09, 13.08s/it] 35%|███▍      | 22/63 [03:41<09:00, 13.18s/it] 37%|███▋      | 23/63 [03:53<08:35, 12.88s/it] 38%|███▊      | 24/63 [04:07<08:27, 13.01s/it] 40%|███▉      | 25/63 [04:22<08:38, 13.65s/it] 41%|████▏     | 26/63 [04:37<08:42, 14.12s/it] 43%|████▎     | 27/63 [04:51<08:30, 14.19s/it] 44%|████▍     | 28/63 [05:05<08:11, 14.03s/it] 46%|████▌     | 29/63 [05:20<08:01, 14.15s/it] 48%|████▊     | 30/63 [05:35<07:58, 14.49s/it] 49%|████▉     | 31/63 [05:49<07:42, 14.46s/it] 51%|█████     | 32/63 [06:05<07:43, 14.95s/it] 52%|█████▏    | 33/63 [06:23<07:50, 15.67s/it] 54%|█████▍    | 34/63 [06:41<07:54, 16.36s/it] 56%|█████▌    | 35/63 [06:58<07:43, 16.54s/it] 57%|█████▋    | 36/63 [07:16<07:42, 17.13s/it] 59%|█████▊    | 37/63 [07:33<07:26, 17.15s/it] 60%|██████    | 38/63 [07:53<07:25, 17.83s/it] 62%|██████▏   | 39/63 [08:13<07:23, 18.48s/it] 63%|██████▎   | 40/63 [08:33<07:15, 18.94s/it] 65%|██████▌   | 41/63 [08:53<07:07, 19.44s/it] 67%|██████▋   | 42/63 [09:15<07:02, 20.11s/it] 68%|██████▊   | 43/63 [09:34<06:36, 19.80s/it] 70%|██████▉   | 44/63 [09:54<06:14, 19.71s/it] 71%|███████▏  | 45/63 [10:15<06:04, 20.24s/it] 73%|███████▎  | 46/63 [10:35<05:40, 20.02s/it] 75%|███████▍  | 47/63 [10:57<05:29, 20.59s/it] 76%|███████▌  | 48/63 [11:18<05:12, 20.84s/it] 78%|███████▊  | 49/63 [11:39<04:52, 20.86s/it] 79%|███████▉  | 50/63 [12:00<04:33, 21.05s/it] 81%|████████  | 51/63 [12:24<04:20, 21.73s/it] 83%|████████▎ | 52/63 [12:46<04:02, 22.01s/it] 84%|████████▍ | 53/63 [13:10<03:45, 22.56s/it] 86%|████████▌ | 54/63 [13:35<03:27, 23.09s/it] 87%|████████▋ | 55/63 [13:58<03:04, 23.11s/it] 89%|████████▉ | 56/63 [14:21<02:41, 23.04s/it] 90%|█████████ | 57/63 [14:44<02:18, 23.02s/it] 92%|█████████▏| 58/63 [15:07<01:56, 23.24s/it] 94%|█████████▎| 59/63 [15:32<01:34, 23.68s/it] 95%|█████████▌| 60/63 [15:59<01:13, 24.54s/it] 97%|█████████▋| 61/63 [16:25<00:50, 25.03s/it] 98%|█████████▊| 62/63 [16:51<00:25, 25.28s/it]100%|██████████| 63/63 [17:14<00:00, 24.67s/it]100%|██████████| 63/63 [17:14<00:00, 16.42s/it]
11/27/2023 22:31:11 - INFO - __main__ -     bleu-4 = 56.31 
11/27/2023 22:31:11 - INFO - __main__ -     xMatch = 56.4 
11/27/2023 22:31:11 - INFO - __main__ -     ********************
========================================================================================================================
SRC:
static boolean isValid(String value) throws BizApplicationException { if(!StringCoreUtils.isEmpty( value)) { for (ReportKndCoreEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } throw new BizApplicationException("AAPATE0028", new Object[] {value, "@AssetXtnAtrbtNm"});//({0}) is invalid {1}. } return true; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void delete(InsrncStsChngIn in) throws BizApplicationException { InsrncStsCoreEnum afStstCd = InsrncStsCoreEnum.CANCELED; // 1. 입력값 검증 _checkStsChnginput(in, afStstCd); // 2. 보증기본 설정상태 변경 ("취소"상태로 변경) _getInsrncBsicBiz().changeInsrnStatus(this, in, afStstCd.getValue()); }
TGT:
Delete the security interest.
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  20.56
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, String txDt, Integer txSeqNbr, ArrRealImpl arrRealImpl) throws BizApplicationException { // null check if (StringUtils.isEmpty(xtnAtrbtNm)){ return; } // 1. 보조명세 종류 조회 ArrSubInfoKndEnum subInfoKnd = arrRealImpl.getSubInfoKnd(); // 2. 계약에 저장된 보조명세 캐시 조회결과에 따라 insert/update 판단 IValueObject subInfoCache = getSubInfoCache(arrRealImpl); if (subInfoCache == null) { // DBIO VO new instance subInfoCache = _getNewSubInfoSqlIO(subInfoKnd); subInfoCache.set("arrId", arrRealImpl.getArrId()); // 빈 이력 생성 --> undo 시 확장속성 저장 이전으로 속성값을 원복시키기 위함 _saveSubInfoHst(arrRealImpl, subInfoKnd, subInfoCache, txDt, txSeqNbr); // 입력된 속성명/속성값을 DBIO VO에 set DtoUtils.setSubInfoIO(xtnAtrbtNm, xtnAtrbtCntnt, subInfoCache); // insert _insertSubInfo(subInfoKnd, subInfoCache); // save cache arrRealImpl.saveSubInfoCache(XtnTableEnum.AR_ARR_M.getValue(), subInfoCache); } else { // 속성�
TGT:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isValidType(AtrbtTpEnum atrbtTp, String atrbtCntnt) throws BizApplicationException { if (logger.isDebugEnabled()) { logger.debug("atrbtTpCd={}", atrbtTp); logger.debug("atrbtCntnt={}", atrbtCntnt); } if (atrbtTp == null) { throw new BizApplicationException("AAPCME0037", new Object[] { atrbtTp }); } // Validate attribute type switch (atrbtTp) { case TEXT: // text return (StringCoreUtils.isEmpty(atrbtCntnt)) ? false : true; case TEXT_DATE: // date return DateCoreUtils.isValidDate(atrbtCntnt); case TEXT_NUMBER: // number return DataCheckCoreUtils.isNumeric(atrbtCntnt); case NUMBER: // number return DataCheckCoreUtils.isNumeric(atrbtCntnt); case TEXT_ALPHA_NUMERIC: // Alpha-Number return DataCheckCoreUtils.isAlphaNumeric(atrbtCntnt); case YES_OR_NO: // yes or no return (CCM01.YES.equals(atrbtCntnt) || CCM01.NO.equals(atrbtCntnt)) ? true : false; case PASSWORD: // Password return DataCheckCoreUtils.isValidPassword(atrbtCntnt); case TIMESTAMP: // timestamp return true; case JSON: // json return DataCheckCoreUtils.isJson(atrbtCntnt); case EMPTY: return true; default: throw new BizApplicationException("AAPCME0037", new Object[] { atrbtTp }); } }
TGT:
Validate that the value of the input attribute matches the type of the attribute.
PRED:
Validate that the value of the input attribute matches the type of the attribute.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArrTx cancel() throws BizApplicationException { // 취소가능거래여부 확인 if(!_cancelableTxYn()) { throw new BizApplicationException("AAPSTE0206", new String[] {this.getSrvcNm()}); } // 취소거래 생성 ArrTx cnclArrTx = _createCnclTx(null, null, null, null); // 원거래의 취소정보 update super.modifyCancelArrTxInfo(cnclArrTx.getTxStsCd(), cnclArrTx.getTxDt(), cnclArrTx.getTxSeqNbr()); // 취소에 의한 거래후잔액 갱신 _modifyTxAfBalBasedOnCancel(); // 여신 undo 수행 _loanUndo(); // 세금취소(인지세 + 세금) _calcelTax(this.getArrId(), this.getTxDt(), this.getTxSeqNbr(), cnclArrTx.getTxDt(), cnclArrTx.getTxSeqNbr()); //일일결산 관련 취소 로직 추가 _getDailyAcrlStlmntBiz().cancelSettlement(getArr().getArrId(), getTxDt(), getTxSeqNbr()); _arrUndo(this.getArr()); return cnclArrTx; }
TGT:
This method cancels arrangement transactions. The main flow of normal transaction cancellation is as follows. 1. Verify the service limit of the product. 2. Verify the data to generate the cancellation transaction. 3. Set the transaction status code of the cancellation transaction according to the transaction date. 3.1 If the transaction date is today, set it to cancel. 3.2 If the transaction date is not today, set it to correction. 4. Set cancellation transaction information using original transaction. 5. Establishes the extend information of the cancellation transaction. 6. Set the Entry(deposit withdrawal history of transaction
PRED:
This method cancels arrangement transactions. The main flow of normal transaction cancellation is as follows. 1. Verify the service limit of the product. 2. Verify the data to generate the cancellation transaction. 3. Set the transaction status code of the cancellation transaction according to the transaction date. 3.1 If the transaction date is today, set it to cancel. 3.2 If the transaction date is not today, set it to correction. 4. Set cancellation transaction information using original transaction. 5. Establishes the extend information of the cancellation transaction. 6. Set the Entry(deposit withdrawal history of transaction
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<PdTxSrvcIO> getListPdTmpltCd(PdTxSrvcIO in) throws BizApplicationException { return _convertPdTxSvcIOList2PdTxSrvcIOList(_convertToPdTxSvcIOList(_getListPdTmpltCdCmb(in))); }
TGT:
Methods to query product template information
PRED:
Methods to query product template information
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<GlRptMgmtReportOut> getListTxDtGlRptBs(GlRptMgmtReportIn in, Integer pageNum, Integer pageCount) throws BizApplicationException{ _checkInputData(in.getInqryKndDscd(), "inqryKndDstnctnCd"); _checkDate(in.getBaseDt()); _checkInputData(in.getDeptId(), "deptId"); _checkInputData(in.getCrncyCd(), "crncyCd"); // if(pageNum == null || pageNum == 0) pageNum = 1; // if(pageCount == null || pageCount == 0) pageCount = PaginationUtils.PAGE_COUNT; List<GlRptMgmtReportOut> outList = new ArrayList<GlRptMgmtReportOut>(); List<GlRptMgmtReportOut> debitList = new ArrayList<GlRptMgmtReportOut>(); // 차변 List<GlRptMgmtReportOut> creditList = new ArrayList<GlRptMgmtReportOut>(); // 대변 String kndType = in.getInqryKndDscd(); if(GlQryKndDscdEnum.BALANCE_SHEET.getValue().equals(kndType)){ kndType = BsisDscdEnum.BS.getValue(); //대차대조표 }else if(GlQryKndDscdEnum.INCOME_STATEMENT.getValue().equals(kndType)){ kndType = BsisDscdEnum.IS.getValue(); //손익계산서 } Map<String, AcGlMIO> acGlMap = new HashMap<String, AcGlMIO>(); // 실계정과목의 상위계정 합산 결과를 담을 맵 /** * process net profit or loss */ _processProfitLossAccountingBal(in, acGlMap); /** * process general ledger's up accounting item code */
TGT:
It inquires general ledger balance sheet/income statement list in transaction date. It inquires balance sheet/income statement/business report in accordance with the inquiry kind distinction code, (inquiry kind distinction code : 01-balance sheet / 02-income statement) It makes the upper accounting item code of the real title accounting item code look like it is decided because transaction date is before the general ledger is decided. It returns general ledger as a form of report order by accounting output sequence number.
PRED:
It inquires general ledger's balance sheet/income statement list. It inquires balance sheet/income statement/business report in accordance with the inquiry kind distinction code, (inquiry kind distinction code : 01-balance sheet / 02-income statement) It returns general ledger's balance sheet/income statement list.
test 샘플별 bleu-4:  27.17
========================================================================================================================
SRC:
protected void modify(CustImpl custImpl, List<AtCustDocRIO> atCustDocRIOList) throws BizApplicationException { if (atCustDocRIOList.isEmpty()) { return; } AtCustMIO atCustMIO = custImpl.getCustBsicCache(); for (AtCustDocRIO atCustDocRIO : atCustDocRIOList) { atCustDocRIO.setInstCd(atCustMIO.getInstCd()); atCustDocRIO.setCustId(atCustMIO.getCustId()); atCustDocRIO.setRelEndDt(DateUtils.getDateDayBefore(1, _getCmnContext().getTxDate())); // Get registered data AtCustDocRIO lastCustDocRIO = _getAtCustDocRDso().selectListByDocIssueId(atCustMIO.getInstCd(), atCustMIO.getCustId(), atCustDocRIO.getDocIssueId()); if (lastCustDocRIO == null) { throw new BizApplicationException("AAPATE0016", new Object[]{ "@custDocRel", "@docIssueId", atCustDocRIO.getDocIssueId()}); } _getAtCustDocRDso().update(atCustDocRIO); } }
TGT:
Change arrangement information(Conditions, extended attributes, and other arrangement informations) immediately by service type of modification arrangement.
PRED:
It modifies customer agreement code information list. If registered information by the same institution code and agreement type code exists, throws exception.
test 샘플별 bleu-4:  6.59
========================================================================================================================
SRC:
public boolean checkCode(String cdNbr, String cd) throws BizApplicationException { return _checkCode(cdNbr, cd); }
TGT:
It check code number & code value. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter
PRED:
It check code number & code value by cdDtlIO DTO. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter.
test 샘플별 bleu-4:  79.75
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> subInfoMap, DeptImpl deptImpl) throws BizApplicationException { // 0. null check if(subInfoMap==null || subInfoMap.isEmpty()) { return; } // 2. 보조원장 캐시 조회결과에 따라 insert/update 판단 AtDeptSIO subInfoIO = getSubInfoCache(deptImpl); if (subInfoIO == null) { // DBIO VO new instance subInfoIO = new AtDeptSIO(); subInfoIO.setDeptId(deptImpl.getDeptId()); // 입력된 Map을 DBIO VO에 반영 DtoUtils.setSubInfoIO(subInfoMap, subInfoIO); // insert _getAtDeptSDso().insert(subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(subInfoMap, subInfoIO)) { return; } // 변경전 이력 저장 _saveSubInfoHst(deptImpl, subInfoIO); // 입력된 Map을 DBIO VO에 반영 DtoUtils.setSubInfoIO(subInfoMap, subInfoIO); // update _getAtDeptSDso().update(subInfoIO); } // 2. 캐시 저장 deptImpl.setSubInfoCache(subInfoIO); }
TGT:
Save the appraisal subsidiary information using map.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  6.11
========================================================================================================================
SRC:
public CndVal getCndVal(List<ProvideCnd> prvdCndList) throws BizApplicationException { if (isComplexCnd()) { // Error if complex condition throw new BizApplicationException("AAPPDE0004", null); } CndVal cndVal = null; // Set input PdPdCndSimpleSearchIn inDao = new PdPdCndSimpleSearchIn(); inDao.setTntInstId(getInstCd()); inDao.setAplyStartDt(_getAplyStartDt()); inDao.setCndCd(getCndCd()); inDao.setCndGrpCd(getCndGrpCd()); inDao.setCndGrpTmpltCd(getCndGrpTmpltCd()); if (isListCnd()) { // 목록조건값 조회 cndVal = _getListCndValue(inDao); } else if (isRngCnd()) { // 범위조건값 조회 cndVal = _getRangeCndValue(inDao); } /* * else if (isIntCnd()) { // 우대금리일 경우 제공조건에따른 규칙을 계산하여 아래 로직을 태울지말지 결정 if * (isPreferentialInterestCnd() && * !isPreferentialInterestProvideCndApplyRulePass(prvdCndList)) { return null; } * * // 금리조건값 조회 cndVal = _getInterestCndValue(inDao); * * } else if (isFeeCnd()) { // 수수료조건값 조회 cndVal = _getFeeC
TGT:
This method inquire condition value.
PRED:
This method get the arrangement condition value as string. For list type condition, return list code and the other type return the string number applied the scale 2.
test 샘플별 bleu-4:  6.12
========================================================================================================================
SRC:
public ScrtyIntMngrSvcGetIn clone(){ try{ ScrtyIntMngrSvcGetIn object= (ScrtyIntMngrSvcGetIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArrRealImpl getArrReal(ArArrMIO arArrMIO) throws BizApplicationException { return (ArrRealImpl) super.getArrRealCore(arArrMIO); }
TGT:
This method inquire arrangement using account number and account number distinction code. If there are several arrangements by account number, inquire last nthNbr of arrangement. Detail function description refers to {@link #getArrReal(ArrRealGetIn)}.
PRED:
Inquire real arrangement using arrangement id (internal use) or business key like account number, application number , mobile number so on. All types of arrangement objects that are subclasses of ArrReal can be queried. Detail function description refers to {@link #getArr(ArrRealGetIn)}.
test 샘플별 bleu-4:  17.29
========================================================================================================================
SRC:
public ArrExtrnlIdNbrInfo getArrExtrnlIdNbrInfo(String arrExtrnlIdNbrTpCd) throws BizApplicationException { return _getArrRealCoreFundamentalAgent().getArrExtrnlIdNbrInfo(arrExtrnlIdNbrTpCd, this); }
TGT:
Inquire external id number information of specific type registerd to arrangement.
PRED:
Inquire external id number information of specific type registerd to arrangement.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void getSubInfo(List<StlmntDtlIO> stlmntDtlIOList) throws BizApplicationException { // 1.목록별 CTI 확장속성 조회 if(stlmntDtlIOList != null && !stlmntDtlIOList.isEmpty()) { for(StlmntDtlIO stlmnt : stlmntDtlIOList) { // 2.정산보조명세 DBIO VO에 검색Key값 set (검색key: 계약식별자, 거래일, 거래일련번호, 금액유형, 환입환출구분) StStlmntSIO stStlmntSIOIn = new StStlmntSIO(); _setStlmntSKey(stStlmntSIOIn, stlmnt); // 3.정산보조명세 CTI 확장속성MAP 조회 Map<String, String> stlmntSubInfoMap = _getStlmntSubInfoBiz().getMapSubInfo(stStlmntSIOIn); // 4.정산보조명세Map을 기존 정산기본 확장정보(stlmntXtnInfoList)에 조립됨 if(stlmntSubInfoMap != null) { _assembleStlmntXtnInfoOut(stlmntSubInfoMap, stlmnt, stlmnt.getStlmntXtnInfoList()); } for(StlmntCalcnDtlIO calcnDtl : stlmnt.getStlmntCal
TGT:
Inquire a specific subsidiary information of the asset transaction.
PRED:
This method provides to inquire the specific subsidiary information named 'xtnAtrbtNm'.
test 샘플별 bleu-4:  22.42
========================================================================================================================
SRC:
public List<ArrReal> getListArrBasedOnStsHistory(String deptId, ArrDeptRelEnum arrDeptRel, String bizDscd, String pdTpCd, String pdTmpltCd, ArrStsEnum curArrSts, ArrStsEnum arrSts, String inqryStartDt, String inqryEndDt, int pgNbr, int pgCnt) throws BizApplicationException { return _getArrDeptRelImpl().getArrListBasedOnArrStatusHistory(deptId, bizDscd, pdTpCd, pdTmpltCd, null, arrDeptRel, curArrSts, arrSts, null, inqryStartDt, inqryEndDt, pgNbr, pgCnt, false); }
TGT:
Inquire specific customer own (as main contractor) arrangements whose status changed into specific status within inquiry period and currently in another specific status. Current Status / Base Status / Inquiry Period(Start Date / End Date) Approved / Applied / 1/1 ~ 3/1 : Get arrangement applied within 1/1 ~ 3/1 and approved currently. Arrangement whose status was changed into other status on 1/1 is not inquired. Active / Applied / 1/1 ~ 3/1 : Get arrangement applied within 1/1 ~ 3/1
PRED:
Inquire specific customer own (as main contractor) arrangements of specific product hierarchy whose status changed into specific status within inquiry period and currently in another specific status. Current Status / Base Status / Inquiry Period(Start Date / End Date) Approved / Applied / 1/1 ~ 3/1 : Get arrangement applied within 1/1 ~ 3/1 and approved currently. Arrangement whose status was changed into other status on 1/1 is not inquired. Active / Applied / 1/1 ~ 3/1 : Get arrangement applied within 1/1
test 샘플별 bleu-4:  93.3
========================================================================================================================
SRC:
public void doServiceAction(String arrSrvcTpCd, ArrCndActionRequiredValue arrCndActionRequiredValue) throws BizApplicationException { ArrSrvcEnum arrSrvcEnum = ArrSrvcEnum.getEnum(arrSrvcTpCd); if( arrSrvcEnum == null ) { // there are no condition action for this condition ({0},{1}) on arrangement service ({2}) // 계약서비스 ({2})를 위한 조건 ({0},{1})의 행동은 유효하지 않습니다 throw new BizApplicationException("AAPARE0288", new Object[]{this.getCndCd(), this.getCndCdNm(), arrSrvcTpCd}); } switch(arrSrvcEnum) { // 수입신용장개설 case OPEN_IMPORT_LC : case OPEN_NON_LC : _validateUsanceTypeByLcKind(arrSrvcTpCd, arrCndActionRequiredValue); break; // B/L인수 case ACCEPT_BL : _validateBlAcceptanceTransaction(arrSrvcTpCd, arrCndActionRequiredValue); break; default: // there are no condition action for this condition ({0},{1}) on arrangement service ({2}) // 계약서비스 ({2})를 위한 조건 ({0},{1})의 행동은 유효하지 않습니다 throw new BizApplicationException("AAPARE0288" , new Object[]{this.getCndCd(),this.getCndCdNm(),arrSrvcTpCd}); } }
TGT:
Process the special condition related actions for input service according to product condition value or negotiated value. For example, the "Required document" condition has the product required document type for loan application service. The arrangement condition action validate the required document type is received (presented) or not. Another example is the deposit open service, "Interest capitalization YN" condition dose the action to make an interest capitalization arrangement plan on next planed date. This method performs the function of performing product condition management rule registered on system. Implementation of condition management rule : - The rules that should be processed in
PRED:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
test 샘플별 bleu-4:  15.44
========================================================================================================================
SRC:
public void isDefinedProduct(String arrArrRelCd, String bizDscd, String pdTpCd, String pdTmpltCd, String pdCd) throws BizApplicationException { ArArrArrRelPdRuleMIO arArrArrRelPdRuleMIO = new ArArrArrRelPdRuleMIO(); arArrArrRelPdRuleMIO.setInstCd(_getCmnContextCore().getInstCode()); arArrArrRelPdRuleMIO.setArrArrRelCd(arrArrRelCd); // 해당 계약계약관계에 상품목록이 정의되어있는지 확인 List<ArArrArrRelPdRuleMIO> arrArrRelPdRuleList = _getArArrArrRelPdRuleMDso().selectList(arArrArrRelPdRuleMIO); // 해당 계약계약관계에 정의되어 있는 상품목록이 없는 경우 validation check skip if (arrArrRelPdRuleList == null || arrArrRelPdRuleList.isEmpty()) { return; } // 관련계약의 상품이 해당 계약계약관계유형에 정의되어있는 상품인지 확인 List<ArArrArrRelPdRuleMIO> arArrArrRelPdRule = _getArrArrRelPdRuleListByProductCd(arrArrRelCd, bizDscd, pdTpCd, pdTmpltCd, pdCd); if (arArrArr
TGT:
Check the product of related arrangement is defined in the rule between arrangement arrangement relation and product.
PRED:
Check whether if specific product information is defined in arrangement arrangement relation.
test 샘플별 bleu-4:  16.29
========================================================================================================================
SRC:
public List<AprvlListInqryOut> getListApprove(AprvlListInqryIn in) throws BizApplicationException { _checkStringValue(in.getInqryStartDt(), "AAPCME0006", new Object[] {"@inqryStartDt"}); _checkStringValue(in.getInqryEndDt(), "AAPCME0006", new Object[] {"@inqryEndDt"}); List<CmAprvlMIO> cmAprvlMIOList = _getCmApprvMDso().selectList(_setAprvlListInput(in)); if (cmAprvlMIOList == null) { throw new BizApplicationException("AAPCME0004", null); } return _setAprvlListOut(cmAprvlMIOList); }
TGT:
Retrieves a list of approval information that occurred during the period.
PRED:
View approval list by approval sequence number.
test 샘플별 bleu-4:  11.61
========================================================================================================================
SRC:
public List<PdClassificationInformationRelation> getListPdClassificationInfoRelation(PdClassificationInformationRelation in) throws BizApplicationException { if (StringCoreUtils.isEmpty(in.getInstCd())) { in.setInstCd(getInstCd()); } if (StringCoreUtils.isEmpty(in.getPdInfoDscd())) { in.setPdInfoDscd(pdPdM.getPdInfoDscd()); } if (StringCoreUtils.isEmpty(in.getPdCd())) { in.setPdCd(getPdCd()); } PdClRelationListIn relationIn = new PdClRelationListIn(); relationIn.setInstitutionId(in.getInstCd()); relationIn.setPdClCd(in.getPdClCd()); relationIn.setPdClStructureDscd(in.getPdClStrcDscd()); relationIn.setPdCd(in.getPdCd()); relationIn.setClStructureUsageDscd(in.getClStrctrUseDscd()); relationIn.setBaseDate(in.getAplyStartDt()); List<PdClRelationOut> relationOut = _getPdCore().getListPdClRelation(relationIn); List<PdClassificationInformationRelation> out = new ArrayList<>(); for(PdClRelationOut relation : relationOut) { PdClassificationInformationRelation temp = new PdClassificationInformationRelation(); temp.setInstCd(relation.getInstitutionId()); temp.setPdInfoDscd(relation.getPdInfoDscd()); temp.setPdCd(relation.getPdCd()); temp.setPdClStrcDscd(relation.getPdClStructureDscd()); temp.setClStrcNm(relation.getClStructureName()); temp.setPdClCd(relation.getPdClCd()); temp.setActvYn(relation.isActive() ? CPD01.YES : CPD01.NO); temp.setAplyStartDt(relation.getApplyStartDate()); temp.setAplyEndDt(relation.getApplyEndDate()); temp.setNavigation(relation.getFullPath()); out.add(temp); } return out; }
TGT:
This Method inquire product classification information relation if classification structure use distinction code value is exists, product classification information relation filtering if classification structure use distinction code value is null, all product classification information relation.
PRED:
This Method inquire product classification information relation if classification structure use distinction code value is exists, product classification information relation filtering if classification structure use distinction code value is null, all product classification information relation.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaDocSrchSvcVerifyDocTmpltIn clone(){ try{ CaDocSrchSvcVerifyDocTmpltIn object= (CaDocSrchSvcVerifyDocTmpltIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<CmpsCnd> getCmpsCnd() throws BizApplicationException { if (!isComplexCnd()) { throw new BizApplicationException("AAPPDE0003", null); // 단순조건 simple condition } // Return output return getCmpsCnd(getCmpxStrctrId()); }
TGT:
This method inquire all composing condition list in input value complex structure identity. if simple condition, throws Exception. DataCache has been applied.
PRED:
This method inquire all composing condition list in input value complex structure identity. if simple condition, throws Exception. DataCache has been applied.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, AtrlImpl atrlImpl) throws BizApplicationException { // null check if (StringUtils.isEmpty(xtnAtrbtNm)) { return; } // 1. 액터역할에 저장된 보조명세 캐시 조회결과에 따라 insert/update 판단 AtAtrlSIO subInfoIO = getSubInfoCache(atrlImpl); if (subInfoIO == null) { // DBIO VO new instance subInfoIO = new AtAtrlSIO(); subInfoIO.setAtrlId(atrlImpl.getAtrlId()); // 입력된 속성명/속성값을 DBIO VO에 set DtoUtils.setSubInfoIO(xtnAtrbtNm, xtnAtrbtCntnt, subInfoIO); // insert _getAtAtrlSDso().insert(subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(xtnAtrbtNm, xtnAtrbtCntnt, subInfoIO)) { return; } // 변경전 이력 저장 _saveSubInfoHst(atrlImpl, subInfoIO); // 입력된 속성명/속성값을 DBIO VO에 set DtoUtils.setSubInfoIO(xtnAtrbtNm, xtnAtrbtCntnt, subInfoIO); // update _getAtAtrlSDso().update(subInfoIO); } // 2. 캐시 저장 atrlImpl.setSubInfoCache(subInfoIO
TGT:
Save an asset thing subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
static boolean isValid(String value) throws BizApplicationException { if(!StringUtils.isEmpty(value)) { for (AuthStsEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } throw new BizApplicationException("AAPATE0028", new Object[] {value, "@authStsCd"}); } return true; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public static boolean isValid(String value) { for (PstnPrcsngDscdEnum enumObject : values()) { if (enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> subInfoMap, StlmntCalcnSubInfoInqryIn stlmntCalcnSubInfoInqryIn) throws BizApplicationException { _getStlmntCalcnSubInfoBiz().saveMapSubInfo(subInfoMap, _setStStlmntCalcnSIO(stlmntCalcnSubInfoInqryIn)); }
TGT:
Save the appraisal preferential claim subsidiary information using map.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  6.11
========================================================================================================================
SRC:
public List<ArrReal> getListVrtnArrBasedOnStsHistory(String deptId, ArrDeptRelEnum arrDeptRel, String pdCd, ArrStsEnum curArrSts, ArrStsEnum arrSts, String inqryStartDt,String inqryEndDt, int pgNbr, int pgCnt) throws BizApplicationException { return _getArrDeptRelImpl().getVrtnArrListBasedOnArrStatusHistory(deptId, null, null, null, pdCd, arrDeptRel, curArrSts, arrSts, inqryStartDt, inqryEndDt, pgNbr, pgCnt); }
TGT:
Inquire specific department own (as accounting department) variation arrangements which was the specific status between the specified period and currently not changed
PRED:
Get specific department own (as accounting department) variation arrangements which was the specific status between the specified period and currently not changed
test 샘플별 bleu-4:  95.34
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(AssetCore asset) throws BizApplicationException { return _getAssetSubInfoBiz().getMapSubInfo((AssetImpl)asset); }
TGT:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaCoaMgmtSvcGetXtnTblAtrbtOut clone(){ try{ CaCoaMgmtSvcGetXtnTblAtrbtOut object= (CaCoaMgmtSvcGetXtnTblAtrbtOut)super.clone(); if ( this.atrbtList== null ) object.atrbtList = null; else{ java.util.List<bankware.corebanking.configurationadmin.accounting.service.dto.CaCoaMgmtSvcGetXtnTblAtrbtIO> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.accounting.service.dto.CaCoaMgmtSvcGetXtnTblAtrbtIO>(atrbtList.size()); for( bankware.corebanking.configurationadmin.accounting.service.dto.CaCoaMgmtSvcGetXtnTblAtrbtIO item : atrbtList ){ clonedList.add( (bankware.corebanking.configurationadmin.accounting.service.dto.CaCoaMgmtSvcGetXtnTblAtrbtIO)item.clone()); } object.atrbtList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<TblXtnAtrbtDtlIO> getListAttributeExistData(String atrbtNm) { // TODO Auto-generated method stub List<TblXtnAtrbtDtlIO> out = new ArrayList<TblXtnAtrbtDtlIO>(); TblXtnAtrbtDtlIO outTblAtrbt= null; List<CmTblAtrbtMIO> cmTblAtrbtMIOList = _getCmTblAtrbtMDso().selectListByName(atrbtNm); for (CmTblAtrbtMIO outDao : cmTblAtrbtMIOList){ outTblAtrbt = new TblXtnAtrbtDtlIO(); outTblAtrbt.setTblNm(outDao.getTblNm()); out.add(outTblAtrbt); } List<CmTblXtnAtrDIO> cmTblXtnAtrDIOList = _getCmTblXtnAtrDDso().selectListByAtrbtNm(atrbtNm); for (CmTblXtnAtrDIO outDao : cmTblXtnAtrDIOList){ outTblAtrbt = new TblXtnAtrbtDtlIO(); outTblAtrbt.setTblNm(outDao.getTblNm()); out.add(outTblAtrbt); } return out; }
TGT:
Query existing data of attribute being used.
PRED:
Check whether the attribute is exist in CBB table attribute
test 샘플별 bleu-4:  12.61
========================================================================================================================
SRC:
public List<CaKrRoadAddrOut> getAddrByAreaNbr(String cityPrvncAddr,String cityGunGuAddr, String emdongAddr, Integer nbrAddrNbr,Integer househldNbr) throws BizApplicationException { List<CaCmKrRoadAddrMIO> cmKrRoadAddrMList = _getCaCmKrRoadAddrMDso().selectByAreaNumber(CaAddrHrarcyEnum.KOREA_ROAD_NAME_ADDRESS_CODE.getValue(), cityPrvncAddr, cityGunGuAddr, emdongAddr, househldNbr, nbrAddrNbr); List<CaKrRoadAddrOut> out = new ArrayList<CaKrRoadAddrOut>(); if(cmKrRoadAddrMList.isEmpty()) { return out; } for(CaCmKrRoadAddrMIO cmKrRoadAddrMIO : cmKrRoadAddrMList) { CaKrRoadAddrOut krRoadAddrOut = new CaKrRoadAddrOut(); krRoadAddrOut = _getKrRoadAddrOut(cmKrRoadAddrMIO); if(krRoadAddrOut != null) { out.add(krRoadAddrOut); } } return out; }
TGT:
It inquiries the parcel address with Korea road list.
PRED:
It inquiries the parcel address with Korea road list.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(IValueObject subInfo , StStlmntSIO stStlmntSIOIn) { logger.debug("##<ST-StlmntSubInfoBiz> saveSubInfo"); // null check if(subInfo == null){ throw new BizApplicationException("AAPCME0006", new Object[] {this.getClass().getSimpleName()}); } logger.debug("##<ST-StlmntSubInfoBiz> saveSubInfo null check ok"); // 1.create a new instance of DB IO IValueObject subInfoDBIO = new StStlmntSIO(); // 2.set primary key _setKey(subInfoDBIO, stStlmntSIOIn); // 3.convert IvalueObject to DBIO VO DtoUtils.setSubInfoIO(subInfo, subInfoDBIO); // 4.save subsidiary detail(보조명세) _insertSubInfo(subInfoDBIO); /* * settlement는 속성을 대부분 insert 하는 경우이므로 아래 로직을 막음 */ // IValueObject sqlOut = getSubInfo(stlmnt); // // // 해당 거래관련 보조명세 데이터가 없을 때 // if(sqlOut == null) { // _insertSubInfo(subInfoDBIO); // // 맴버변수 VO 값 설정 // Stlmnt.setStlmntSubInfo(subInfo); // // }else { // // 기 조회 된 값에 update되어할 필드 설정 // DtoUtils.setSubInfoIO(subInfo, sqlOut); // // DBIO IO에
TGT:
Store one extended attribute of subsidiary information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  81.37
========================================================================================================================
SRC:
public CaDocSrchSvcGetDocClTreeOut clone(){ try{ CaDocSrchSvcGetDocClTreeOut object= (CaDocSrchSvcGetDocClTreeOut)super.clone(); if ( this.children== null ) object.children = null; else{ java.util.List<bankware.corebanking.configurationadmin.document.service.dto.CaDocSrchSvcGetDocClTreeDtlOut> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.document.service.dto.CaDocSrchSvcGetDocClTreeDtlOut>(children.size()); for( bankware.corebanking.configurationadmin.document.service.dto.CaDocSrchSvcGetDocClTreeDtlOut item : children ){ clonedList.add( (bankware.corebanking.configurationadmin.document.service.dto.CaDocSrchSvcGetDocClTreeDtlOut)item.clone()); } object.children = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public LnCapitalizationSvcListOut clone(){ try{ LnCapitalizationSvcListOut object= (LnCapitalizationSvcListOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<Dept> getChildDept(String deptOrgnztnRelCd) throws BizApplicationException { List<Dept> deptList = new ArrayList<Dept>(); List<DeptCore> deptCoreList = super.getChildDeptCore(deptOrgnztnRelCd); if(deptCoreList == null || deptCoreList.isEmpty()){ return deptList; } for(DeptCore deptCore : deptCoreList){ deptList.add((Dept) deptCore); } return deptList; }
TGT:
Inquire the department's child department object list in the input organization relation hierarchy.
PRED:
Inquire a list of child department object related to the specific department in the input organization relation. If there is no child department, return null.
test 샘플별 bleu-4:  19.59
========================================================================================================================
SRC:
public LnExctnSvcPymntRsltOut clone(){ try{ LnExctnSvcPymntRsltOut object= (LnExctnSvcPymntRsltOut)super.clone(); if ( this.arrCshflwSchdl== null ) object.arrCshflwSchdl = null; else{ java.util.List<bankware.corebanking.loan.query.service.dto.ArrCashFlowScheduleSvcListOut> clonedList = new java.util.ArrayList<bankware.corebanking.loan.query.service.dto.ArrCashFlowScheduleSvcListOut>(arrCshflwSchdl.size()); for( bankware.corebanking.loan.query.service.dto.ArrCashFlowScheduleSvcListOut item : arrCshflwSchdl ){ clonedList.add( (bankware.corebanking.loan.query.service.dto.ArrCashFlowScheduleSvcListOut)item.clone()); } object.arrCshflwSchdl = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void removeArrArrRelPdRule(CaArrArrRelPdRuleIO arrArrRelPdRuleIO) throws BizApplicationException { _checkInput(arrArrRelPdRuleIO); CaArArrArrRelPdRuleMIO arArrArrRelPdRuleMIO = _setArArrArrRelPdRuleMIO(arrArrRelPdRuleIO); _getArArrArrRelPdRuleMDso().delete(arArrArrRelPdRuleMIO); }
TGT:
Remove the rule about arrangement arrangement relation and product.
PRED:
Delete the rule about arrangement arrangement relation and product.
test 샘플별 bleu-4:  88.01
========================================================================================================================
SRC:
static boolean isValid(String value){ for (RtTrmDxtnctnCdEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(ArrTxCore arrTx){ return _getArrTxSubInfoBiz().getMapSubInfo((ArrTxImpl)arrTx); }
TGT:
Inquire all subsidiary information of the asset transaction as a map.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  17.06
========================================================================================================================
SRC:
public CaDstbCtvdMIO select(String dstbCtvdDt, int dstbCtvdSeqNbr) { return _getCaDstbCtvdM().select(dstbCtvdDt, dstbCtvdSeqNbr); }
TGT:
It get a http header properties.
PRED:
It get a http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> subInfoMap, String txDt, Integer txSeqNbr, AssetImpl assetImpl) throws BizApplicationException { // 0. 저장할 정보가 입력되지 않으면 return if(subInfoMap==null || subInfoMap.isEmpty()) { return; } // 1. 자산보조명세의 종류 조회 AssetSubInfoKndEnum subInfoKnd = assetImpl.getAssetSubInfoKnd(); // 2. 표준속성에 등록된 검증규칙을 통해 입력받은 확장속성내용 검증 _getAtrbtChk().checkStandardAttributeMap(subInfoMap); // 3. 보조원장 캐시 조회결과에 따라 insert/update 판단 IValueObject subInfoCache = getSubInfoCache(assetImpl); if(subInfoCache == null){ // DBIO VO new instance subInfoCache = _getNewSubInfoSqlIO(subInfoKnd); subInfoCache.set("assetId", assetImpl.getAssetBasicCache().getAssetId()); //PK setting // 빈 이력 생성 --> undo 시 확장속성 저장 이전으로 속성값을 원복시키기 위함 _saveSubInfoHst(assetImpl, subInfoCache, txDt, tx
TGT:
Save the asset thing subsidiary information using map.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  6.11
========================================================================================================================
SRC:
public Integer getListDataCntForConsistency() throws BizApplicationException { return _getDstbCnstncySvScrnSrvcDDso().selectListCntForConsistency(); }
TGT:
Validate Query Row Count for Distribution Validation
PRED:
Validate Query Row Count for Distribution Validation
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getPdNm() throws BizApplicationException { return pdPdM.getPdNm(); }
TGT:
This method inquire product name
PRED:
This method inquire product name
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getSubInfo(String xtnAtrbtNm, StaffCore staffCore) throws BizApplicationException { return _getStaffSubInfoBiz().getSubInfo(xtnAtrbtNm, (StaffImpl)staffCore); }
TGT:
This method inquires settlement subsidiary detail information list (inquire all subsidiary detail information of a given settlement master by using the key value other than the detail sequence number).
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  2.95
========================================================================================================================
SRC:
public static boolean isValid(String stringValue){ for (CaAmOperandPrefix enumObject: values()){ if(enumObject.getStringValue().equals(stringValue)) { return true; } } return false; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrBal> getListArrBal(ArrReal arr, String amtTpCd, String balTpCd) throws BizApplicationException { List<ArrBal> out = new ArrayList<ArrBal>(); List<ArrBalCore> balList = super.getListArrBalCore((ArrRealCore)arr, amtTpCd, balTpCd); for(ArrBalCore arrBal : balList) { out.add((ArrBal)arrBal); } return out; }
TGT:
This method inquires list of balances belonging to the arrangement by amount type.
PRED:
This method inquires list of balances belonging to the arrangement by amount type and balance type.
test 샘플별 bleu-4:  75.42
========================================================================================================================
SRC:
public CustRgstSvcSimpleIndvIn clone(){ try{ CustRgstSvcSimpleIndvIn object= (CustRgstSvcSimpleIndvIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArrStrctrSPlainForm getArrStructureForModification(ArrangementCoreImpl arrangement,String arrSrvcCd) throws BizApplicationException { if (arrSrvcCd == null){ throw new BizApplicationException("AAPCME0006", new Object[]{"@arrSrvcCd"}); } List<ArrCndCore> arrCndListToBeModified = _getArrCndListForModification(arrangement,arrSrvcCd); List<ArrCndCore> arrCndListToDoAction = _getArrCndListForModificationAction(arrangement,arrSrvcCd); ArrStrctrSPlainForm arrStrctr = new ArrStrctrSPlainForm(); arrStrctr.setArrStrctrBsic(_getBasicStructure(arrangement)); arrStrctr.setArrStrctrCndList(getCndStructure(arrCndListToBeModified, null)); arrStrctr.setArrStrctrRelList(_getRelStructure(arrCndListToBeModified)); arrStrctr.getArrStrctrRelList().addAll(_getRelStructure(arrCndListToDoAction)); return arrStrctr; }
TGT:
Inquire arrangement structure (condition, relation, document, extend attribute) to build user input for modification arrangement by service type code.
PRED:
Inquire arrangement structure (condition, relation, document, extend attribute) to build user input for modification arrangement by service type ENUM.
test 샘플별 bleu-4:  94.57
========================================================================================================================
SRC:
public void saveSubInfo(AtDeptSIO subInfoIO, DeptImpl deptImpl) throws BizApplicationException{ // 1. 보조원장 캐시 조회결과에 따라 insert/update 판단 AtDeptSIO oldSubInfoIO = getSubInfoCache(deptImpl); if (oldSubInfoIO == null) { // PK setting subInfoIO.setDeptId(deptImpl.getDeptId()); // insert _getAtDeptSDso().insert(subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(subInfoIO, oldSubInfoIO)) { return; } // 변경전 이력 저장 _saveSubInfoHst(deptImpl, oldSubInfoIO); // PK setting subInfoIO.setDeptId(deptImpl.getDeptId()); // update _getAtDeptSDso().update(subInfoIO); } // 2. 캐시 저장 deptImpl.setSubInfoCache(subInfoIO); }
TGT:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaExtrnlErrorCdTrnsfrmSvcIn clone(){ try{ CaExtrnlErrorCdTrnsfrmSvcIn object= (CaExtrnlErrorCdTrnsfrmSvcIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ActorSrchOut> getListCustInfoByUniqueIdNbr(String custUnqIdNbr, String custUnqIdNbrTpCd, String actorTpCd, String paymentInstYn, Integer pageNum, Integer pageCount, String custStsCd) throws BizApplicationException { //check required inputs if (StringUtils.isEmpty(custUnqIdNbrTpCd)) { throw new BizApplicationException("AAPCME0006", new String[] {"@actorUnqIdNbrTpCd"}); } else if (pageNum == null || CCM01.ZERO.equals(pageNum)) { throw new BizApplicationException("AAPCME0006", new String[] {"@pgNbr"}); } else if (pageCount == null || CCM01.ZERO.equals(pageCount)) { throw new BizApplicationException("AAPCME0006", new String[] {"@pgCnt"}); } return _getActorUnqIdNbrXtn().getListCustByUniqueIdNbr(_getCmnContext().getInstCode(), custUnqIdNbr, custUnqIdNbrTpCd, actorTpCd, paymentInstYn, pageNum, pageCount, custStsCd); }
TGT:
Inquire the customers' information that matches the input unique identification number, type, actor type code, payment institution YN, customer status, page number and page count. It inquires customer that has a similar actor unique identification number with the input value.
PRED:
Inquire customers' information that matches the input unique identification number, type, actor type code, payment institution YN, customer status, page number and page count. It inquires customer that has a similar actor unique identification number with the input value.
test 샘플별 bleu-4:  95.54
========================================================================================================================
SRC:
public boolean isTableAttributeValid(String xtnTblNm, String xtnAtrbtNm, String atrbtCntnt) throws BizApplicationException { if(!_checkAttributeBase(xtnTblNm, xtnAtrbtNm, atrbtCntnt)) { return false; } CaCmTblXtnAtrVrtnCmpsDIO cmTblXtnAtrVrtnCmpsDIO = _getCmTblXtnAtrVrtnCmpsDDso().selectXtnAtrbtVrtnCmpsCd(_getCmnContextCore().getInstCode(), xtnTblNm, xtnAtrbtNm); if(cmTblXtnAtrVrtnCmpsDIO == null || "".equals(cmTblXtnAtrVrtnCmpsDIO.getXtnAtrbtVrtnCmpsCd())) { // 기관에 데이터가 없을시 STDA 기관으로 재조회 하여 검증 한다. cmTblXtnAtrVrtnCmpsDIO = new CaCmTblXtnAtrVrtnCmpsDIO(); cmTblXtnAtrVrtnCmpsDIO = _getCmTblXtnAtrVrtnCmpsDDso().selectXtnAtrbtVrtnCmpsCd(_getCmnContextCore().getStandardInstCode(), xtnTblNm, xtnAtrbtNm); if(cmTblXtnAtrVrtnCmpsDIO != null && CaXtnAtrbtVrtnCmpsEnum.NA.getValue().equals(cmTblXtnAtrVrtnCmpsDIO.getXtnAtrbtVrtnCmpsCd())) { return true; } } else if(CaXtnAtrbtVrtnCmpsEnum.NA.getValue().equals(cmTblXtnAtrVrtnCmpsDIO.getXtnAtrbtVrtn
TGT:
Validate extend attribute validation Not product.
PRED:
Validate extend attribute validation Not product.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public AmAsmXtnInfoDIO select(AmAsmXtnInfoDIO amAsmXtnInfoDIO){ _getCmnContextCore().setHeaderColumn(amAsmXtnInfoDIO); return _getAmAsmXtnInfoD().select(amAsmXtnInfoDIO); }
TGT:
It get a http header properties.
PRED:
It get a http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CustCheckPwdOut login(CustRprsnImpl custRprsnImpl, AtCustRprsnLoinInfoDIO custRprsnLoinInfoIO, String pswd, String loinTpCd) throws BizApplicationException, ParseException { // 기관파라미터에 정의된 로그인비밀번호오류허용횟수 조회 String pswdErrAllwnCntInstParm = _getInstParmProvider().getInstParm(InstParamEnum.INST_PARAM_LOIN_PSWD_ALLWNC_CNT.getValue()); // password error allowance count if(StringUtils.isEmpty(pswdErrAllwnCntInstParm)) { throw new BizApplicationException("AAPCME0184", new Object[] {"@loinPswdErrAllwncCnt"}); } int pswdErrorAllwncCnt = Integer.parseInt(pswdErrAllwnCntInstParm); CustCheckPwdOut custCheckPwdOut = new CustCheckPwdOut(); AtCustRprsnLoinHIO atCustRprsnLoinHIO = new AtCustRprsnLoinHIO(); // Customer login history IO // get password error count excess yes/no Integer pswdErrCnt = custRprsnLoinInfoIO.getPswdErrCnt(); String pswdErrCntExcsYn = custRprsnLoinInfoIO.getPswdErrCntExcsYn(); String pswdLockExprtnDtm = custRprsnLoinInfoIO.getPswdLockExprtnDtm(); // 비밀번호 오류 관련 정보 변경 여부 판단 boolean isChanged = false; // 2020.07.09 비밀번호일치여부 �
TGT:
It executes login process of the customer by the main login identification number. It considers password error count, error allowance count exceeded YN, lock time and password update cycle. It leaves login attempt history. Exception must be handled separately at the service level according to the login result.
PRED:
It executes login process of the customer related person by the main login identification number. It considers password error count, error allowance count exceeded YN, lock time and password update cycle. It leaves login attempt history. Exception must be handled separately at the service level according to the login result.
test 샘플별 bleu-4:  92.84
========================================================================================================================
SRC:
public int delete(StTxWhdrwlOrderBalHIO stTxWhdrwlOrderBalHIO) { return _getStTxWhdrwlOrderBalH().delete(stTxWhdrwlOrderBalHIO); }
TGT:
It changes the status of insurance to cancel status
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  15.45
========================================================================================================================
SRC:
public void doServiceAction(String arrSrvcTpCd,ArrCndActionRequiredValue arrCndActionRequiredValue) throws BizApplicationException { if (!ArrConditionErrorTypeEnum.NoError.equals(isValidCndValue(CCM01.YES))){ //This Arrangement could not extend the contract term throw new BizApplicationException("AAPLNE0050" , new Object[]{}); } //TODO additional coding to check this loan can be extended base on the current arrangement status // 회수순서변경계좌검증 - 계좌부가정보 // 고정연체등록여부검증 - 계좌부가정보 // 기한이익상실여부검증 - 계좌부가정보 // 대손상각 신청계좌여부 검증 - 상각신청원장 // 관리거래처-적색 - 은행연합회자료 }
TGT:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
PRED:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(CustTxImpl custTxImpl, AtCustTxSIO subInfoIO) throws BizApplicationException { // null check if(subInfoIO == null){ return; } if (logger.isDebugEnabled()) { logger.debug("## <AT> CustTx saveSubInfo -> subInfoIO = {} :: ", subInfoIO.getFieldValues()); } // 1. 보조명세 캐시 조회결과에 따라 insert/update 판단 AtCustTxSIO oldSubInfoIO = getSubInfoCache(custTxImpl); if (oldSubInfoIO == null) { // PK setting subInfoIO.setCustId(custTxImpl.getCustId()); subInfoIO.setTxDt(custTxImpl.getCustTxDt()); subInfoIO.setTxSeqNbr(custTxImpl.getCustTxSeqNbr()); // insert _getAtCustTxSDso().insert(subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(subInfoIO, oldSubInfoIO)) { return; } // PK setting subInfoIO.setCustId(custTxImpl.getCustId()); subInfoIO.setTxDt(custTxImpl.getCustTxDt()); subInfoIO.setTxSeqNbr(custTxImpl.getCustTxSeqNbr()); // update _getAtCustTxSDso().update(subInfoIO); } // 2. 캐시 저장 custTxImpl.setSubInfoCache(subInfoIO); }
TGT:
Save an asset thing subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public GlQuerySvcAcctgDpstWhdrwlIn clone(){ try{ GlQuerySvcAcctgDpstWhdrwlIn object= (GlQuerySvcAcctgDpstWhdrwlIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<PdNameDetailIO> getListPdNameDetail(String pdNmTpCd, String lngDscd, String baseDt) throws BizApplicationException { // Set input PdNameDetailIO inIO = new PdNameDetailIO(); inIO.setPdNameTypeCode(pdNmTpCd); inIO.setLanguageDscd(lngDscd); inIO.setAplyStartDt(baseDt); inIO.setAplyStartTm(aplyTm); // Return output return getListPdNameDetail(inIO); }
TGT:
This Method inquire product name detail list
PRED:
This Method inquire product name detail list
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
protected void register(CustImpl custImpl) throws BizApplicationException { AtCustMIO atCustMIO = custImpl.getCustBsicCache(); List<AtScrtyQstnrAnswerDIO> atScrtyQstnrAnswerDIOList = custImpl.getListQstnrAnswerCache(); if (atScrtyQstnrAnswerDIOList.isEmpty()) { return; } for (AtScrtyQstnrAnswerDIO item : atScrtyQstnrAnswerDIOList) { item.setInstCd(atCustMIO.getInstCd()); item.setAnswerTrgtId(atCustMIO.getCustId()); item.setAnswerTrgtTpCd(AnswerTrgtTpEnum.CUST.getValue()); } _getSecurityQuestionnaireAnswer().register(atScrtyQstnrAnswerDIOList); }
TGT:
It registers the notice message code information. Needs caution as the registered information performs the update transaction.
PRED:
It registers the self authentication code information. Needs caution as the registered information performs the update transaction. It gets the first institution code in the list and query the entire contents.
test 샘플별 bleu-4:  42.01
========================================================================================================================
SRC:
public CaArrSrvcTpMgmtSvcInqryListOut clone(){ try{ CaArrSrvcTpMgmtSvcInqryListOut object= (CaArrSrvcTpMgmtSvcInqryListOut)super.clone(); if ( this.srvcTpList== null ) object.srvcTpList = null; else{ java.util.List<bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrSrvcTpMgmtSvcInqryOut> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrSrvcTpMgmtSvcInqryOut>(srvcTpList.size()); for( bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrSrvcTpMgmtSvcInqryOut item : srvcTpList ){ clonedList.add( (bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrSrvcTpMgmtSvcInqryOut)item.clone()); } object.srvcTpList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArArrDpstSIO select(String arrId) throws BizApplicationException { return _getArArrDpstS().select(_getCmnContext().getInstCode(), arrId); }
TGT:
It get a http header properties.
PRED:
It get a http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value) { for (PdTemplateCodeEnum enumObject : values()) { if (enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> subInfoMap, AprslImpl aprslImpl, Integer prfClaimSeqNbr) throws BizApplicationException { // 0. 저장할 정보가 입력되지 않으면 return if(subInfoMap==null || subInfoMap.isEmpty()) { return; } // 1. 표준속성에 등록된 검증규칙을 통해 입력받은 확장속성내용 검증 _getAtrbtChk().checkStandardAttributeMap(subInfoMap); // 2. 보조원장 캐시 조회결과에 따라 insert/update 판단 AsAprslPrfClaimSIO subInfoCache = getSubInfoCache(aprslImpl, prfClaimSeqNbr); if(subInfoCache == null){ // DBIO VO new instance subInfoCache = new AsAprslPrfClaimSIO(); subInfoCache.setAprslId(aprslImpl.getAprslBasicCache().getAprslId()); // PK setting subInfoCache.setPrfClaimSeqNbr(prfClaimSeqNbr); // PK setting // 입력된 확장정보를 DBIO VO에 setting DtoUtils.setSubInfoIO(subInfoMap, subInfoCache); // 2-1. insert _getAsAprslPrfClaimSDso().insert(subInfoCache); // 3. 캐시 저장 _saveSubInfoCache(subInfoCache, aprslImpl, prfClaimSeqNbr); } else { // 속성�
TGT:
Save the asset thing subsidiary information using map.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  6.11
========================================================================================================================
SRC:
public void saveAprslThingXtnInfo(Integer aprslThingSeqNbr, AprslThingXtnInfoEnum aprslThingXtnInfoEnum, String xtnAtrbtCntnt) throws BizApplicationException { // 속성명 기준으로 확장정보관리방법 판단 // 1. 확장정보명세 if(_getTblXtnAtrbt().isExtendWayEav(XtnTableEnum.AS_APRSL_THING_D.getValue(), aprslThingXtnInfoEnum.getValue())) { super.saveAprslThingXtnInfoByEav(aprslThingSeqNbr, aprslThingXtnInfoEnum.getValue(), xtnAtrbtCntnt); } // 2. 보조명세 else { _getAprslThingSubInfoBiz().saveSubInfo(aprslThingXtnInfoEnum.getValue(), xtnAtrbtCntnt, this, aprslThingSeqNbr); } }
TGT:
Save a specific extended information of the appraisal thing.
PRED:
Save a specific extended information of the appraisal thing.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrReal> getListChildArrByLastArrStsDt(String inqStartDt, String inqEndDt, ArrStsEnum arrStsEnum, String bizDscd, String pdTpCd, String pdTmpltCd, String pdCd ) throws BizApplicationException { return _getArrBasicQryXtnBiz().getListChildArrRealByLastArrStsDt(inqStartDt, inqEndDt, arrStsEnum.getValue(), bizDscd, pdTpCd, pdTmpltCd, pdCd, this); }
TGT:
Inquire a list of arrangement of specific product whose status has changed into specific status during inquire period which is child arrangement of membership arrangement.
PRED:
Inquire a list of arrangements of specific product whose status has changed into specific status during inquired period, which is child arrangement of membership arrangement. (Paging)
test 샘플별 bleu-4:  71.4
========================================================================================================================
SRC:
public String getSubInfo(String atrbtNm, AsmImpl asm) { // 해당 심사 관련 모든 보조명세정보 조회(캐시로부터) IValueObject subInfo = getSubInfoCache(asm); // 보조명세정보가 없으면 리턴 null if(subInfo == null) { return null; } // 특정 보조명세정보의 값 조회 Object atrbtVal = subInfo.get(atrbtNm); if(atrbtVal == null) { return null; } // 값에 대해 String 형식으로 리턴 return String.valueOf(atrbtVal); }
TGT:
get a extended information of subsidiary information(CTI)
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  18.85
========================================================================================================================
SRC:
public CaStaffRgstSvcGetLoinIdNbrIO clone(){ try{ CaStaffRgstSvcGetLoinIdNbrIO object= (CaStaffRgstSvcGetLoinIdNbrIO)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getInstCd() { String tntInstId = null; if (pdPdCndM == null) { tntInstId = this.instCd; if (StringCoreUtils.isEmpty(tntInstId)) { return null; } } else { tntInstId = pdPdCndM.getInstCd(); } // Return 기관코드 return tntInstId; }
TGT:
This method inquire institution code of product
PRED:
This method get financial institution code by which the arrangement is created and managed.
test 샘플별 bleu-4:  14.63
========================================================================================================================
SRC:
public Long getTimeoutScnd(){ return timeoutScnd; }
TGT:
Inquire Timeout Second.
PRED:
Inquire Timeout Second.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getNumbering(String nbrgAtrbtNm,Map<String, Object> inpParmMap) throws BizApplicationException { return getNumbering(_getCmnContext().getInstCode(), nbrgAtrbtNm, inpParmMap, false); }
TGT:
It calculates next number. Compared to the default method, the omitted 'isReUseSameTxNbrg' value is treated as false.
PRED:
It calculates next number. Compared to the default method, the omitted 'instCd' value is replaced by instCd in Common Context. Compared to the default method, the omitted 'isReUseSameTxNbrg' value is replaced by false. Compared to the default method, the omitted 'inpParmMap' value is replaced by null.
test 샘플별 bleu-4:  30.06
========================================================================================================================
SRC:
public CaStdSrvcIoMgmtSvcGetInstSrvcOut clone(){ try{ CaStdSrvcIoMgmtSvcGetInstSrvcOut object= (CaStdSrvcIoMgmtSvcGetInstSrvcOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArrBsicQrySvcGetAcctListByPd clone(){ try{ ArrBsicQrySvcGetAcctListByPd object= (ArrBsicQrySvcGetAcctListByPd)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
private BfCndTestSvcOut getAplyStartTm(BfCndTestSvcIn in) throws BizApplicationException { // Set input BfIn bfIn = new BfIn(); bfIn.setBfCd(in.getPdCd()); bfIn.setAplyDt(in.getAplyDt()); // BF 객체생성 Bf bf = _getBfMngr().getBf(bfIn); // 조건객체 생성 BfCnd bfCnd = bf.getCnd(in.getCndCd()); String output = bfCnd.getAplyStartTm(); BfCndTestSvcOut out = new BfCndTestSvcOut(); if (StringUtils.isEmpty(output)) { out.setChkYn(false); } else { out.setChkYn(true); out.setCntnt(output.toString()); } return out; }
TGT:
This method inquire apply start time of product condition.
PRED:
This method inquire apply start time of benefit condition.
test 샘플별 bleu-4:  78.25
========================================================================================================================
SRC:
public int delete(CaCmStdAtrVrtnMIO cmStdAtrVrtnMIO) { return _getCmStdAtrVrtnM().delete(cmStdAtrVrtnMIO); }
TGT:
It changes the status of insurance to cancel status
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  15.45
========================================================================================================================
SRC:
public CaDocInstIO getDocInst() throws BizApplicationException { return this.docInstIO; }
TGT:
It inquiries document institution information.
PRED:
It inquiries document institution information.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ActorElctrncAddrOut> getListElctrncAddrInfo() throws BizApplicationException { return getActor().getListElctrncAddrInfo(); }
TGT:
When the staffActorInfoUseYn is 'Y', It gets the staff's electronic address information list from actor information. It inquires the effective information on transaction date.
PRED:
Inquire the electronic address information list that matches the input contact point location type code, contact method type code.
test 샘플별 bleu-4:  14.99
========================================================================================================================
SRC:
public List<AtNoticeDIO> selectList(AtNoticeDIO AtNoticeDIO, Integer pageOffset, Integer pageCount, String delYn, String infoStsCd, String ignoreInfoStsCd) throws BizApplicationException { switch( DbmsVendorNmEnum.getByValue(_getSysNonstopUtil().getDbmsVendorName(getClass())) ) { case ORACLE: return _getAtNoticeD().selectListOracle(AtNoticeDIO, pageOffset, pageCount, delYn, infoStsCd, ignoreInfoStsCd); case MYSQL: return _getAtNoticeD().selectListMySQL(AtNoticeDIO, pageOffset, pageCount, delYn, infoStsCd, ignoreInfoStsCd); default: throw new BizApplicationException("AAPCME0202", null); } }
TGT:
It gets list of http header properties.
PRED:
It gets list of http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getSubInfo(String xtnAtrbtNm, AssetCore assetImpl, Integer assetThingSeqNbr) throws BizApplicationException { return _getAssetThingSubInfoBiz().getSubInfo(xtnAtrbtNm, (AssetImpl)assetImpl, assetThingSeqNbr); }
TGT:
This method provide settlement subsidiary detail information.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  12.61
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(ArrRealCore arrReal) throws BizApplicationException { return _getArrSubInfoBiz().getMapSubInfo((ArrRealImpl) arrReal); }
TGT:
Inquire entire extended information of subsidiary information(CTI) as MAP type.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  58.77
========================================================================================================================
SRC:
public AssetScrtyIntTrmntMgmtSvcScrtyIntInfoOut clone(){ try{ AssetScrtyIntTrmntMgmtSvcScrtyIntInfoOut object= (AssetScrtyIntTrmntMgmtSvcScrtyIntInfoOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaDstbTblMIO clone(){ try{ CaDstbTblMIO object= (CaDstbTblMIO)super.clone(); object.lastChngTmstmp = (bxm.omm.format.wrapper.DateFormattedWrapper)this.lastChngTmstmp.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void rebuild(ArrCndRebuildRequiredValue arrCndRebuildRequiredValue) throws BizApplicationException{ //필요없음 }
TGT:
Rebuild using additional input parameters.
PRED:
Partial rebuilding for specific condition which is designated in service.
test 샘플별 bleu-4:  10.6
========================================================================================================================
SRC:
public String getApplyDescription() { return aplyDesc; }
TGT:
Query apply description
PRED:
Query the class name
test 샘플별 bleu-4:  35.93
========================================================================================================================
SRC:
public String getNextRebuildDate(String baseDt, String arrIntRtTpCd, ArrRealCoreImpl arrReal) throws BizApplicationException { if(StringCoreUtils.isEmpty(baseDt)){ baseDt = ArrCmnCoreUtil.getRckngDt(_getCmnContextCore()); } arrReal.setArrIntRtCalcnDt(baseDt); String nextDtMin = CCM01.MAX_DATE; PdInterestRateStructure arrIntRtFormula = this._getArrIntRtGeneratorSuperImpl().getLastAplyFormula(arrReal, arrIntRtTpCd); if(arrIntRtFormula == null){return nextDtMin;} List<CndTmpltOut> cndTmpltOut = arrIntRtFormula.getListOperandPdCnd(); for(CndTmpltOut cndTmplt : cndTmpltOut){ ArrCndCore arrCnd = arrReal.getArrCndCore(cndTmplt.getCndCd(), baseDt); if (!ArrCndActionRebuild.class.isInstance(arrCnd)){ continue; } String nextDt = ((ArrCndActionRebuild)arrCnd).getNextRebuildDate(arrIntRtTpCd, baseDt); //기준금리 고정시 null 이 리턴될수 있음 if(StringCoreUtils.isEmpty(nextDt)){ continue; } if(nextDt.compareTo(nextDtMin) < 0){ nextDtMin = nextDt; } } //다음산출일자가 만기일과 같거나 크면 maxDate /* * #23634 - 2022.09.09. 주석처리 : ok요건 (만기가 지난 건에 대해서도 재산�
TGT:
Get the next scheduled date of interest rate rebuild related to this condition.
PRED:
Get the next scheduled date of interest rate rebuild related to this condition.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArArrIssmdaSIO select(String arrIssmdaTpCd, String arrIssmdaInhrncId) throws BizApplicationException { return _getArArrIssmdaS().select(_getCmnContext().getInstCode(), arrIssmdaTpCd, arrIssmdaInhrncId); }
TGT:
It get a http header properties.
PRED:
It get a http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value) throws BizApplicationException { if(!StringUtils.isEmpty(value)) { for (CaCdNbrEnum item : CaCdNbrEnum.values()) { if (value.equals(item.getValue())) { return true; } } return false; } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public PntCndMltplVdlnOut getCndMltplVdln(PntCndMltplVdlnIn in) throws BizApplicationException { ValidateInputCndValIn validationIn = new ValidateInputCndValIn(); validationIn.setInstitutionId(getInstCd()); validationIn.setCndList(_convertToPdCndMultipleValidationCndListInList(in.getCndList())); validationIn.setPdCd(getPntCd()); validationIn.setBaseDate(PdUtil.parseStringToDate(in.getAplyDt())); ValidateInputCndValOut validateOut = _getPntCndCore().validateInputCndVal(validationIn); return _convertValidateInputCndValOutToPntCndMltplVdlnOut(validateOut); }
TGT:
This Method verify point condition Error code description 00: Normal 02: No such condition defined under point 03: Condition value is not correct 04: Composing condition value is not correct 05: k condition must be inputed(when the condition is a complex condition) 99: It's composing condition(temporary code)
PRED:
This Method verify benefit condition Error code description 00: Normal 02: No such condition defined under benefit 03: Condition value is not correct 04: Composing condition value is not correct 05: k condition must be inputed(when the condition is a complex condition) 99: It's composing condition(temporary code)
test 샘플별 bleu-4:  88.98
========================================================================================================================
SRC:
public void register(NoticeBsicInfoIO noticeBsicInfoIO) throws BizApplicationException { List<NoticeAtchmntDocIssueIO> atcmnetIOList = noticeBsicInfoIO.getActhmntDocIssueList(); if(atcmnetIOList != null && !atcmnetIOList.isEmpty()) { AtNoticeAtchmntDocIssueDIO atNoticeAtchmntDocIssueDIO = new AtNoticeAtchmntDocIssueDIO(); _getCmnContext().setHeaderColumn(atNoticeAtchmntDocIssueDIO); atNoticeAtchmntDocIssueDIO.setNoticeId(noticeBsicInfoIO.getNoticeId()); for(NoticeAtchmntDocIssueIO aoticeAtchmntDocIssueIOItem : atcmnetIOList) { atNoticeAtchmntDocIssueDIO.setDocIssueId(aoticeAtchmntDocIssueIOItem.getDocIssueId()); _getAtNoticeAtchmntDocIssueDDso().insert(atNoticeAtchmntDocIssueDIO); } } }
TGT:
It registers customer agreement code information list. If registered information by the same institution code and agreement type code exists, throws exception.
PRED:
It registers the actor role parameter information list. If there is registered actor role parameter information by the same institution, throws exception.
test 샘플별 bleu-4:  25.01
========================================================================================================================
SRC:
public ToDoMgmtSvcGetToDoMgmtListAprvlDtlTmpltNonActivitiOut clone(){ try{ ToDoMgmtSvcGetToDoMgmtListAprvlDtlTmpltNonActivitiOut object= (ToDoMgmtSvcGetToDoMgmtListAprvlDtlTmpltNonActivitiOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CustInfoUseAgrmtnSvcAgrmntTpOut clone(){ try{ CustInfoUseAgrmtnSvcAgrmntTpOut object= (CustInfoUseAgrmtnSvcAgrmntTpOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<? extends IOmmObject> getListDataForConsistency(Integer pgNbr, Integer pgCnt) throws BizApplicationException { int pageOffSet = PaginationCoreUtils.getPgOffset(pgNbr, pgCnt); return _getDstbChrncAcCoaXtnInfoDDso().selectListForConsistency(pageOffSet, pgCnt); }
TGT:
Validate Query for Distribution Validation
PRED:
Validate Query for Distribution Validation
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> assetTxSubInfoMap, AssetTxCore assetTx) throws BizApplicationException { _getAssetTxSubInfoBiz().saveMapSubInfo(assetTxSubInfoMap, (AssetTxImpl) assetTx); }
TGT:
Save the asset subsidiary information using map.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  6.11
========================================================================================================================
SRC:
public AsAprslRqstStsHIO select(AsAprslRqstStsHIO asAprslRqstStsHIO){ return _getAsAprslRqstStsH().select(asAprslRqstStsHIO); }
TGT:
It get a http header properties.
PRED:
It get a http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArArrArrRStsHIO select(ArArrArrRStsHIO arArrArrRStsHIO) { return _getArArrArrRStsH().select(arArrArrRStsHIO); }
TGT:
It get a http header properties.
PRED:
It get a http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void delete(String instCd, CaDocBsicIO docBsicIO, CaDocClIO docClIO) throws BizApplicationException { CaDcDocClMIO dcDocClIO = new CaDcDocClMIO(); _getCmnContext().setHeaderColumn(dcDocClIO); if(!StringUtils.isEmpty(instCd)) dcDocClIO.setInstCd(instCd); dcDocClIO.setDocId(docBsicIO.getDocId()); dcDocClIO.setClId(docClIO.getClId()); dcDocClIO.setClHrarcyId(docClIO.getClHrarcyId()); // get registered information List<CaDcDocClMIO> dcDocClIOList = _getInformationList(dcDocClIO.getInstCd(), null, null, dcDocClIO.getDocId(), null); boolean isRegistered = false; if(dcDocClIOList != null && !dcDocClIOList.isEmpty()) { for(CaDcDocClMIO dcDocClIOItem : dcDocClIOList) { if(dcDocClIOItem.getClId().equals(docClIO.getClId()) && dcDocClIOItem.getClHrarcyId().equals(docClIO.getClHrarcyId())) { isRegistered = true; break; } } } if(isRegistered) { // insert data _getDcDocClDso().delete(dcDocClIO); } }
TGT:
It changes the status of insurance to cancel status
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  15.45
========================================================================================================================
SRC:
public List<ArrCnd> getArrCnd(ArrangementCoreImpl arrangement,Class<?> clazz) throws BizApplicationException { List<ArrCnd> arrCndList = new ArrayList<ArrCnd>(); for (ArrCndCore arrCnd : arrangement.getListArrCndCoreAll()) { if (clazz.isInstance(arrCnd)) arrCndList.add((ArrCnd) arrCnd); } return arrCndList; }
TGT:
Inquire effective arrangement condition on specific base date by product condition code. Detail function description refers to {@link #getArrCnd(String)}
PRED:
Inquire effective arrangement condition by product condition ENUM. Detail function description refers to {@link #getArrCnd(String)}
test 샘플별 bleu-4:  52.61
========================================================================================================================
SRC:
public CaDstbTblMVO updateDstbTableInfo(CaDstbTblMVO in) throws BizApplicationException{ _getSvDstbTblMDso().update(_getDstbTblMIO(in)); return in; }
TGT:
Update distribution target table.
PRED:
Update distribution target table.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public static boolean isValid(String value){ for (InstParamTypeEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public StaffCashMgmtSvcCashCountDtlOut clone(){ try{ StaffCashMgmtSvcCashCountDtlOut object= (StaffCashMgmtSvcCashCountDtlOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
private BfMngrTestSvcOut getBfName(BfMngrTestSvcIn in) throws BizApplicationException { String output = _getBfMngr().getBfName(in.getInstCd(), in.getPdCd()); BfMngrTestSvcOut out = new BfMngrTestSvcOut(); if (StringUtils.isEmpty(output)) { out.setChkYn(false); } else { out.setChkYn(true); } return out; }
TGT:
Methods for inquiry benefit names
PRED:
Methods for inquiry benefit names
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrReal> getListArrBasedOnStsHistory(String custId, ArrCustRelEnum arrCustRelEnum, ArrStsEnum curArrSts, ArrStsEnum arrSts, String inqryStartDt,String inqryEndDt) throws BizApplicationException { return _getArrCustRelQryBizImpl().getArrRealListBasedOnArrStatusHistory(custId, arrCustRelEnum, null, null, null, null, curArrSts, arrSts, inqryStartDt, inqryEndDt); }
TGT:
Inquire specific department own (as accounting department) arrangements of specific product hierarchy whose status changed into specific status within inquiry period and currently in another specific status.
PRED:
Inquire specific customer own (as main contractor) arrangements of specific product code whose status changed into specific status within inquiry period and currently in another specific status. Current Status / Base Status / Inquiry Period(Start Date / End Date) Approved / Applied / 1/1 ~ 3/1 : Get arrangement applied within 1/1 ~ 3/1 and approved currently. Arrangement whose status was changed into other status on 1/1 is not inquired. Active / Applied / 1/1 ~ 3/1 : Get arrangement applied within 1/1
test 샘플별 bleu-4:  21.95
========================================================================================================================
SRC:
protected AprslRqstCoreImpl getUniqueBusinessBean(String instCd, String aprslRqstId) throws BizApplicationException { return (AprslRqstCoreImpl) ApplicationContextCoreUtils.getUniqueBusinessBean(instCd + aprslRqstId, getAprslRqstImplClass()); }
TGT:
get unique business bean in one transaction
PRED:
get unique business bean in one transaction
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void doServiceAction(String arrSrvcTpCd, ArrCndActionRequiredValue arrCndActionRequiredValue) throws BizApplicationException { ArrSrvcEnum arrSrvcEnum = ArrSrvcEnum.getEnum(arrSrvcTpCd); if( arrSrvcEnum == null ) { // there are no condition action for this condition ({0},{1}) on arrangement service ({2}) // 계약서비스 ({2})를 위한 조건 ({0},{1})의 행동은 유효하지 않습니다 throw new BizApplicationException("AAPARE0288", new Object[]{this.getCndCd(), this.getCndCdNm(), arrSrvcTpCd}); } switch(arrSrvcEnum) { // B/L인수 case ACCEPT_BL : _doServiceAction(arrSrvcTpCd, arrCndActionRequiredValue); break; default: // there are no condition action for this condition ({0},{1}) on arrangement service ({2}) // 계약서비스 ({2})를 위한 조건 ({0},{1})의 행동은 유효하지 않습니다 throw new BizApplicationException("AAPARE0288" , new Object[]{this.getCndCd(),this.getCndCdNm(),arrSrvcTpCd}); } }
TGT:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
PRED:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public BalTpDtlIO getBalType(String balTpCd) throws BizApplicationException { _checkBalTypeCode(balTpCd); StBalTpMIO stBalTpCdIO = _getStDataCacheManager().getCacheData(DataCacheCoreConfig.BALANCE_TYPE_CACHE, balTpCd); if(stBalTpCdIO == null){ stBalTpCdIO = _getStBalTpCdDso().select(balTpCd); if(stBalTpCdIO == null){ //Balance type code is not exist throw new BizApplicationException("AAPSTE0005", new Object[] {balTpCd}); } _getStDataCacheManager().saveCache(DataCacheCoreConfig.BALANCE_TYPE_CACHE,balTpCd,stBalTpCdIO); }else{ if (logger.isDebugEnabled()){ logger.debug("getBalanceType from memory : {}",stBalTpCdIO); } } return _setBalTpDtlIO(stBalTpCdIO); }
TGT:
This method inquires the information of balance type.
PRED:
This method inquires the information of balance type.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public AprvlRgstSvcAprvlLineRgstOut clone(){ try{ AprvlRgstSvcAprvlLineRgstOut object= (AprvlRgstSvcAprvlLineRgstOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaStaffSrchSvcGetStaffListIn clone(){ try{ CaStaffSrchSvcGetStaffListIn object= (CaStaffSrchSvcGetStaffListIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public java.lang.String getPdTpCd(){ return pdTpCd; }
TGT:
Inquire product type code of arrangement product. Product classification hierarchy : business distinction code > product type code > product template code > product code
PRED:
Inquire product type code of arrangement product. Product classification hierarchy : business distinction code > product type code > product template code > product code
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public StdCustMemoChngSvcRvctIn clone(){ try{ StdCustMemoChngSvcRvctIn object= (StdCustMemoChngSvcRvctIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrReal> getListCustOwnArrRealActiveOnBaseDt (String custId, String baseDt, String tdyLastStsYn) throws BizApplicationException { //return _getArrCustRelQryBizImpl().getArrRealListActiveByStsOnBaseDt(custId, ArrCustRelEnum.MAIN_CONTRACTOR.getValue(), null, null, null, null, baseDt, 0, 0, tdyLastStsYn); return _getArrCustRelQryBizImpl().getListArrRealActiveOnBaseDt(custId, ArrCustRelEnum.MAIN_CONTRACTOR.getValue(), null, null, null, null, baseDt, 0, 0, tdyLastStsYn); }
TGT:
Inquire a list of customer own (as main contractor) arrangements which was in "Active" status on specific date.
PRED:
Inquire a list of customer own (as main contractor) arrangements which was in "Active" status on specific date.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getEnglishAttributeName() throws BizApplicationException { return stdAtrbt.getAtrbtEngNm(); }
TGT:
Query English attribute name
PRED:
Query English attribute name
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public DcDocMIO select(String docStsCd, String docId, String docTypeCd) { return _getDcDocM().select(docStsCd, docId, docTypeCd); }
TGT:
It get a http header properties.
PRED:
It get a http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<InterestCalculationSection> apply(ApplyInterestCalculationSectionExceptionIn in, List<InterestCalculationSection> intCalIntervals) throws BizApplicationException { String calBaseDt = in.getCalBaseDt(); // 계산기준일(거래일) // 마지막 구간 InterestCalculationSection lastInterval = intCalIntervals.get(intCalIntervals.size() - 1); List<CalculationType> calTps = lastInterval.getCalTps(); CalculationType lastType = calTps.get(calTps.size() - 1); // 만기일익일상환연체 CalculationType t1 = lastType.clone(); t1.setIntCalTpCd("311"); // 만기일익일상환연체 t1.setCalStartDt(calBaseDt); // 기산일 1일 t1.setCalEndDt(calBaseDt); t1.setIntCalTgt(true); calTps.add(t1); // 만기일익일상환약정 CalculationType t2 = lastType.clone(); t2.setIntCalTpCd("183"); // 만기일익일상환약정환출 t2.setCalStartDt(calBaseDt); // 기산일 1일 t2.setCalEndDt(calBaseDt); t2.setIntCalTgt(true); calTps.add(t2); return intCalIntervals; }
TGT:
Change the status of arrangement into "Applied".
PRED:
Change the status of arrangement into "Applied", while change product of arrangement based on product code input. Following additional arrangement information can be registered. 1) Account number 2) Whether if created mandatory condition automatically or not 3) A list of arrangement level condition 4) A list of arrangement relation information 5) A list of arrangement extended attribute
test 샘플별 bleu-4:  9.53
========================================================================================================================
SRC:
public String getSubInfo(String atrbtNm, AprslImpl aprslImpl, Integer aprslThingSeqNbr) throws BizApplicationException { // 1. 보조명세 캐시 조회 IValueObject aprslThingSubInfo = getSubInfoCache(aprslImpl, aprslThingSeqNbr); // 2. 보조원장 캐시가 null인 경우, null 리턴 if (aprslThingSubInfo == null) { return null; } // 3. 보조명세 캐시에서 속성명을 기준으로 속성값 조회 Object atrbtVal = aprslThingSubInfo.get(atrbtNm); // 속성값이 null인경우 null리턴 if (atrbtVal == null) { return null; } return String.valueOf(atrbtVal); }
TGT:
This method provides to inquire the specific subsidiary information named 'xtnAtrbtNm'.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  22.45
========================================================================================================================
SRC:
public DocBsicIO getDocBasic() throws BizApplicationException { return docBsicIO; }
TGT:
It inquiries a basic information of document.
PRED:
It inquiries document basic information.
test 샘플별 bleu-4:  25.88
========================================================================================================================
SRC:
public IValueObject getSubInfo(StlmntCalcnSubInfoInqryIn stlmntCalcnSubInfoInqryIn) throws BizApplicationException { return _getStlmntCalcnSubInfoBiz().getSubInfo(_setStStlmntCalcnSIO(stlmntCalcnSubInfoInqryIn)); }
TGT:
This method inquires settlement subsidiary detail information list (inquire all subsidiary detail information of a given settlement master by using the key value other than the detail sequence number).
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  2.95
========================================================================================================================
SRC:
public void modifyPassword(StaffMdfctnIn staffMdfctnIn) throws BizApplicationException { super.modifyPassword(staffMdfctnIn); /** * clear password error count and excess YN */ StaffSubInfo staffSubInfo = new StaffSubInfo(); staffSubInfo = this.getStaffSubInfo(); staffSubInfo.setPswdErrCnt(CCM01.ZERO); staffSubInfo.setPswdErrCntExcsYn(CCM01.NO); staffSubInfo.setPswdLockExprtnDtm(null); this.saveStaffSubInfo(staffSubInfo); }
TGT:
It modifies customer related person's login password.
PRED:
It modifies staff login password. After login password modification, it refreshes login error count and error count excess YN.
test 샘플별 bleu-4:  10.66
========================================================================================================================
SRC:
public AsInsrncCustRStsHIO select(AsInsrncCustRStsHIO asInsrncCustRStsHIO){ return _getAsInsrncCustRStsH().select(asInsrncCustRStsHIO); }
TGT:
It get a http header properties.
PRED:
It get a http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getSubInfo(String xtnAtrbtNm, Integer arrSrvcBlckngSeqNbr, Integer seqNbr, ArrRealCore arrRealCore) throws BizApplicationException { return _getArrSrvcBlckngSubInfoBiz().getSubInfo(xtnAtrbtNm, arrSrvcBlckngSeqNbr, seqNbr, (ArrRealImpl)arrRealCore); }
TGT:
Inquire a specific subsidiary information of the appraisal.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  67.87
========================================================================================================================
SRC:
public LnAplctnDtlInqrySvcIn clone(){ try{ LnAplctnDtlInqrySvcIn object= (LnAplctnDtlInqrySvcIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void modifyBal(ArrBalCore arrBal, String baseDt, EntryIn entry, ArrTxCore arrTx, BalUpdtIn balUpdtIn) throws BizApplicationException { // unused }
TGT:
This method provides the function for updating balance when creating the financial transaction. This method is used when the way of updating balance is not 'individual(INDI)'.
PRED:
This method provides the function for updating balance when creating the financial transaction. This method is used when the way of updating balance is not 'individual(INDI)'.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value) throws BizApplicationException{ for (CaAtrbtVldtnWayEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getInstParm(String parmAtrbtNm ) throws BizApplicationException { String instCd = _getCmnContextCore().getInstCode(); String instParm = getInstitutionParameterValue(instCd, parmAtrbtNm); // 2020.11.02 // 기관파라미터값 조회 시 해당 기관의 값만을 조회하도록 수정 // 기존에는 해당 기관에 값이 정의되지 않은 경우 STDA의 값을 참조했음 return instParm; }
TGT:
It query institution parameter attribute value simply. if want to get the value of attribute for each institution, use the method.
PRED:
It query institution parameter attribute value simply. if want to get the value of attribute for each institution, use the method instead of instParmMngr.getInstParm method.
test 샘플별 bleu-4:  80.47
========================================================================================================================
SRC:
public PreScrnngRgstSvcOpenIn clone(){ try{ PreScrnngRgstSvcOpenIn object= (PreScrnngRgstSvcOpenIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public int delete(CaAsLeasePrtctnCrtrMIO asLeasePrtctnCrtrMIO){ return _getAsLeasePrtctnCrtrM().delete(asLeasePrtctnCrtrMIO); }
TGT:
It changes the status of insurance to cancel status
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  15.45
========================================================================================================================
SRC:
public java.util.List<bankware.corebanking.configurationadmin.document.service.dto.CaDocSrchSvcGetDocClTreeDtlOut> getChildren(){ return children; }
TGT:
Inquire a list of child arrangement.
PRED:
Inquire a list of child arrangement by product hierarchy information and a list of arrangement status code input.
test 샘플별 bleu-4:  24.94
========================================================================================================================
SRC:
public AtSelfAuthXtnInfoDIO select(String selfAuthId, String xtnAtrbtNm) { return _getAtSelfAuthXtnInfoD().select(_getCmnContext().getInstCode(), selfAuthId, xtnAtrbtNm); }
TGT:
It get a http header properties.
PRED:
It get a http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CoaDtlIO getCoa(String instCd,String acctgDscd,String acctgItmCd) throws BizApplicationException{ // _checkInstId(instCd); _checkAcctgDscd(acctgDscd); _checkAcctgItmCd(acctgItmCd); String key = _getKeyString(instCd, acctgDscd, acctgItmCd); // read from instance memory //AcCoaMIO out = _getAcDataCacheManager().getCacheData(DataCacheCoreConfig.CHART_OF_ACCOUNTS, key); AcCoaCacheIO out = _getAcDataCacheManager().getCacheData(DataCacheCoreConfig.CHART_OF_ACCOUNTS, key); if(out != null) { return _getCoaDtlIO(out); } AcCoaMIO inqryIn = _getAcCoaMIO(instCd,acctgDscd,acctgItmCd); // Inquiry CoA List from DB (coa 기본정보 조회) AcCoaMIO acCoaMIO = _getAcCoaMDso().select(inqryIn); if (acCoaMIO == null){ throw new BizApplicationException("AAPACE0010", new Object[] { acctgItmCd }); } // Inquiry coa extended information (coa확장정보 조회) List<AcCoaXtnInfoDIO> xtnInfoList = _getAcCoaXtnInfoDDso().selectList(inqryIn); //set basic information and extended information of coa to AcCoaCacheIO AcCoaCacheIO coaCache = _getAcCoaCacheIO(acCoaMIO, xtnInfoList); // save to instance memory _getAcDataCacheManager().saveCache(DataCacheCoreConfig.CHART_OF_ACCOUNTS, key, coaCache); return _getCoaDtlIO(coaCache); }
TGT:
This method is for getting Coa information.
PRED:
This method is for getting Coa information.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getCndValDefault() throws BizApplicationException { return null; }
TGT:
This method get the arrangement condition value as string. for list type condition, return list code. If level of negotiation is arrangement return arrangement list code or range value. If level of negotiation is product and size of list code is one, return product list code or default value Others return null
PRED:
This method get the arrangement condition value as string. For list type condition, return list code. If level of negotiation is arrangement return arrangement list code or range value. If level of negotiation is product and size of list code is one, return product list code or default value. Others return null
test 샘플별 bleu-4:  90.08
========================================================================================================================
SRC:
public StlmntCrctnMgmtSvcItemOut clone(){ try{ StlmntCrctnMgmtSvcItemOut object= (StlmntCrctnMgmtSvcItemOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public DummyIO modifyArrCndClass(CaArrCndCntrlClassSaveIn in) throws BizApplicationException { CaArrCndClassIn input = new CaArrCndClassIn(); input.setInstCd(in.getInstCd()); input.setCndCd(in.getCndCd()); input.setCndClassNm(in.getCndClassNm()); input.setBizDscd(in.getBizDscd()); input.setPdTpCd(in.getPdTpCd()); input.setPdTmpltCd(in.getPdTmpltCd()); input.setPdCd(in.getPdCd()); _getArrCndCntrlMgmt().modifyArrCndClass(input); return new DummyIO(); }
TGT:
Update arrangement condition mapped class (condition variation class name)
PRED:
Modify arrangement condition mapped class ( condition variation class name )
test 샘플별 bleu-4:  36.46
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> subInfoMap, StStlmntSIO stStlmntSIOIn) { logger.debug("##<ST-StlmntSubInfoBiz> saveMapSubInfo"); if(subInfoMap==null || subInfoMap.isEmpty()) { return; } // 1.create a new instance of I/F VO // IValueObject subInfoIfVo = new StlmntSubInfo(); // 2.create a new instance of DBIO VO StStlmntSIO stStlmntSIO = new StStlmntSIO(); // 3.set key to DBIO VO _setKey(stStlmntSIO, stStlmntSIOIn); // 3.convert map to DBIO VO DtoUtils.setSubInfoIO(subInfoMap, stStlmntSIO); // 4.insert subsidiary detail _insertSubInfo(stStlmntSIO); }
TGT:
Save the appraisal thing subsidiary information using map.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  6.11
========================================================================================================================
SRC:
public boolean check(Map<String, String> atrbtCntnt) throws BizApplicationException { if(logger.isDebugEnabled()) { logger.debug("ArthmtcOprtnCmpxVldtnImpl : {}", atrbtCntnt); } int cnt = 0; BigDecimal lVal = BigDecimal.ZERO; BigDecimal sum = BigDecimal.ZERO; for(Map.Entry<String, String> atrbt: atrbtCntnt.entrySet()) { if(atrbt.getValue() == null || !DataCheckUtils.isNumeric(atrbt.getValue())) { // It is {0} error. Please check {0}. throw new BizApplicationException("AAPCME0002", new Object[] {"@inpCntnt"}, new Object[] {"ArthmtcOprtnCmpxVldtnImpl : " + atrbtCntnt.toString()}); } if(cnt == 0) { lVal = new BigDecimal(atrbt.getValue()); cnt++; continue; } sum = sum.add(new BigDecimal(atrbt.getValue())); cnt++; } if(lVal.compareTo(sum) != 0) { // There is mismatch between first item and sum of other items. {0} throw new BizApplicationException("AAPCME0171", new Object[] {atrbtCntnt.toString()}); } return true; }
TGT:
Validate the attribute value ( Simple Validation ) Implemented and used by each business component.
PRED:
Validate the attribute value ( Complex Validation ) Implemented and used by each business component.
test 샘플별 bleu-4:  81.54
========================================================================================================================
SRC:
public MenuMgmtSvcGetListMenuOut clone(){ try{ MenuMgmtSvcGetListMenuOut object= (MenuMgmtSvcGetListMenuOut)super.clone(); if ( this.menuItmList== null ) object.menuItmList = null; else{ java.util.List<bankware.corebanking.common.menu.service.dto.MenuMgmtSvcGetListMenuSubOut> clonedList = new java.util.ArrayList<bankware.corebanking.common.menu.service.dto.MenuMgmtSvcGetListMenuSubOut>(menuItmList.size()); for( bankware.corebanking.common.menu.service.dto.MenuMgmtSvcGetListMenuSubOut item : menuItmList ){ clonedList.add( (bankware.corebanking.common.menu.service.dto.MenuMgmtSvcGetListMenuSubOut)item.clone()); } object.menuItmList = clonedList; } if ( this.prtltDfltScrnIdList== null ) object.prtltDfltScrnIdList = null; else{ java.util.List<bankware.corebanking.common.menu.service.dto.MenuMgmtSvcGetprtltDfltScrnIdOut> clonedList = new java.util.ArrayList<bankware.corebanking.common.menu.service.dto.MenuMgmtSvcGetprtltDfltScrnIdOut>(prtltDfltScrnIdList.size()); for( bankware.corebanking.common.menu.service.dto.MenuMgmtSvcGetprtltDfltScrnIdOut item : prtltDfltScrnIdList ){ clonedList.add( (bankware.corebanking.common.menu.service.dto.MenuMgmtSvcGetprtltDfltScrnIdOut)item.clone()); } object.prtltDfltScrnIdList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveTelNbrInfo(List<ActorTelNbrRgstIn> actorTelNbrInList) throws BizApplicationException { if( actorTelNbrInList == null || actorTelNbrInList.isEmpty()) { return; } /** * 1. 기존 액터연락처목록 조회 */ List<AtActorTelNbrDXtnIO> rgstrnTelNbrIOList = _getActorCtcptXtn().getListRgstrnTelNbrAddrInfo(this); /** * 2. 연락처 정보 저장 */ for (ActorTelNbrRgstIn actorTelNbrIn : actorTelNbrInList) { /** * 2.1. 대표연락처여부 Y 중복 판단 - 중복 시 에러 */ if (CCM01.YES.equals(actorTelNbrIn.getCtcptRprsntvYn())) { _checkRepresentativeYnDuplication(actorTelNbrIn.getActorCtcptId(), actorTelNbrIn.getCntctMthdTpCd()); } /** * 2.2. 연락처 중복 판단 - 중복 시 스킵 */ boolean isDuplicated = _getActorCtcptXtn().checkTelNbrDplctn(this, actorTelNbrIn, rgstrnTelNbrIOList); if (logger.isDebugEnabled()) { logger.debug("## <AT> saveTelNbrInfo -> isDuplicated = {} :: ", isDuplicated); } if (isDuplicated) { continue; } /** * 2.3. 확장속성 EAV 요소 분�
TGT:
It registers/modifies actor telephone number information list. Telephone number information includes international telephone number, ID telephone number, representing contact point YN, contact prohibition type code and authenticated YN. If the input representing contact method is duplicated with the already registered information, it throws exception.
PRED:
It registers/modifies actor telephone number information list. telephone number information includes international telephone number, identification telephone number, representing contact point YN, contact prohibition type code and authenticated YN. If the input representing contact method is duplicated with the already registered information, it throws exception.
test 샘플별 bleu-4:  88.2
========================================================================================================================
SRC:
public CmTodayMBatIO clone(){ try{ CmTodayMBatIO object= (CmTodayMBatIO)super.clone(); object.lastChngTmstmp = (bxm.omm.format.wrapper.DateFormattedWrapper)this.lastChngTmstmp.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isValidRoleServiceRelation(String instCd, List<String> roleIdList, String srvcCd) throws BizApplicationException { _checkStringValue(instCd, CCM03.INST_CD); if(roleIdList.isEmpty()) _checkStringValue("", CCM03.ROLE_ID); _checkStringValue(srvcCd, CCM03.SRVC_CD); CaCmRoleSrvcRByRoleIdListIO in = new CaCmRoleSrvcRByRoleIdListIO(); in.setInstCd(instCd); in.setSrvcCd(srvcCd); in.setRoleIdList(roleIdList); List<CaCmRoleSrvcRIO> cmRoleSrvcRIOList = _getCmRoleSrvcRDso().selectListByRoleList(in); if(cmRoleSrvcRIOList.isEmpty()) { return false; } return true; }
TGT:
It verifies that there is a list of roles entered in the service code entered.
PRED:
It verifies that there is a list of roles entered in the service code entered.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ScrtyIntMngrSvcDelIn clone(){ try{ ScrtyIntMngrSvcDelIn object= (ScrtyIntMngrSvcDelIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public int delete(StAmtTpRpymntSeqDIO stAmtTpRpymntSeqDIO) { return _getStAmtTpRpymntSeqD().delete(stAmtTpRpymntSeqDIO); }
TGT:
Delete the security interest.
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  20.56
========================================================================================================================
SRC:
public CaDocSrchSvcGetDocClTreeOut clone(){ try{ CaDocSrchSvcGetDocClTreeOut object= (CaDocSrchSvcGetDocClTreeOut)super.clone(); if ( this.children== null ) object.children = null; else{ java.util.List<bankware.corebanking.configurationadmin.document.service.dto.CaDocSrchSvcGetDocClTreeDtlOut> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.document.service.dto.CaDocSrchSvcGetDocClTreeDtlOut>(children.size()); for( bankware.corebanking.configurationadmin.document.service.dto.CaDocSrchSvcGetDocClTreeDtlOut item : children ){ clonedList.add( (bankware.corebanking.configurationadmin.document.service.dto.CaDocSrchSvcGetDocClTreeDtlOut)item.clone()); } object.children = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<TblXtnAtrbtOut> getTableExtendAttribute(String instCd, String tblNm) throws BizApplicationException { return this.getTableExtendAttribute(instCd, tblNm, XtnAtrbtVrtnCmpsEnum.NA, null); }
TGT:
Query table extend attribute list by no condition basic method reference : {@link TblXtnAtrbtCore getTableExtendAttribute(String, String, XtnAtrbtVrtnCmpsEnum, Map<String, String>)}
PRED:
Query table extend attribute list by no condition basic method reference : {@link TblXtnAtrbtCore getTableExtendAttribute(String, String, XtnAtrbtVrtnCmpsEnum, Map<String, String>)}
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public NoticeBsicInfoIO request(NoticeBsicInfoIO noticeBsicInfoIO, Map<String,Object> refObjectMap) throws BizApplicationException { return request(noticeBsicInfoIO, refObjectMap, null); }
TGT:
It requests notice. It can be used after connecting with actual SMS text and EMAIL sending server. For SMS, the caller ID is : 0101112222 For E-Mail, the caller ID is : admin@bankwareglobal.com
PRED:
It requests notice. It can be used after connecting with actual SMS text and EMAIL sending server. For SMS, the caller ID is : 0101112222 For E-Mail, the caller ID is : admin@bankwareglobal.com
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public PdCndImpl getCnd(PdCndIn in) throws BizApplicationException { // 조건 오브젝트 생성 및 초기화 // Get Condition Bean and initialize PdCndImpl cnd = new PdCndImpl(this, in); cnd.initialize(); // Return condition return cnd; }
TGT:
This Method create a condition object. condition information initialization. condition object has condition defined in point or common condition information.
PRED:
This Method create a condition object. condition information initialization. condition object has condition defined in product or common condition information.
test 샘플별 bleu-4:  86.56
========================================================================================================================
SRC:
public void terminate(InsrncStsChngIn in) throws BizApplicationException { InsrncStsCoreEnum afStstCd = InsrncStsCoreEnum.TERMINATED; // 1. 입력값 검증 _checkStsChnginput(in, afStstCd); // 2. 보증기본 설정상태 변경 ("해지"상태로 변경) _getInsrncBsicBiz().changeInsrnStatus(this, in, afStstCd.getValue()); } /** * <div class='en'> * @description * <pre> * t change the status of insurance to cancel status * </pre> * @seealso * @note {@link InsrncStsChngIn} : required fields - all of them * </div> * * <div class='ko'> * @description * <pre> * 보험의 상태를 취소상태로 변경한다. * </pre> * @seealso * @note {@link InsrncStsChngIn}
TGT:
Change status of arrangement group into "Terminated". Available next status is managed by ArrGrpMapStsChngDflt and it throws error if new status is not available.
PRED:
Change status of arrangement group into "Terminated". Available next status is managed by ArrGrpMapStsChngDflt and it throws error if new status is not available.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArrStndngOrder getArrStndngOrder(String arrId) throws BizApplicationException { ArrRealImpl arrReal = (ArrRealImpl) super.getArrRealCore(arrId); return (ArrStndngOrder) _checkArrObjectByKind( arrReal, ArrKndEnum.STANDING_ORDER ); }
TGT:
This method inquire standing order arrangement using arrangement ID. Detail function description refers to {@link #getArr(ArrRealGetIn)}.
PRED:
Inquire standing order arrangement using arrangement id (internal use) or business key like account number, application number , mobile number and so on. If 'arrExtrnlIdNbrTp'(arrangement external identification number type) is null, then arrIdNbr is arrangement identification. If you want to get the child arrangements directly, passes account number and the nthNbr for child sequence number.
test 샘플별 bleu-4:  8.31
========================================================================================================================
SRC:
public boolean isPackagePd() { return CCM01.YES.equals(pdPdM.getPckgPdYn()); }
TGT:
This Method inquire whether a package is a product
PRED:
This Method inquire whether a package is a product.
test 샘플별 bleu-4:  88.01
========================================================================================================================
SRC:
public String getSubInfo(String atrbtNm, ScrtyIntImpl scrtyIntImpl) throws BizApplicationException { // 1. 설정 객체에 저장된 보조명세 캐시 조회 AsScrtyIntSIO scrtyIntSubInfo = getSubInfoCache(scrtyIntImpl); // 2. 설정에 저장된 보조원장 캐시가 null인 경우, null 리턴 if (scrtyIntSubInfo == null) { return null; } // 3. 설정에 저장된 보조명세 캐시에서 속성명을 기준으로 속성값 조회 Object atrbtVal = scrtyIntSubInfo.get(atrbtNm); // 속성값이 null인경우 null리턴 if (atrbtVal == null) { return null; } return String.valueOf(atrbtVal); }
TGT:
Inquire a specific subsidiary information of the asset transaction.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  67.87
========================================================================================================================
SRC:
public DpstIntCalculatorOut calculateInterestProvisionalSettlement(Arr arr, int txSeqNbr,String baseDt, Map<String, String> xtdInfo, boolean smltn) throws BizApplicationException { return _calculateInt(arr, txSeqNbr, null, baseDt, smltn, xtdInfo, InterestTransactionTypeEnum.PROVISIONAL_SETTLEMENT); }
TGT:
This method calculates the provisional interest settlement. The way of interest calculation by product is as follows. 1.Demand deposit product : calculate interest on the same plan as settlement case 2.Installment product : calculate maturity interest for each deposit 3.Term deposit product : calculate maturity interest on the deposit
PRED:
This method calculates the provisional interest settlement. The way of interest calculation by product is as follows. 1.Demand deposit product : calculate interest on the same plan as settlement case 2.Installment product : calculate maturity interest for each deposit 3.Term deposit product : calculate maturity interest for each deposit 3.Term deposit product : calculate maturity interest on the deposit
test 샘플별 bleu-4:  82.9
========================================================================================================================
SRC:
public CaSrvcMgmtSvcChngListIn clone(){ try{ CaSrvcMgmtSvcChngListIn object= (CaSrvcMgmtSvcChngListIn)super.clone(); if ( this.tblNm== null ) object.tblNm = null; else{ java.util.List<bankware.corebanking.configurationadmin.service.service.dto.CaSrvcMgmtSvcChngIn> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.service.service.dto.CaSrvcMgmtSvcChngIn>(tblNm.size()); for( bankware.corebanking.configurationadmin.service.service.dto.CaSrvcMgmtSvcChngIn item : tblNm ){ clonedList.add( (bankware.corebanking.configurationadmin.service.service.dto.CaSrvcMgmtSvcChngIn)item.clone()); } object.tblNm = clonedList; } if ( this.saveList== null ) object.saveList = null; else{ java.util.List<bankware.corebanking.configurationadmin.service.service.dto.CaSrvcMgmtSvcChngIn> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.service.service.dto.CaSrvcMgmtSvcChngIn>(saveList.size()); for( bankware.corebanking.configurationadmin.service.service.dto.CaSrvcMgmtSvcChngIn item : saveList ){ clonedList.add( (bankware.corebanking.configurationadmin.service.service.dto.CaSrvcMgmtSvcChngIn)item.clone()); } object.saveList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public static boolean isValid(String value){ for (DebitCrdtDscdEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaDstbCtvdSrchDetailOut clone(){ try{ CaDstbCtvdSrchDetailOut object= (CaDstbCtvdSrchDetailOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveXtnInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, String txDt, Integer txSeqNbr) throws BizApplicationException { _getArrActvtyBasic().saveXtnAtrbt(xtnAtrbtNm, xtnAtrbtCntnt, txDt, txSeqNbr, this); }
TGT:
Save (create or change ) extend attribute.
PRED:
Save (create or change) extended attribute. If you want to erase the registered attribute value , set the extended attribute content into null.
test 샘플별 bleu-4:  10.41
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(CustRprsnImpl custRprsnImpl) throws BizApplicationException { Map<String, String> subInfoMap = new HashMap<String, String>(); // 1. 보조명세 캐시 조회 AtCustRprsnSIO subInfo = getSubInfoCache(custRprsnImpl); // 2. 보조명세 캐시가 null인 경우, 빈 Map 리턴 if (subInfo == null) { return subInfoMap; } // 3. 보조명세 캐시를 Map으로 convert for (Entry<String, Object> entry : subInfo.getFieldValues().entrySet()) { // Casting 시 Null 방지 if (entry.getValue() != null) { subInfoMap.put(entry.getKey(), String.valueOf(entry.getValue())); } } return subInfoMap; }
TGT:
Inquire all subsidiary information of the appraisal as a map.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  18.85
========================================================================================================================
SRC:
public List<ArrIntRt> getCurrentArrIntRt() throws BizApplicationException { PdIntRtStrctrClCdEnum arrIntRtTp = _getNormalIntRtTpCdByPd(); return _getArrIntRtProvider().getListArrIntRt(this, arrIntRtTp, ArrCmnUtil.getRckngDt( _getCmnContext())); }
TGT:
Inquire current interest rate of arrangement. Inquire deposit normal interest rate for deposit arrangement, loan normal interest rate for loan arrangement. Inquire registered interest rate for decided interest rate, calculate new one on transaction date for undecided.
PRED:
Inquire interest rate currently applied to the arrangement.
test 샘플별 bleu-4:  0.64
========================================================================================================================
SRC:
protected ArrGrpCoreImpl getUniqueBusinessBean(String arrGrpId ) throws BizApplicationException { return (ArrGrpCoreImpl) ApplicationContextCoreUtils.getUniqueBusinessBean(_getCmnContextCore().getInstCode() + arrGrpId, getArrGrpImplClass()); }
TGT:
get unique business bean in one transaction
PRED:
get unique business bean in one transaction
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getArrStsHms(){ return arrStsHms; }
TGT:
Inquire the arrangement status change time
PRED:
Inquire the time when arrangement changed into current status.
test 샘플별 bleu-4:  21.11
========================================================================================================================
SRC:
public String saveRelationXtnInfo(ArrRelInfoIn arrRelInfoIn,String xtnAtrbtNm, String xtnAtrbtCntnt,String txDt,Integer txSeqNbr,ArrRealCoreImpl arrReal) throws BizApplicationException { if (ArrKndCoreEnum.TEMPORARY.getValue().equals(arrReal.getArrKindCd())){ return null; } _checkInput(arrRelInfoIn,xtnAtrbtNm,txDt,txSeqNbr); // Check Transaction Exist // 거래생성여부 검증 _getArrCmnUtil().validateArrTxExist(arrReal, txDt, txSeqNbr); return _saveArrRelExtendAttribute(arrRelInfoIn,xtnAtrbtNm, xtnAtrbtCntnt,txDt,txSeqNbr, arrReal); }
TGT:
Save arrangement relation extended attribute to the arrangement.
PRED:
Save arrangement relation extended attribute to the arrangement.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(AssetImpl asset, Integer assetThingSeqNbr){ Map<String, String> subInfoMap = new HashMap<String, String>(); // 1. 보조명세 캐시 조회 IValueObject subInfo = getSubInfoCache(asset, assetThingSeqNbr); // 2. 보조명세 캐시가 null인 경우, 빈 Map 리턴 if (subInfo == null) { return subInfoMap; } // 3. 보조원장 캐시를 Map으로 convert for (Entry<String, Object> entry : subInfo.getFieldValues().entrySet()) { if(!_isSubInfoContainsField(asset.getAssetThingSubInfoKnd(assetThingSeqNbr), entry.getKey())) { continue; } // Casting 시 Null 방지 if (entry.getValue() != null ) { subInfoMap.put(entry.getKey(), String.valueOf(entry.getValue())); } } return subInfoMap; }
TGT:
Inquire all subsidiary information of the asset thing as a map.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  17.06
========================================================================================================================
SRC:
public void saveSubInfo (String xtnAtrbtNm, String xtnAtrbtCntnt, StlmntSubInfoInqryIn subInfoInqryIn) throws BizApplicationException { // validate input value StlmntXtnInfoEnum stlmntXtnInfo = StlmntXtnInfoEnum.getEnum(xtnAtrbtNm); if(stlmntXtnInfo == null){ //xtnAtrbtNm은 유효한 정산확장속성이 아닙니다. throw new BizApplicationException("AAPSTE0201", new String[] {xtnAtrbtNm}); } _getStlmntSubInfoBiz().saveSubInfo(xtnAtrbtNm, xtnAtrbtCntnt, _setStSTlmntSIO(subInfoInqryIn)); }
TGT:
Save an insurance subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public CaMenuMgmtSvcGetUserMenuListOut clone(){ try{ CaMenuMgmtSvcGetUserMenuListOut object= (CaMenuMgmtSvcGetUserMenuListOut)super.clone(); if ( this.prtltDfltScrnIdList== null ) object.prtltDfltScrnIdList = null; else{ java.util.List<bankware.corebanking.configurationadmin.ui.service.dto.CaMenuMgmtSvcGetprtltDfltScrnIdOut> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.ui.service.dto.CaMenuMgmtSvcGetprtltDfltScrnIdOut>(prtltDfltScrnIdList.size()); for( bankware.corebanking.configurationadmin.ui.service.dto.CaMenuMgmtSvcGetprtltDfltScrnIdOut item : prtltDfltScrnIdList ){ clonedList.add( (bankware.corebanking.configurationadmin.ui.service.dto.CaMenuMgmtSvcGetprtltDfltScrnIdOut)item.clone()); } object.prtltDfltScrnIdList = clonedList; } if ( this.menuItmList== null ) object.menuItmList = null; else{ java.util.List<bankware.corebanking.configurationadmin.ui.service.dto.CaMenuMgmtSvcGetUserMenuOut> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.ui.service.dto.CaMenuMgmtSvcGetUserMenuOut>(menuItmList.size()); for( bankware.corebanking.configurationadmin.ui.service.dto.CaMenuMgmtSvcGetUserMenuOut item : menuItmList ){ clonedList.add( (bankware.corebanking.configurationadmin.ui.service.dto.CaMenuMgmtSvcGetUserMenuOut)item.clone()); } object.menuItmList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public StlmntManualEntryMgmtSvcRegisterIn clone(){ try{ StlmntManualEntryMgmtSvcRegisterIn object= (StlmntManualEntryMgmtSvcRegisterIn)super.clone(); if ( this.tblNm== null ) object.tblNm = null; else{ java.util.List<bankware.corebanking.accounting.closingaccounts.service.dto.StlmntManualEntryMgmtSvcRegisterItemIn> clonedList = new java.util.ArrayList<bankware.corebanking.accounting.closingaccounts.service.dto.StlmntManualEntryMgmtSvcRegisterItemIn>(tblNm.size()); for( bankware.corebanking.accounting.closingaccounts.service.dto.StlmntManualEntryMgmtSvcRegisterItemIn item : tblNm ){ clonedList.add( (bankware.corebanking.accounting.closingaccounts.service.dto.StlmntManualEntryMgmtSvcRegisterItemIn)item.clone()); } object.tblNm = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean check(String nbr) throws BizApplicationException { if(!DataCheckUtils.checkSocialSecurityNbr(nbr)) { throw new BizApplicationException("AAPCME0160", null); } return true; }
TGT:
Validate the attribute value ( Simple Validation ) Implemented and used by each business component.
PRED:
Validate the attribute value ( Complex Validation ) Implemented and used by each business component.
test 샘플별 bleu-4:  81.54
========================================================================================================================
SRC:
public CaDocRgstSvcRgstTmpltIn clone(){ try{ CaDocRgstSvcRgstTmpltIn object= (CaDocRgstSvcRgstTmpltIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CustRprsnInqrySvcGetLoinIdNbrIn clone(){ try{ CustRprsnInqrySvcGetLoinIdNbrIn object= (CustRprsnInqrySvcGetLoinIdNbrIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean check(String vldnTrgt) throws BizApplicationException { if (_getArrMngr().getArrReal(vldnTrgt) == null) { throw new BizApplicationException("AAPARE0696", new String[] {vldnTrgt}); } return true; }
TGT:
Validate the attribute value ( Complex Validation ) Implemented and used by each business component.
PRED:
Validate the attribute value ( Complex Validation ) Implemented and used by each business component.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> aprslThingSubInfoMap, AprslCore aprslCore, Integer aprslThingSeqNbr) throws BizApplicationException { _getAprslThingSubInfoBiz().saveMapSubInfo(aprslThingSubInfoMap, (AprslImpl) aprslCore, aprslThingSeqNbr); }
TGT:
This method save settlement subsidiary detail information using subInfoMap.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public java.lang.String getDstbTrgtScrnYn(){ return dstbTrgtScrnYn; }
TGT:
Inquire distribution target screen yn.
PRED:
Inquire distribution target screen yn.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public int delete(AcBillCtgryCashDIO acBillCtgryCashDIO) throws BizApplicationException { return _getAcBillCtgryCashD().delete(acBillCtgryCashDIO); }
TGT:
It removes document information.
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  15.62
========================================================================================================================
SRC:
public List<ArrCashFlowIO> getListArrDueDateAdvent(String instCd, String deptId, String inqryStartDt, String inqryEndDt) throws BizApplicationException { List<ArrCashFlowIO> arrIdList = new ArrayList<ArrCashFlowIO>(); ArrCashFlowIO arrIdIO = null; /** Check Input Argument */ _checkInputValue(instCd, "instCd"); _checkInputValue(deptId, "deptId"); _checkInputValue(inqryStartDt, "inqryStartDt"); _checkInputValue(inqryEndDt, "inqryEndDt"); if( DateUtils.isValidDate(inqryStartDt) == false ) { // [{0}] [{1}] 입력한 날짜형식이 유효하지 않습니다. 디폴트 날짜 포맷은 "YYYYMMDD" 입니다. throw new BizApplicationException("AAPCME0001", new Object[]{"@inqryStartDt",inqryStartDt}); } if( DateUtils.isValidDate(inqryEndDt) == false ) { // [{0}] [{1}] 입력한 날짜형식이 유효하지 않습니다. 디폴트 날짜 포맷은 "YYYYMMDD" 입니다. throw new BizApplicationException("AAPCME0001", new Object[]{"@inqryEndDt",inqryEndDt}); } if( inqryEndDt.compareTo(inqryStartDt) < 0 ) { // {0}는 {1} 보다 커야 합니다. 입
TGT:
Inquire the list of repayment schedules due for each department.
PRED:
Inquire a list of arrangement's due date advance
test 샘플별 bleu-4:  18.68
========================================================================================================================
SRC:
public WatchListFilterSvcOut executeWatchListFiltering(WatchListFilterSvcIn in) throws BizApplicationException { /** * 1. get customer object */ Cust cust = _getCustMngr().getCust(in.getCustId()); /** * 2. Open CustTx */ CustTxCrtnIn custTxCrtnIn = new CustTxCrtnIn(); custTxCrtnIn.setCustTxBsicInfo(_setCustTxBsicInfo(in.getCustId())); CustTx custTx = _getCustTxMngr().createCustTx(custTxCrtnIn); /** * 3. execute watch list filtering */ String dueDlgncDscd = cust.executeWatchListFiltering(custTx.getCustTxSeqNbr()); /** * 4. assemble output */ WatchListFilterSvcOut out = new WatchListFilterSvcOut(); out.setDueDlgncDscd(dueDlgncDscd); return out; }
TGT:
It executes watch list filtering. If the actor is decided as a EDD target customer, due diligence information will be registered/modified.
PRED:
It executes watch list filtering. If the actor is decided as a EDD target customer, due diligence information will be registered/modified.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value) { for (DpstPdTemplateCdEnum enumObject : values()) { if (enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public TxQrySvcGetStlmntListIn clone(){ try{ TxQrySvcGetStlmntListIn object= (TxQrySvcGetStlmntListIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrReal> getListArrBasedOnStsHistory(String deptId, ArrDeptRelEnum arrDeptRel, ArrStsEnum curArrSts, ArrStsEnum arrSts, String inqryStartDt, String inqryEndDt, int pgNbr, int pgCnt) throws BizApplicationException { return _getArrDeptRelImpl().getArrListBasedOnArrStatusHistory(deptId, null, null, null, null, arrDeptRel, curArrSts, arrSts, null, inqryStartDt, inqryEndDt, pgNbr, pgCnt, false); }
TGT:
Inquire specific customer own (as main contractor) arrangements of specific product hierarchy whose status changed into specific status within inquiry period and currently in another specific status.
PRED:
Inquire specific department own (as accounting department) arrangements of specific product hierarchy whose status changed into specific status within inquiry period and currently in another specific status. (Paging) Inquire modification arrangement of inquired arrangement if hasVrtnArr is true.
test 샘플별 bleu-4:  55.56
========================================================================================================================
SRC:
public ToDoMgmtSvcGetToDoMgmtListTreeListNonActivitiOut clone(){ ToDoMgmtSvcGetToDoMgmtListTreeListNonActivitiOut object= (ToDoMgmtSvcGetToDoMgmtListTreeListNonActivitiOut)super.clone(); if ( this.children== null ) object.children = null; else{ java.util.List<bankware.corebanking.configurationadmin.todo.service.dto.ToDoMgmtSvcGetToDoMgmtListAprvlDtlTmpltNonActivitiOut> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.todo.service.dto.ToDoMgmtSvcGetToDoMgmtListAprvlDtlTmpltNonActivitiOut>(children.size()); for( bankware.corebanking.configurationadmin.todo.service.dto.ToDoMgmtSvcGetToDoMgmtListAprvlDtlTmpltNonActivitiOut item : children ){ clonedList.add( (bankware.corebanking.configurationadmin.todo.service.dto.ToDoMgmtSvcGetToDoMgmtListAprvlDtlTmpltNonActivitiOut)item.clone()); } object.children = clonedList; } return object; }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value){ for (PsbkMsgIdEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value){ for (MostUsedAcctTpEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public static boolean isValid(String value) throws BizApplicationException { if(!StringCoreUtils.isEmpty( value)) { for (AprslRelStsCoreEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } throw new BizApplicationException("AAPATE0028", new Object[] {value, "@aprslRelStsCd"});//({0}) is invalid {1}. } return true; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public DeptClsgPrsntStsinqrySvcListOut clone(){ try{ DeptClsgPrsntStsinqrySvcListOut object= (DeptClsgPrsntStsinqrySvcListOut)super.clone(); if ( this.tblNm== null ) object.tblNm = null; else{ java.util.List<bankware.corebanking.accounting.cashaccounting.service.dto.DeptClsgPrsntStsinqrySvcOut> clonedList = new java.util.ArrayList<bankware.corebanking.accounting.cashaccounting.service.dto.DeptClsgPrsntStsinqrySvcOut>(tblNm.size()); for( bankware.corebanking.accounting.cashaccounting.service.dto.DeptClsgPrsntStsinqrySvcOut item : tblNm ){ clonedList.add( (bankware.corebanking.accounting.cashaccounting.service.dto.DeptClsgPrsntStsinqrySvcOut)item.clone()); } object.tblNm = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrRealCore> getChildren(ArrRealCoreImpl arrReal,String bizDscd, String pdTpCd,String pdTmpltCd,String pdCd,List<String> curArrStsList) throws BizApplicationException { ArArrMSelectChildByPdInfoAndStatusIO arArrMSelectChildByPdInfoAndStatusIO = new ArArrMSelectChildByPdInfoAndStatusIO(); arArrMSelectChildByPdInfoAndStatusIO.setInstCd(arrReal.getInstCd()); arArrMSelectChildByPdInfoAndStatusIO.setMthrArrId(arrReal.getArrId()); arArrMSelectChildByPdInfoAndStatusIO.setCurArrStsList(curArrStsList); arArrMSelectChildByPdInfoAndStatusIO.setBizDscd(bizDscd); arArrMSelectChildByPdInfoAndStatusIO.setPdTpCd(pdTpCd); arArrMSelectChildByPdInfoAndStatusIO.setPdTmpltCd(pdTmpltCd); arArrMSelectChildByPdInfoAndStatusIO.setPdCd(pdCd); List<ArrRealCore> arrList = new ArrayList<ArrRealCore>(); List<ArArrMIO> arArrMList = _getArArrMDso().selectChildrenByPdInfoAndStatus(arArrMSelectChildByPdInfoAndStatusIO); if(arArrMList == null || arArrMList.isEmpty()){ return arrList; } for (ArArrMIO arArrM : arArrMList) { ArrRealCore arrRealLocal = _getArrMngrAgent().getArrRealCore(arArrM); arrList.add(arrRealLocal); } return arrList; }
TGT:
Inquire a list of child arrangement.
PRED:
Inquire children arrangement structure including mandatory and optional.
test 샘플별 bleu-4:  16.04
========================================================================================================================
SRC:
public FrgnCrncyChkPrchsSvcOut clone(){ try{ FrgnCrncyChkPrchsSvcOut object= (FrgnCrncyChkPrchsSvcOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<StaffRoleInqryOut> getListStaffRoleInfo(String instCd, String deptId, String staffId) throws BizApplicationException { //check required inputs if (StringCoreUtils.isEmpty(instCd)) { throw new BizApplicationException("AAPCME0006", new String[] {"@instCd"}); }else if (StringCoreUtils.isEmpty(deptId)) { throw new BizApplicationException("AAPCME0006", new String[] {"@deptId"}); } return this.getListStaffRoleInfo(instCd, deptId, staffId, CCM01.NO); }
TGT:
It inquires the staff's name, department, role and supervisor information that matches the input institution, department identification, staff identification. It can inquire including retired staff.
PRED:
It inquires the staff's name, department, role and supervisor information that matches the input institution, department identification, staff identification. It inquires except retired staff.
test 샘플별 bleu-4:  82.38
========================================================================================================================
SRC:
public void saveSubInfo(AtCustRprsnSIO subInfoIO, CustRprsnImpl custRprsnImpl) throws BizApplicationException { // 1. 보조명세 캐시 조회결과에 따라 insert/update 판단 AtCustRprsnSIO oldSubInfoIO = getSubInfoCache(custRprsnImpl); if (oldSubInfoIO == null) { // PK setting subInfoIO.setCustRprsnId(custRprsnImpl.getCustRprsnId()); // insert _getAtCustRprsnSDso().insert(subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(subInfoIO, oldSubInfoIO)) { return; } // 변경전 이력 저장 _saveSubInfoHst(custRprsnImpl, oldSubInfoIO); // PK setting subInfoIO.setCustRprsnId(custRprsnImpl.getCustRprsnId()); // update _getAtCustRprsnSDso().update(oldSubInfoIO); } // 2. 캐시 저장 custRprsnImpl.setSubInfoCache(oldSubInfoIO); }
TGT:
Save an appraisal thing subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public AssetInsrncMgmtSvcInqryIn clone(){ try{ AssetInsrncMgmtSvcInqryIn object= (AssetInsrncMgmtSvcInqryIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public DummyIO deleteTableExtendAttribute(CaTblMgmtSvcTblXtnAtrbtListIn in) throws BizApplicationException { for (CaTblMgmtSvcSaveTblXtnAtrbtIn caTblMgmtSvcSaveTblXtnAtrbtIn : in.getTblNm()) { CaTblXtnAtrbtIO inBo = new CaTblXtnAtrbtIO(); inBo.setInstCd(caTblMgmtSvcSaveTblXtnAtrbtIn.getInstCd()); inBo.setTblNm(caTblMgmtSvcSaveTblXtnAtrbtIn.getTblNm()); inBo.setXtnAtrbtNm(caTblMgmtSvcSaveTblXtnAtrbtIn.getXtnAtrbtNm()); _getTblXtnAtrbt().deleteTableExtendAttribute(inBo); } return new DummyIO(); }
TGT:
Delete table extend attribute
PRED:
Delete table extend attribute
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaDocRgstSvcRgstClIn clone(){ try{ CaDocRgstSvcRgstClIn object= (CaDocRgstSvcRgstClIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaScrnIO getScreen (String scrnId) throws BizApplicationException { if (StringUtils.isEmpty(scrnId)) { throw new BizApplicationException("AAPCME0006", new Object[]{"@srvcCd"}); } CaScrnIO scrn = _getScreen(scrnId); return scrn; }
TGT:
Receives scrnId and returns Scrn object.
PRED:
Get screen list by screen id.
test 샘플별 bleu-4:  18.58
========================================================================================================================
SRC:
public List<BfPdRelOut> getRelBtwnBfAndPd(BfPdRelIn in) { List<BfPdRelOut> outList = new ArrayList<>(); BfPdRelationListIn apiIn = new BfPdRelationListIn(); apiIn.setInstitutionId(bf.getInstCd()); apiIn.setBfCd(bf.getPdCd()); apiIn.setBaseDate(PdUtil.parseYyyyMMddHHmmssToDate(in.getAplyDt(), in.getAplyTm())); apiIn.setPdBetweenRelationCd(in.getPdBtwnRelCd()); apiIn.setRelationPdInfoDscd(in.getRelPdInfoDscd()); List<BfPdRelationOut> relations = _bfApi().getListBfPdRelation(apiIn); for (BfPdRelationOut relation : relations) { BfPdRelOut out = new BfPdRelOut(); out.setIndsDscd(relation.getIndustryDscd()); out.setBizDscd(relation.getBizDscd()); out.setPdTpCd(relation.getPdTypeCd()); out.setPdInfoDscd(relation.getPdInfoDscd()); out.setPdTmpltCd(relation.getPdTemplateCd()); out.setPdCd(relation.getPdCd()); out.setPdNm(relation.getPdName()); out.setPdBtwnRelCd(relation.getPdBetweenRelationCd()); out.setAplyStartDt(PdUtil.parseDateToHHMMSS(relation.getApplyStartDate())); out.setAplyStartTm(PdUtil.parseDateToYYYYMMDD(relation.getApplyStartDate())); out.setAplyEndDt(PdUtil.parseDateToHHMMSS(relation.getApplyEndDate())); out.setAplyEndTm(PdUtil.parseDateToYYYYMMDD(relation.getApplyEndDate())); outList.add(out); } return outList; }
TGT:
This Method inquire all products related to benefit. if there is no product between relation code, all products inquire if there is no relation product information distinction code, all products inquire
PRED:
This Method inquire of products of related to benefit by product relatipn type distinction code. if there is no product relatipn type distinction code, all products inquire
test 샘플별 bleu-4:  31.4
========================================================================================================================
SRC:
public static boolean isValid(String value){ for (ArrExtrnlIdNbrTpEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CustCustRelSvcGetOut clone(){ try{ CustCustRelSvcGetOut object= (CustCustRelSvcGetOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void validate(String arrSrvcCd,ArrRealCore arrReal, CustCore cust, Map<String, Object> vldtnRequiredValMap) throws BizApplicationException { if (_getCmnContext().isSelfChannel() && !cust.getCustId().equals(_getCmnContext().getCustId())){ //Customer to be accessed is not same with self-service channel's user. This service ({0}) could not performs properly //접근대상 고객정보의 고객과 본 셀프서비스 채널의 사용자가 동일하지 않습니다. 본서비스({0}) 실행이 불가 합니다 throw new BizApplicationException("AAPARE0336", new Object[]{_getCd().getCode(ArrSrvcEnum.cdNbr,arrSrvcCd)}); } }
TGT:
Processing rules should be commonly performed according to the rules defined in the service processing rule, based on the service type input.
PRED:
It performs common service processing rules defined in the service processing rules and whether the contract-based service is available, based on the representative service type registered to the specific service. Whether contract services are available verifies: 1) Verification of service restriction based on product information of contract. 2) Verification of restriction related to the service set in the contract such as pledge setting. 3) Perform verification rules that should be performed in common as the requirement that dead customers should not become financial transactions.
test 샘플별 bleu-4:  10.16
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(DeptImpl dept){ Map<String, String> subInfoMap = new HashMap<String, String>(); // 1. 보조명세 캐시 조회 AtDeptSIO subInfo = getSubInfoCache(dept); // 2. 보조명세 캐시가 null인 경우, 빈 Map 리턴 if (subInfo == null) { return subInfoMap; } // 3. 보조명세 캐시를 Map으로 convert for (Entry<String, Object> entry : subInfo.getFieldValues().entrySet()) { // Casting 시 Null 방지 if (entry.getValue() != null) { subInfoMap.put(entry.getKey(), String.valueOf(entry.getValue())); } } return subInfoMap; }
TGT:
Inquire all subsidiary information of the appraisal request as a map.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  17.06
========================================================================================================================
SRC:
static boolean isValid(String value) throws BizApplicationException { if(!StringCoreUtils.isEmpty( value)) { for (ScrtyIntMAtrbtCoreEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } throw new BizApplicationException("AAPATE0028", new Object[] {value, "@ScrtyIntMAtrbt"});//({0}) is invalid {1}. } return true; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<XtnCdIO> getListCode(String cdNbr, Map<String, Object> supplInfoVal) throws BizApplicationException { List<XtnCdIO> xtnCdList = new ArrayList<XtnCdIO>(); // query data DcDocMIO dcDocMIO = new DcDocMIO(); _getCmnContext().setHeaderColumn(dcDocMIO); List<DcDocMIO> dcDocIdList = _getDcDocMDso().selectIdList(null, null, null); if(dcDocIdList != null && !dcDocIdList.isEmpty()) { String lngCd = null; if(supplInfoVal.containsKey(InstParamEnum.LANGUAGE_CODE.getValue())) { lngCd = (String) supplInfoVal.get(InstParamEnum.LANGUAGE_CODE.getValue()); } else { lngCd = _getCmnContext().getLanguageCode(); } for(DcDocMIO dcDocMIOItem : dcDocIdList) { XtnCdIO xtnCdIO = new XtnCdIO(); xtnCdIO.setCd(dcDocMIOItem.getDocId()); xtnCdIO.setCdNm(_getTrnsfrLng().getTransferLanguage(CCM01.TRANS_DOC, dcDocMIOItem.getDocId(), lngCd)); xtnCdIO.setLngCd(lngCd); xtnCdList.add(xtnCdIO); } } return xtnCdList; }
TGT:
It make the combo-box of Code that meet the search condition. Combo-box is consisted of CmnCdCheckOut. (cdNbr, cd, cdNm, delYn, cdAbrvtnNm)
PRED:
It make the combo-box of Code that meet the search condition. Combo-box is consisted of CaCmnCdCheckOut. (cdNbr, cd, cdNm, delYn, cdAbrvtnNm)
test 샘플별 bleu-4:  87.25
========================================================================================================================
SRC:
public List<ArrReal> getListArrBasedOnStsHistory(String deptId, ArrDeptRelEnum arrDeptRel, String bizDscd, String pdTpCd, String pdTmpltCd, ArrStsEnum curArrSts, ArrStsEnum arrSts, String inqryStartDt, String inqryEndDt, int pgNbr, int pgCnt) throws BizApplicationException { return _getArrDeptRelImpl().getArrListBasedOnArrStatusHistory(deptId, bizDscd, pdTpCd, pdTmpltCd, null, arrDeptRel, curArrSts, arrSts, null, inqryStartDt, inqryEndDt, pgNbr, pgCnt, false); }
TGT:
Inquire specific department own (as accounting department) arrangements of specific product hierarchy whose status changed into specific status within inquiry period and currently in another specific status. (Paging) Inquire modification arrangement of inquired arrangement if hasVrtnArr is true.
PRED:
Inquire specific customer own (as main contractor) arrangements of specific product hierarchy whose status changed into specific status within inquiry period and currently in another specific status. Current Status / Base Status / Inquiry Period(Start Date / End Date) Approved / Applied / 1/1 ~ 3/1 : Get arrangement applied within 1/1 ~ 3/1 and approved currently. Arrangement whose status was changed into other status on 1/1 is not inquired. Active / Applied / 1/1 ~ 3/1 : Get arrangement applied within 1/1
test 샘플별 bleu-4:  25.97
========================================================================================================================
SRC:
public CustSrchSvcGetCustListIn clone(){ try{ CustSrchSvcGetCustListIn object= (CustSrchSvcGetCustListIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value) { for (FeeTypeDscdCoreEnum enumObject : values()) { if (enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value) { for (InterestOverdueDscdEnum enumObject : values()) { if (enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CashTransitSvcIn clone(){ try{ CashTransitSvcIn object= (CashTransitSvcIn)super.clone(); if ( this.tblNm== null ) object.tblNm = null; else{ java.util.List<bankware.corebanking.accounting.cashaccounting.service.dto.CashTransitSvcDtlIn> clonedList = new java.util.ArrayList<bankware.corebanking.accounting.cashaccounting.service.dto.CashTransitSvcDtlIn>(tblNm.size()); for( bankware.corebanking.accounting.cashaccounting.service.dto.CashTransitSvcDtlIn item : tblNm ){ clonedList.add( (bankware.corebanking.accounting.cashaccounting.service.dto.CashTransitSvcDtlIn)item.clone()); } object.tblNm = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveMapSubInfo(ActorCore actorCore, String dueDlgncDscd, int dueDlgncSeqNbr, Map<String, String> xtnInfoMap) throws BizApplicationException { _getActorDueDlgncSubInfoBiz().saveMapSubInfo((ActorImpl) actorCore, dueDlgncDscd, dueDlgncSeqNbr, xtnInfoMap); }
TGT:
This method save settlement subsidiary detail information using subInfoMap.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public void modifyStatus(DocBsicIO docBsicIO) throws BizApplicationException { // Get document by same document id DcDocMIO rgstrnDcDocMIO = _getDcDocMDso().select(null, docBsicIO.getDocId(), null); if(rgstrnDcDocMIO == null) { throw new BizApplicationException("AAPATE0016", new String[] {"@doc", "@docId", docBsicIO.getDocId()}); } else { _getCmnContext().setHeaderColumn(rgstrnDcDocMIO); rgstrnDcDocMIO.setDocStsCd(docBsicIO.getDocStsCd()); _getDcDocMDso().update(rgstrnDcDocMIO); _getDcDataCacheManager().clearInstanceCache(DataCacheCoreConfig.DOC_BSIC_CACHE, docBsicIO.getDocId()); } }
TGT:
It updates notice message code status information. If delYn = 'Y' then deleted data can not be recovered.
PRED:
It updates notice message code status information. If delYn = 'Y' then deleted data can not be recovered.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<CaKrRoadAddrOut> getAddrByBuildingName(String cityPrvncAddr,String cityGunGuAddr, String bldgNm) throws BizApplicationException { List<CaCmKrRoadAddrMIO> cmKrRoadAddrMList = _getCaCmKrRoadAddrMDso().selectByBuildingName(CaAddrHrarcyEnum.KOREA_ROAD_NAME_ADDRESS_CODE.getValue(), cityPrvncAddr, cityGunGuAddr, bldgNm); List<CaKrRoadAddrOut> out = new ArrayList<CaKrRoadAddrOut>(); if(cmKrRoadAddrMList.isEmpty()) { return out; } for(CaCmKrRoadAddrMIO cmKrRoadAddrMIO : cmKrRoadAddrMList) { CaKrRoadAddrOut krRoadAddrOut = new CaKrRoadAddrOut(); krRoadAddrOut = _getKrRoadAddrOut(cmKrRoadAddrMIO); if(krRoadAddrOut != null) { out.add(krRoadAddrOut); } } return out; }
TGT:
It inquiries the Korea road address with building name list.
PRED:
It inquiries the Korea road address with building name list.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public static boolean isValid(String value){ for (IntCalcXtnInfoCoreEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getSubInfo(String xtnAtrbtNm, DeptCore deptCore) throws BizApplicationException { return _getDeptSubInfoBiz().getSubInfo(xtnAtrbtNm, (DeptImpl)deptCore); }
TGT:
This method provide settlement subsidiary detail information.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  12.61
========================================================================================================================
SRC:
public void doServiceAction(String arrSrvcTpCd,ArrCndActionRequiredValue arrCndActionRequiredValue) throws BizApplicationException { switch (arrSrvcTpCd) { case "AcquireCltrl": _doServiceAction(arrSrvcTpCd,arrCndActionRequiredValue); return; default: // there are no condition action for this condition ({0},{1}) on arrangement service ({2}) // 계약서비스 ({2})를 위한 조건 ({0},{1})의 행동은 유효하지 않습니다 throw new BizApplicationException("AAPARE0288" , new Object[]{this.getCndCd(),this.getCndCdNm(),arrSrvcTpCd}); } }
TGT:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
PRED:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveControlCenterService(String instCd, String cntrlCntrId, List<CaCntrlCntrMngrSvcGetSvcIO> inList) throws BizApplicationException { StringUtils.checkStringParm(instCd, CCM03.INST_CD); StringUtils.checkStringParm(cntrlCntrId, CCM03.CNTRL_CNTR_ID); // 제어센터유형 조회 _checkControlCenterBasic(instCd, cntrlCntrId); CaSvCntrlCntrSrvcDIO param = new CaSvCntrlCntrSrvcDIO(); param.setInstCd(instCd); param.setCntrlCntrId(cntrlCntrId); List<CaSvCntrlCntrSrvcDIO> rtnList = _getSvCntrlCntrSrvcDDso().selectList(param); // 현재 테이블 조회 결과로 입력된 리스트를 처리함 for(CaSvCntrlCntrSrvcDIO item : rtnList) { CaCntrlCntrMngrSvcGetSvcIO extData = null; for(CaCntrlCntrMngrSvcGetSvcIO in : inList) { if(item.getInstCd().equals(in.getInstCd()) && item.getCntrlCntrId().equals(in.getCntrlCntrId()) && item.getSrvcCd().equals(in.getSrvcCd()) && item.getAplyStartDt().equals(in.getAplyStartDt()) ){ extData = in; break; } } if(extData == null){ _getSvCntrlCntrSrvcDDso().delete(item); } else { CaSvCntrlCntrSrvcDIO svCntrlCntrSrvcDIO = _setControlCenterServiceDto(extData); _getSvCntrlCntrSrvcDDso().update(svCntrlCntrSrvcDIO
TGT:
Save a control center service information.
PRED:
Save a control center service information.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getSubInfo(CustTxImpl custTxImpl, String txDt, Integer txSeqNbr, String atrbtNm) throws BizApplicationException { // 1. 보조명세 캐시 조회 AtCustTxSIO subInfo = getSubInfoCache(custTxImpl); // 2. 보조명세 캐시가 null인 경우, null 리턴 if (subInfo == null) { return null; } // 3. 보조명세 캐시에서 속성명 기준으로 속성값 조회 Object atrbtVal = subInfo.get(atrbtNm); // Casting 시 Null 방지 if (atrbtVal == null) { return null; } return String.valueOf(atrbtVal); }
TGT:
Inquire a specific subsidiary information of the appraisal thing.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  78.61
========================================================================================================================
SRC:
public int delete(CaCmClassMIO cmClassMIO) { super.clearCache(DataCacheCoreConfig.CLASS_MASTER_CACHE); super.clearCache(DataCacheCoreConfig.CLASS_TYPE_CACHE); super.clearCache(DataCacheCoreConfig.COMMON_CLASS_SELECT_CACHE); return _getCmClassM().delete(cmClassMIO); }
TGT:
Delete the security interest.
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  20.56
========================================================================================================================
SRC:
public List<ArArrArrRXtnInfoDIO> selectListArrArrRXtnInfo(ArArrArrRXtnInfoDIO arArrArrRXtnInfoDIO) throws BizApplicationException { return super.selectListArrArrRXtnInfo(arArrArrRXtnInfoDIO); }
TGT:
Inquire all of active arrangement/arrangement relation extended attribute of subsidiary information(CTI)
PRED:
Inquire all of active arrangement/arrangement relation extended attribute of subsidiary information(CTI)
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CustRgstSvcCorpOut clone(){ try{ CustRgstSvcCorpOut object= (CustRgstSvcCorpOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value) throws BizApplicationException { if(!StringCoreUtils.isEmpty( value)) { for (ThingKndCoreEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } throw new BizApplicationException("AAPATE0028", new Object[] {value, "@assetStsCd"});//({0}) is invalid {1}. } return true; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getAprvlNbr() throws BizApplicationException { return _getArrRealCoreFundamentalAgent().getAprvlNbr(this); }
TGT:
Inquire approval number registered to arrangement as external id number.
PRED:
Inquire approval number registered to arrangement as external id number.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> subInfoMap, AprslImpl aprslImpl, Integer prfClaimSeqNbr) throws BizApplicationException { // 0. 저장할 정보가 입력되지 않으면 return if(subInfoMap==null || subInfoMap.isEmpty()) { return; } // 1. 표준속성에 등록된 검증규칙을 통해 입력받은 확장속성내용 검증 _getAtrbtChk().checkStandardAttributeMap(subInfoMap); // 2. 보조원장 캐시 조회결과에 따라 insert/update 판단 AsAprslPrfClaimSIO subInfoCache = getSubInfoCache(aprslImpl, prfClaimSeqNbr); if(subInfoCache == null){ // DBIO VO new instance subInfoCache = new AsAprslPrfClaimSIO(); subInfoCache.setAprslId(aprslImpl.getAprslBasicCache().getAprslId()); // PK setting subInfoCache.setPrfClaimSeqNbr(prfClaimSeqNbr); // PK setting // 입력된 확장정보를 DBIO VO에 setting DtoUtils.setSubInfoIO(subInfoMap, subInfoCache); // 2-1. insert _getAsAprslPrfClaimSDso().insert(subInfoCache); // 3. 캐시 저장 _saveSubInfoCache(subInfoCache, aprslImpl, prfClaimSeqNbr); } else { // 속성�
TGT:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isValid(String type) { return ( "D".equalsIgnoreCase(type) || "M".equalsIgnoreCase(type) || "T".equalsIgnoreCase(type) ) ; //added by Roh(change to simplify) }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  16.68
========================================================================================================================
SRC:
public int delete(String clHrarcyId) { return _getCmClHrarcyM().delete(clHrarcyId); }
TGT:
Delete all occurrences of the given substring.
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean checkCode(String cdNbr, Map<String, Object> supplInfoVal) throws BizApplicationException { String cd = ""; if(supplInfoVal.get(CCM03.CD) != null) { cd = supplInfoVal.get(CCM03.CD).toString(); } CmKrStutDongCdMIO cmKrStutDongCdMIO = _getCmKrStutDongCdMDso().selectCheckCode(AddrHrarcyEnum.KOREA_STATUTORY_DONG_CODE.getValue(), cd); if(cmKrStutDongCdMIO == null) { return false; } return true; }
TGT:
It check code number & code value. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter
PRED:
It check code number & code value by cdDtlIO DTO. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter.
test 샘플별 bleu-4:  79.75
========================================================================================================================
SRC:
public void saveAssetCustRelXtnInfo(AssetCustRelXtnInfoSaveIn xtnInfoSaveIn) throws BizApplicationException{ _getAssetCustRelBiz().saveRelXtnInfo(this, xtnInfoSaveIn); }
TGT:
Save the extended information for relation between asset and customer.
PRED:
Save the extended information for relation between asset and customer.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void terminateArrRprsnRelation(ArrRprsnRelTrmntnIn in, ArrRealCoreImpl arrReal) throws BizApplicationException { // 계약 관계 주제영역 미사용 시 skip if (!_getArrCustom().isSubDmnUsed(ArrSubDmnEnum.RELATED_PERSON_RELATION) || ArrKndCoreEnum.TEMPORARY.getValue().equals(arrReal.getArrKindCd()) ) { return; } // 입력검증 _checkInput(in,arrReal); // 거래생성여부 검증 _getArrCmnUtil().validateArrTxExist(arrReal, in.getTxDt(), in.getTxSeqNbr()); // 활동중인 계약관련인관계 조회 // 종료할 계약관련인관계가 없는 경우 에러처리 ArArrRprsnRIO arArrRprsnRIO = _getArArrRprsnRDso().selectEffective(arrReal.getInstCd(), arrReal.getArrId(), in.getRprsnId(), in.getArrRprsnRelCd(), _getInqBaseDt(null)); if (arArrRprsnRIO == null) { throw new BizApplicationException("AAPARE0056", null); } // 계약관련인관계 상태 갱신 // 1) '관계시작일 < 관계종료일'인 경우, '해지' �
TGT:
Terminate arrangement customer related person relationship.
PRED:
Terminate arrangement customer related person relationship.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaSysIntrfcInfoInsertResultOut clone(){ try{ CaSysIntrfcInfoInsertResultOut object= (CaSysIntrfcInfoInsertResultOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public LnRpymntSvcRpymntInfoIn clone(){ try{ LnRpymntSvcRpymntInfoIn object= (LnRpymntSvcRpymntInfoIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Staff getStaffMngrInfo() throws BizApplicationException { Staff tempStaff = _getStaffMngr().getStaff(_getCmnContext().getStaffId()); return tempStaff; }
TGT:
Methods to query Staff Manager Information
PRED:
Inquire staff information by staff identification from this institution.
test 샘플별 bleu-4:  11.87
========================================================================================================================
SRC:
public AssetBsicInfoIO getBasicInfo() throws BizApplicationException { if(assetBasicCache == null) { return null; } AssetBsicInfoIO assetBsicInfoIO = new AssetBsicInfoIO(); DtoCoreUtils.setSubInfoIO(assetBasicCache, assetBsicInfoIO); return assetBsicInfoIO; }
TGT:
It inquires basic information of security interest.
PRED:
It inquires basic information of security interest.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaDataVldtnMgmtSvcGetDataVldtnInfoOut clone(){ try{ CaDataVldtnMgmtSvcGetDataVldtnInfoOut object= (CaDataVldtnMgmtSvcGetDataVldtnInfoOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CustRprsnInqrySvcCtcptXtnOut clone(){ try{ CustRprsnInqrySvcCtcptXtnOut object= (CustRprsnInqrySvcCtcptXtnOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaRoleStaffOut clone(){ try{ CaRoleStaffOut object= (CaRoleStaffOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public int saveExtendsAttribute(CaTblExtendAtrbtIO in) throws BizApplicationException { // 기관코드, 테이블명, 속성명은 필수로 입력 받아야 한다. _checkInputValue(in.getInstCd(), CCM03.INST_CD); _checkInputValue(in.getTblNm(), CCM03.TBL_NM); _checkInputValue(in.getAtrbtNm(), CCM03.ATRBT_NM); _checkInputValue(in.getXtnAtrbtVrtnCmpsCd(), CCM03.XTN_ATRBT_VRTN_CMPS_CD); _checkInputValue(in.getRmkCntnt(), CCM03.RMK_CNTNT); if(!StringUtils.isEmpty(in.getAtrbtVldtnXtnRuleCntnt())) { _checkSimpleExtendValidationRule(in.getAtrbtVldtnXtnRuleCntnt()); } // 검증방법코드와 규칙 검증 _getAtrbtChk().isValidByValidationWayCodeAndRule(in.getAtrbtVldtnWayCd(), in.getAtrbtVldtnRuleCntnt()); // 확장규칙 검증 _getAtrbtChk().isValidValidationExtendRule(in.getAtrbtVldtnXtnRuleCntnt()); // 기존 테이블확장속성명세 조회 CaCmTblXtnAtrDIO inquiryResult = _getCmTblXtnAtrDDso().select(in.getInstCd(), in.getTblNm(), in.getAtrbtNm()); if(inquiryResult == null){ // 없
TGT:
Save table extend attribute validation Target table : CM_TBL_XTN_ATR_D
PRED:
Save extend attribute.
test 샘플별 bleu-4:  8.05
========================================================================================================================
SRC:
public void saveSubInfo(ActorImpl actorImpl, String ctcptId, Integer ctcptChngSeqNbr, AtActorCtcptSIO subInfoIO) throws BizApplicationException { // 1. 보조명세 캐시 조회결과에 따라 insert/update 판단 // ** 연락처 보조명세는 변경이력을 관리하지 않는다. AtActorCtcptSIO oldSubInfoIO = getSubInfoCache(actorImpl, ctcptId, ctcptChngSeqNbr); if (oldSubInfoIO == null) { // PK setting subInfoIO.setActorId(actorImpl.getActorId()); subInfoIO.setActorCtcptId(ctcptId); subInfoIO.setActorCtcptChngSeqNbr(ctcptChngSeqNbr); // insert _getAtActorCtcptSDso().insert(subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(subInfoIO, oldSubInfoIO)) { return; } // PK setting subInfoIO.setActorId(actorImpl.getActorId()); subInfoIO.setActorCtcptId(ctcptId); subInfoIO.setActorCtcptChngSeqNbr(ctcptChngSeqNbr); // update _getAtActorCtcptSDso().update(subInfoIO); } // 2. 캐시 저장 _saveSubInfoCache(subInfoIO, actorImpl, ctcptId, ctcptChngSeqNbr); }
TGT:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(StStlmntCalcnSIO stStlmntCalcnSIOIn){ logger.debug("##<ST-StlmntCalcnSubInfoBiz> getMapSubInfo"); Map<String, String> subInfoMap = new HashMap<String, String>(); // 1.I/F VO 생성 StlmntCalcnSubInfo subInfoIntrfcIO = new StlmntCalcnSubInfo (); // 2.DBIO VO 신규 StStlmntCalcnSIO stlmntCalcnSIO = new StStlmntCalcnSIO(); // 3.DB 조회 //selectList DSO의 Key: 계산근기의 상세일련번호까지의 키값을 이용하여 계산근기 보조명세를 검색시 사용 StStlmntCalcnSIO stStlmntCalcnS = _getStlmntCalcnSDso().select(stStlmntCalcnSIOIn); if(stStlmntCalcnS == null) { return null; } // 4.DBIO VO 를 I/F VO로 변환 DtoUtils.setSubInfoIO(stStlmntCalcnS, subInfoIntrfcIO); // 5.I/F VO를 MAP으로 변환 for(Entry<String,Object> entry : subInfoIntrfcIO.getFieldValues().entrySet()) { if(entry.getValue()!=null) { subInfoMap.put(entry.getKey(), String.valueOf(entry.getValue())); } } return subInfoMap; }
TGT:
Inquire all subsidiary information of the appraisal request as a map.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  17.06
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, AprslImpl aprslImpl, Integer prfClaimSeqNbr) { // 0. null check if (StringUtils.isEmpty(xtnAtrbtNm)){ return; } // 1. 표준속성에 등록된 검증규칙을 통해 입력받은 확장속성내용 검증 _getAtrbtChk().checkStandardAttribute(xtnAtrbtNm, xtnAtrbtCntnt); // 2. 보조원장 캐시 조회결과에 따라 insert/update 판단 AsAprslPrfClaimSIO subInfoCache = getSubInfoCache(aprslImpl, prfClaimSeqNbr); if(subInfoCache == null){ // DBIO VO new instance subInfoCache = new AsAprslPrfClaimSIO(); subInfoCache.setAprslId(aprslImpl.getAprslBasicCache().getAprslId()); // PK setting subInfoCache.setPrfClaimSeqNbr(prfClaimSeqNbr); // PK setting // 입력된 확장정보를 DBIO VO에 setting DtoUtils.setSubInfoIO(xtnAtrbtNm, xtnAtrbtCntnt, subInfoCache); // 2-1. insert _getAsAprslPrfClaimSDso().insert(subInfoCache); // 3. 캐시 저장 _saveSubInfoCache(subInfoCache, aprslImpl, prfClaimSeqNbr); } else { // 속성값 변경여부 확�
TGT:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<? extends IOmmObject> getListDataForConsistency(Integer pgNbr, Integer pgCnt) throws BizApplicationException { int pageOffSet = PaginationCoreUtils.getPgOffset(pgNbr, pgCnt); return _getDstbCnstncySvCntrlCntrTrmnlDDso().selectListForConsistency(pageOffSet, pgCnt); }
TGT:
Validate Query for Distribution Validation
PRED:
Validate Query for Distribution Validation
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArrRealCoreImpl getArrRealCore(ArrRealGetIn arrRealGetIn) throws BizApplicationException { return _getArrRealCore(arrRealGetIn, null); }
TGT:
Inquire real arrangement using arrangement id (internal use) or business key like account number, application number , mobile number and so on. If 'arrExtrnlIdNbrTp'(arrangement external identification number type) is null, then arrIdNbr is arrangement identification. If you want to get the child arrangements directly, passes account number and the nthNbr for child sequence number.
PRED:
Contract inquiry Returns all types of contracts as a top-level contract.
test 샘플별 bleu-4:  0.19
========================================================================================================================
SRC:
public boolean checkCode(CaCdNbrInfoIO in, String cd) throws BizApplicationException { String instCd = in.getInstCd(); if(StringUtils.isEmpty(instCd)) { instCd = _getCaCmnContext().getInstCode(); } CaCmInstSbstCdDIO daoIn = new CaCmInstSbstCdDIO(); daoIn.setInstCd(instCd); daoIn.setCdNbr(in.getCdNbr()); daoIn.setCd(cd); daoIn.setActvStsCd(CaActiveStatusEnum.ACTIVE.getValue()); List<CaCmInstSbstCdDIO> daoOutList = _getCmInstSbstCdDDso().selectListByCondition(daoIn); if(daoOutList == null || daoOutList.isEmpty()) { return false; } return true; }
TGT:
It check code number & code value by cdDtlIO DTO. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter.
PRED:
It check code number & code value by cdDtlIO DTO. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value){ for (PdIntRtStrctrClCoreEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getDeptId() throws BizApplicationException { String deptId = (String)CbbApplicationContext.getCbbDataContainerItem(CbbDataContainerType.APP_CM, CmDataContainerDefinition.CM_DETP_ID); if(StringCoreUtils.isEmpty(deptId)) { deptId = _getContextHeader().getDeptId(); //2018.04.30 부서ID를 Application Container에 담아 둔다. CbbApplicationContext.setCbbDataContainerItem(CbbDataContainerType.APP_CM, CmDataContainerDefinition.CM_DETP_ID, deptId); } return deptId; }
TGT:
Inquire department identification from basic information.
PRED:
Department number inquiry from standard message
test 샘플별 bleu-4:  22.09
========================================================================================================================
SRC:
public PreScrningInsrncSts clone(){ try{ PreScrningInsrncSts object= (PreScrningInsrncSts)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<XtnCdIO> getListCode(String cdNbr, Map<String, Object> supplInfoVal) throws BizApplicationException { List<XtnCdIO> xtnCdIOs = new ArrayList<XtnCdIO>(); StBalTpMIO stBalTpMIO = new StBalTpMIO(); String lngCd = supplInfoVal == null ? null : String.valueOf(supplInfoVal.get(InstParamEnum.LANGUAGE_CODE.getValue())); List<StBalTpMIO> balTpList = _getStBalTpCdDso().selectListStBalTpCd(stBalTpMIO); if(balTpList == null || balTpList.isEmpty()) { return xtnCdIOs; } for(StBalTpMIO out : balTpList) { XtnCdIO xtnCdIO = new XtnCdIO(); xtnCdIO.setCd(out.getBalTpCd()); if(StringUtils.isEmpty(lngCd)) { xtnCdIO.setCdNm(_getTrnsfrLng().getTransferLanguage(CCM01.TRANS_CODE_VAL, CdNbrEnum.BALANCE_TYPE_CD.getValue()+out.getBalTpCd())); } else { xtnCdIO.setCdNm(_getTrnsfrLng().getTransferLanguage(CCM01.TRANS_CODE_VAL, CdNbrEnum.BALANCE_TYPE_CD.getValue()+out.getBalTpCd(), lngCd)); } xtnCdIOs.add(xtnCdIO); } return xtnCdIOs; }
TGT:
Make the combo-box of Code that meet the search condition. Combo-box is consisted of CaCmnCdCheckOut. (cdNbr, cd, cdNm, delYn, cdAbrvtnNm)
PRED:
It make the combo-box of Code that meet the search condition. Combo-box is consisted of CaCmnCdCheckOut. (cdNbr, cd, cdNm, delYn, cdAbrvtnNm)
test 샘플별 bleu-4:  90.21
========================================================================================================================
SRC:
public CaExtrnlIntrfcMsgInfoMgmtListOut getListExtrnlInstMsgMapInfo(String instCd, String extrnlInstCd, String extrnlInstTxDscd, int pgNbr, int pgCnt) { logger.debug(" ============ getListExtrnlInstMsgMapInfo START =============="); CaExtrnlIntrfcMsgInfoMgmtOut extrnlIntrfcMsgInfoMgmtOut = null; List<CaExtrnlIntrfcMsgInfoMgmtOut> extrnlIntrfcMsgInfoOutList = new ArrayList<CaExtrnlIntrfcMsgInfoMgmtOut>(); CaExtrnlIntrfcMsgInfoMgmtListOut out = new CaExtrnlIntrfcMsgInfoMgmtListOut(); /** * pgCnt, pgNbr 처리 */ Integer pageOffset = PaginationUtils.getPgOffset(pgNbr, pgCnt); /** * 전문정보조회 */ List<CaXpExtrnlIntrfcMsgInfoDIO> xpExtrnlIntrfcMsgInfoDIOList = _getXpExtrnlMsgInfoDDso().selectListMsgInfo(instCd, extrnlInstCd, extrnlInstTxDscd, pageOffset, pgCnt); /** * 출력 조립 */ for(CaXpExtrnlIntrfcMsgInfoDIO xpExtrnlIntrfcMsgInfoDIOOut : xpExtrnlIntrfcMsgInfoDIOList) { extrnlIntrfcMsgInfoMgmtOut = new CaExtrnlIntrfcMsgInfoMgmtOut(); // Generated by code generator [[ extrnlIntrfcMsgInfoMgmtOut.setInstCd(xpExtrnlIntrfcMsgInfoDIOOut.getInstCd());// set [기관코드] extrnlIntrfcMsgInfoMgmtOut.setExtrnlInstCd(xpExtrnlIntrfcMsgInfoDIOOut.getExtrnlInstCd());// set [대외기관코드] extrnlIntrfcMsgInfoMgmtOut.setExtrnlInstTxDscd(xpExtrnlIntrfcMsgInfoDIOOut.getExtrnlInstTxDsc
TGT:
It gets mapping information of message about one specific message.
PRED:
It gets list of External Interface Message Information by external institution code, external institution transaction distinction code.
test 샘플별 bleu-4:  10.22
========================================================================================================================
SRC:
public DeptRoleChngSvcIn clone(){ try{ DeptRoleChngSvcIn object= (DeptRoleChngSvcIn)super.clone(); if ( this.deptRoleList== null ) object.deptRoleList = null; else{ java.util.List<bankware.corebanking.department.rolemanagement.service.dto.DeptRoleChngSvcInSub> clonedList = new java.util.ArrayList<bankware.corebanking.department.rolemanagement.service.dto.DeptRoleChngSvcInSub>(deptRoleList.size()); for( bankware.corebanking.department.rolemanagement.service.dto.DeptRoleChngSvcInSub item : deptRoleList ){ clonedList.add( (bankware.corebanking.department.rolemanagement.service.dto.DeptRoleChngSvcInSub)item.clone()); } object.deptRoleList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public LnArrCndChngInqryOut clone(){ try{ LnArrCndChngInqryOut object= (LnArrCndChngInqryOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<PdTxSrvcIO> getListPdTpCd(PdTxSrvcIO in) throws BizApplicationException { return _convertPdTxSvcIOList2PdTxSrvcIOList(_convertPdTypeOutListToPdTxSvcIOList(_getListPdTpCdCmb(in))); }
TGT:
Methods to query product type information
PRED:
Methods to query product type information
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public DeptRoleChngSvcInSub clone(){ try{ DeptRoleChngSvcInSub object= (DeptRoleChngSvcInSub)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public int registerAprslThing(AprslThingCrtnIn in) throws BizApplicationException { // 1. 확장정보와 보조명세 분리 Map<String, String> subInfoMap = _getAprslThingSubInfoBiz().getMapSubInfoCrtn(in.getAprslThingXtnList()); // 2. 감정물건 등록 int thingSeqNbr = super.registerAprslThing(in); // 3. 보조명세 저장 _getAprslThingSubInfoBiz().saveMapSubInfo(subInfoMap, this, thingSeqNbr); return thingSeqNbr; }
TGT:
Register the thing information for the appraisal.
PRED:
Register the thing information for the appraisal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrReal> getChildren() throws BizApplicationException { return _getArrXtnUtil().convertArrRealList(super.getChildrenCore()); }
TGT:
Inquire a list of child arrangement.
PRED:
Inquire a list of child arrangement by product hierarchy information and a list of arrangement status code input.
test 샘플별 bleu-4:  24.94
========================================================================================================================
SRC:
public static boolean isValid(String value) { for (ExRtKndCdEnum enumObject : values()) { if (enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value) throws BizApplicationException { if(!StringUtils.isEmpty(value)) { for (CustLmtChngDsEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } throw new BizApplicationException("APATE0028", new Object[] {value, "@custLmtChngDscd"}); } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void doServiceAction(String arrSrvcTpCd,ArrCndActionRequiredValue arrCndActionRequiredValue) throws BizApplicationException { switch (arrSrvcTpCd) { case "TerminateDeposit": case "TerminationLoan": case "PartialWithdrawal": _doTerminationAction( ); return; default: // there are no condition action for this condition ({0},{1}) on arrangement service ({2}) // 계약서비스 ({2})를 위한 조건 ({0},{1})의 행동은 유효하지 않습니다 throw new BizApplicationException("AAPARE0288" , new Object[]{this.getCndCd(),this.getCndCdNm(),arrSrvcTpCd}); } }
TGT:
This function execute the extended attribute business rules that registered in the Contract Services Processing Rules.
PRED:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
test 샘플별 bleu-4:  1.87
========================================================================================================================
SRC:
public CaDeptRoleTmpltSvcRgstIn clone(){ try{ CaDeptRoleTmpltSvcRgstIn object= (CaDeptRoleTmpltSvcRgstIn)super.clone(); if ( this.deptRoleTmpltList== null ) object.deptRoleTmpltList = null; else{ java.util.List<bankware.corebanking.configurationadmin.actor.service.dto.CaDeptRoleTmpltSvcRgstDtlIn> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.actor.service.dto.CaDeptRoleTmpltSvcRgstDtlIn>(deptRoleTmpltList.size()); for( bankware.corebanking.configurationadmin.actor.service.dto.CaDeptRoleTmpltSvcRgstDtlIn item : deptRoleTmpltList ){ clonedList.add( (bankware.corebanking.configurationadmin.actor.service.dto.CaDeptRoleTmpltSvcRgstDtlIn)item.clone()); } object.deptRoleTmpltList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public int getPdCnddBnftAplyInfoCount(PdCnddBnftAplyMIn in) throws BizApplicationException { int result = 0; PdCnddBnftAplyMIO pdCnddBnftAplyMIO = new PdCnddBnftAplyMIO(); pdCnddBnftAplyMIO.setTntInstId(_getCmnContext().getInstCode()); pdCnddBnftAplyMIO.setCustId(in.getCustId()); pdCnddBnftAplyMIO.setBnftCd(in.getBnftCd()); pdCnddBnftAplyMIO.setMrchntNbr(in.getMrchntNbr()); pdCnddBnftAplyMIO.setMrchntNbrList(in.getMrchntNbrList()); pdCnddBnftAplyMIO.setMrchntNbrListCount(in.getMrchntNbrList().size()); pdCnddBnftAplyMIO.setBaseDt( PdUtil.parseYyyyMMddHHmmssToDate(_getCmnContext().getTxDate(), _getCmnContext().getTxTime())); pdCnddBnftAplyMIO.setAplyStartDt(PdUtil.parseStringToDate(in.getAplyStartDt())); pdCnddBnftAplyMIO.setAplyEndDt(PdUtil.parseStringToDate(in.getAplyEndDt())); pdCnddBnftAplyMIO.setPdTmpltCdList(in.getPdTmpltCdList()); pdCnddBnftAplyMIO.setPdTmpltCdListCount(in.getPdTmpltCdList().size()); //본점에서 발급한것 무조건 포함한다. pdCnddBnftAplyMIO.setMrchntTpCd(PdMerchantTypeDscdCoreEnum.ALL_MERCHANT.getValue()); pd
TGT:
Methods to query the number of coupons
PRED:
Methods to query the number of coupons
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public TermDpstPsblIntPymntCntSvcOut clone(){ try{ TermDpstPsblIntPymntCntSvcOut object= (TermDpstPsblIntPymntCntSvcOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void registerArrTxXtnInfo(StTxXtnInfoDIO sqlIn, ArrRealCore arr) throws BizApplicationException{ switch(ArrTxKndCoreEnum.getEnum(getArrTxKnd(arr))) { case ARR_TX_INTERNAL: _getStTxIntrnlXtnInfoDDso().insert(sqlIn); break; case ARR_TX_TEMPRARY: _getStTxTmpryXtnInfoDDso().insert(sqlIn); break; case ARR_TX_NORMAL: _getStTxXtnInfoDDso().insert(sqlIn); break; default : throw new BizApplicationException("AAPSTE0212"); } }
TGT:
This method provides the function for registration extended information(EAV) of transaction.
PRED:
This method provides the function for registration extended information(EAV) of transaction.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void validate(String arrSrvcCd, ArrRealCore arrReal, CustCore cust, Map<String, Object> vldtnRequiredValMap) throws BizApplicationException { if (_getLnOvrduInfoProvider().isOverdue((ArrReal)arrReal, ArrCmnUtil.getRckngDt(_getCmnContext()))){ //Arrangement is in overdue. This service ({0}) could not be finished properly //계약이 연체상태입니다. 본서비스({0}) 실행이 불가 합니다 throw new BizApplicationException("AAPARE0295", new Object[]{_getCd().getCode(ArrSrvcEnum.cdNbr,arrSrvcCd)}); } }
TGT:
Inquire whether if arrangement issued media is effective. Not available status for transaction : Arrangement issued media status is Suspended, Terminated, Canceled or active service blocking is regisetered on the media
PRED:
It performs common service processing rules defined in the service processing rules and whether the contract-based service is available, based on the representative service type registered to the specific service. Whether contract services are available verifies: 1) Verification of service restriction based on product information of contract. 2) Verification of restriction related to the service set in the contract such as pledge setting. 3) Perform verification rules that should be performed in common as the requirement that dead customers should not become financial transactions.
test 샘플별 bleu-4:  2.32
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, String txDt, Integer txSeqNbr, ArrRealImpl arrRealImpl) throws BizApplicationException { // null check if (StringUtils.isEmpty(xtnAtrbtNm)){ return; } // 1. 보조명세 종류 조회 ArrSubInfoKndEnum subInfoKnd = arrRealImpl.getSubInfoKnd(); // 2. 계약에 저장된 보조명세 캐시 조회결과에 따라 insert/update 판단 IValueObject subInfoCache = getSubInfoCache(arrRealImpl); if (subInfoCache == null) { // DBIO VO new instance subInfoCache = _getNewSubInfoSqlIO(subInfoKnd); subInfoCache.set("arrId", arrRealImpl.getArrId()); // 빈 이력 생성 --> undo 시 확장속성 저장 이전으로 속성값을 원복시키기 위함 _saveSubInfoHst(arrRealImpl, subInfoKnd, subInfoCache, txDt, txSeqNbr); // 입력된 속성명/속성값을 DBIO VO에 set DtoUtils.setSubInfoIO(xtnAtrbtNm, xtnAtrbtCntnt, subInfoCache); // insert _insertSubInfo(subInfoKnd, subInfoCache); // save cache arrRealImpl.saveSubInfoCache(XtnTableEnum.AR_ARR_M.getValue(), subInfoCache); } else { // 속성�
TGT:
Save an appraisal subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public CnsltnSrchSvcGetSts clone(){ try{ CnsltnSrchSvcGetSts object= (CnsltnSrchSvcGetSts)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Map<String, String> getMapAsmXtnInfo(AsmCoreImpl asm)throws BizApplicationException { return _getMapXtnInfoCache(asm); } /** * 심사확장정보 등록 * <pre> * </pre> * @param asmId : (required) 심사식별자 * @param asmXtnInfoEnumCd : (required) 심사확장정보Enum * @param xtnAtrbtCntnt : 심사확장속성값 * @return * @throws BizApplicationException */ // public void registerAsmXtnInfo(AsmCoreImpl asm, String asmXtnInfoEnumCd, String xtnAtrbtCntnt, boolean isEavOnly)throws BizApplicationException { // //1.입력 필수입력 체크 - 심사식별자,확장속성명 // if ( asm.getBasicInfo().getAsmId() == null || StringCoreUtils.isEmpty(asm.getBasicInfo().getAsmId())) // { // // {0}은/는 필수 입력 항목입니다. // throw new BizApplicationException("AAPCME0006", new String[]{"심사식별자"}); // } // // if (asmXtnInfoEnumCd == null || asmXtnInfoEnumCd.isEmpty()) // { // // {0}은/는 필수 입력 항목입니다. // throw new BizApplicationException("AAPCME0006", new String[]{"심사확장속성
TGT:
This method gets map of extended information.
PRED:
This method gets map of extended information.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public IntrnlArrOpnSvcArrCndOut clone(){ try{ IntrnlArrOpnSvcArrCndOut object= (IntrnlArrOpnSvcArrCndOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArrTx getCancelableLastTx(ArrReal arr) throws BizApplicationException { return (ArrTx) super.getCancelableLastTxCore((ArrRealCore)arr); }
TGT:
This method provides the function for inquiring the last cancelable transaction.
PRED:
This method inquires the last transaction that can be canceled during the transaction of the contract. A cancelable transaction is what cancelable service Yn is Y in the service profile of the service pointed to by the transaction code.
test 샘플별 bleu-4:  5.56
========================================================================================================================
SRC:
public static boolean isValid(String value) throws BizApplicationException { if(!StringCoreUtils.isEmpty( value)) { for (ScrtyIntStsCoreEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } throw new BizApplicationException("AAPATE0028", new Object[] {value, "@scrtyIntStsCd"});//({0}) is invalid {1}. } return true; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArrBsicQrySvcGetArrRelInfoOut clone(){ try{ ArrBsicQrySvcGetArrRelInfoOut object= (ArrBsicQrySvcGetArrRelInfoOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public SimpleDpstAcctInqrySvcIn clone(){ try{ SimpleDpstAcctInqrySvcIn object= (SimpleDpstAcctInqrySvcIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaSrvcBlckngInfoMgmtSvcSaveBizDscdInfoIn clone(){ try{ CaSrvcBlckngInfoMgmtSvcSaveBizDscdInfoIn object= (CaSrvcBlckngInfoMgmtSvcSaveBizDscdInfoIn)super.clone(); if ( this.bizDscdInfoList== null ) object.bizDscdInfoList = null; else{ java.util.List<bankware.corebanking.configurationadmin.arrangement.service.dto.CaSrvcBlckngInfoMgmtSvcBizDscd> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.arrangement.service.dto.CaSrvcBlckngInfoMgmtSvcBizDscd>(bizDscdInfoList.size()); for( bankware.corebanking.configurationadmin.arrangement.service.dto.CaSrvcBlckngInfoMgmtSvcBizDscd item : bizDscdInfoList ){ clonedList.add( (bankware.corebanking.configurationadmin.arrangement.service.dto.CaSrvcBlckngInfoMgmtSvcBizDscd)item.clone()); } object.bizDscdInfoList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrIntRtHst> getListConfirmedIntRtHistory(ArrIntRtCoreIn in) throws BizApplicationException { List<ArrIntRtHst> arrRtList = _getArrIntRtGenerator().getListConfirmedIntRtHistory(in); if (logger.isDebugEnabled()) { logger.debug("## <ZZ> ArrIntRtProviderImpl > getListArrIntRtForIntCalculationHst {}", arrRtList); } return arrRtList; }
TGT:
Inquiry (or/and calculate) interest rate using formula which is predefined for request arrangement's product
PRED:
Inquire a list of fixed interest rate history saved to the arrangement.
test 샘플별 bleu-4:  11.58
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> subInfoMap, CustRprsnImpl custRprsnImpl) throws BizApplicationException { // 0. null check if (subInfoMap == null || subInfoMap.isEmpty()) { return; } // 1. 보조명세 캐시 조회결과에 따라 insert/update 판단 AtCustRprsnSIO subInfoIO = getSubInfoCache(custRprsnImpl); if (subInfoIO == null) { // DBIO VO new instance subInfoIO = new AtCustRprsnSIO(); subInfoIO.setCustRprsnId(custRprsnImpl.getCustRprsnId()); // 입력된 Map을 DBIO VO에 반영 DtoUtils.setSubInfoIO(subInfoMap, subInfoIO); // insert _getAtCustRprsnSDso().insert(subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(subInfoMap, subInfoIO)) { return; } // 변경전 이력 저장 _saveSubInfoHst(custRprsnImpl, subInfoIO); // 입력된 Map을 DBIO VO에 반영 DtoUtils.setSubInfoIO(subInfoMap, subInfoIO); // update _getAtCustRprsnSDso().update(subInfoIO); } // 2. 캐시 저장 custRprsnImpl.setSubInfoCache(subInfoIO); }
TGT:
Save the appraisal subsidiary information using map.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  6.11
========================================================================================================================
SRC:
public PrtnrStaffRgstSvcXtnIn clone(){ try{ PrtnrStaffRgstSvcXtnIn object= (PrtnrStaffRgstSvcXtnIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<CmStdAtrVrtnMIO> selectList(String instCd) { return _getCmStdAtrVrtnM().selectList(instCd); }
TGT:
It gets list of http header properties.
PRED:
It gets list of http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public AsmBsicInfoIO getBasicInfo() throws BizApplicationException { return asmBsicInfoIO; }
TGT:
It inquiries assessment basic information.
PRED:
Inquire the basic information of the appraisal request.
test 샘플별 bleu-4:  16.04
========================================================================================================================
SRC:
public void saveListXtnInfo(List<ActorXtnAtrbtRgstIn> actorXtnAtrbtIOList) throws BizApplicationException { // 확장정보명세/보조명세 분류 Map<String, String> subInfoCrtnMap = _getActorSubInfoBiz().getMapSubInfoCrtn(actorXtnAtrbtIOList); // 2022.04.01 CTI / EAV 판단이 끝나 EAV용으로만 호출함 // super.saveListXtnInfo(actorXtnAtrbtIOList); super.saveListXtnInfoByEav(actorXtnAtrbtIOList); // 보조명세 생성 _getActorSubInfoBiz().saveMapSubInfo(subInfoCrtnMap, this); }
TGT:
It modifies the actor's extended information list. If the extended attribute information is registered, it will be modified. Otherwise, it will be registered. The registered information only includes normal status information.
PRED:
It modifies the actor's extended information list. If the extended attribute information is registered, it will be modified. Otherwise, it will be registered. The registered information only includes normal status information.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public DepoBnkArrMgmtSvcInqryIn clone(){ try{ DepoBnkArrMgmtSvcInqryIn object= (DepoBnkArrMgmtSvcInqryIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isArrServiceBlocked(String arrSrvcCd) throws BizApplicationException { //외부식별자에 의한 서비스 blocking _getArrRealCoreFundamentalAgent().isArrExternalIdServiceBlocked(this.getArrExtrnlIdNbrTpCd(), arrSrvcCd); return _getArrSrvcBlckngBiz().isArrServiceBlocked(arrSrvcCd, this); }
TGT:
Verify that Service Blocking is registered in this arrangement for the arrangement service type entered. In the case of that Service Blocking('Proof of balance') is registered for service type('Interest payment'), if you check isArrServiceBlocked(ArrSrvcEnum.InterestPayment), it returns 'TRUE'. If you get the arrangement using external id number, it confirms whether the Service Blocking is registered for the service type in the external id number. If it is, it shows error message ('the external ID is service blocked'). When you want to check with service type code not with service type enum,
PRED:
It check if arrangement is blocked on specific arrangement service type enum Verify that Service Blocking is registered in this arrangement for the arrangement service type entered. In the case of that Service Blocking('Proof of balance') is registered for service type('Interest payment'), if you check isArrServiceBlocked(ArrSrvcEnum.InterestPayment), it returns 'TRUE'. If you get the arrangement using external id number, it confirms that whether the Service Blocking is registered for the service type in the external id number. if it is, it shows error message ('the external ID is service
test 샘플별 bleu-4:  79.73
========================================================================================================================
SRC:
public List<ClTreeIO> getListClassification(ClTreeIO in) throws BizApplicationException { List<ClTreeIO> out = new ArrayList<ClTreeIO>(); CmClTreeDIO inDao = _getInputClassification(in); inDao.setActvStsCd(ActiveStatusEnum.ACTIVE.getValue()); List<CmClTreeDIO> daoOtList = _getCmClTreeDDso().selectList(inDao); for (CmClTreeDIO daoOut : daoOtList) { ClTreeIO sub = _getOutputClassificationTree(daoOut); out.add(sub); } return out; }
TGT:
It inquiries classification tree.
PRED:
It inquiries classification tree.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> assetThingSubInfoMap, AssetCore assetImpl, Integer assetThingSeqNbr, String txDt, Integer txSeqNbr) throws BizApplicationException { _getAssetThingSubInfoBiz().saveMapSubInfo(assetThingSubInfoMap, txDt, txSeqNbr, (AssetImpl) assetImpl, assetThingSeqNbr); }
TGT:
This method save settlement subsidiary detail information using subInfoMap.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public InterOfficeClearSvcIn clone(){ try{ InterOfficeClearSvcIn object= (InterOfficeClearSvcIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getDocIssueId() throws BizApplicationException { if(docIssueIO != null) return docIssueIO.getDocIssueId(); return null; }
TGT:
It provides document id.
PRED:
It provides document id.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CustLoginSvcGetHstIn clone(){ try{ CustLoginSvcGetHstIn object= (CustLoginSvcGetHstIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void doServiceAction(String arrSrvcTpCd,ArrCndActionRequiredValue arrCndActionRequiredValue) throws BizApplicationException { Cust mainCust = _getCustMngr().getCust(super.getArr().getMainArrCustId()); if (mainCust == null){ return; } // 2017.11.16 기업고객인 경우 가입가능연령 검증을 수행하지 않는다. // 개인고객 또는 개인사업자만 검증처리 // v5.9.2 #22580 2021.11.25 개인 고객만 검증하도록 수정함 ActorTpEnum actorType = ActorTpEnum.getByValue(mainCust.getActorTypeCode()); if(!ActorTpEnum.INDIVIDUAL.equals(actorType) ){ return ; } if (StringUtils.isEmpty(getListCd())) { //Customer gender type is not exist To make decision whether This product ({0},{1}) purchase is allowed or Not //본 상품({0},{1})의 판매가능 여부 확인을 위한 고객의 성별이 존재 하지 않습니다 throw new BizApplicationException("AAPARE0405" , new Object[]{getArrangementCore().getPd().getPdCd(),getArrangementCore().getPd().getPdNm()}); } if (!ArrCondition
TGT:
Perform the condition action related to the specific service type. For example 1 , In case of loan installment disbursement possible condition ,the loan disbursement possible condition class' "doServiceAction" method dose the validation step like 1.investigates disbursed amount, 2.get product condition value whether installment disbursement is allowed, 3. make decision whether the service is permitted or not. The other example, the interest capitalization YN condition class do the action to make a interest capitalization arrangement plan on next planed date when arrangement open
PRED:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
test 샘플별 bleu-4:  4.31
========================================================================================================================
SRC:
public void removeTailoredDtoClassAttribute(CaTailoredDtoClassDtlIn in) throws BizApplicationException{ _checkInputForRemove(in); CaCmDtoClassAtrVldVrtnDIO deleteItem = _selectDtoClassAtrbtVldtnVrtn(in.getInstCd(),in.getInpDtoNm(),in.getAtrbtNm()); if(deleteItem == null){ // 2018.04.02 keewoong.hong error 검출을 위해 메시지를 다양화 함 String errMsg = in.getInpDtoNm().concat(".").concat(in.getAtrbtNm()); throw new BizApplicationException("AAPCME0115", new Object[] { errMsg }); } _getCmDtoClassAtrVldVrtnDDso().delete(deleteItem); }
TGT:
Remove the tailored DTO class attribute
PRED:
Remove the tailored DTO class attribute.
test 샘플별 bleu-4:  80.91
========================================================================================================================
SRC:
public PrtnrStaffChngSvcIn clone(){ try{ PrtnrStaffChngSvcIn object= (PrtnrStaffChngSvcIn)super.clone(); if ( this.staffXtnInfoList== null ) object.staffXtnInfoList = null; else{ java.util.List<bankware.corebanking.partner.change.service.dto.PrtnrStaffChngSvcXtnIO> clonedList = new java.util.ArrayList<bankware.corebanking.partner.change.service.dto.PrtnrStaffChngSvcXtnIO>(staffXtnInfoList.size()); for( bankware.corebanking.partner.change.service.dto.PrtnrStaffChngSvcXtnIO item : staffXtnInfoList ){ clonedList.add( (bankware.corebanking.partner.change.service.dto.PrtnrStaffChngSvcXtnIO)item.clone()); } object.staffXtnInfoList = clonedList; } if ( this.staffCtcptIO==null ) object.staffCtcptIO = null; else object.staffCtcptIO = (bankware.corebanking.partner.change.service.dto.PrtnrStaffChngSvcCtcptIO)this.staffCtcptIO.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void modifyArrExternalIdNbr(String arrExtrnlIdNbrTpCd, String arrExtrnlIdNbr, String txDt, Integer txSeqNbr) throws BizApplicationException { _getArrExtrnlIdNbrBiz().modifyArrExternalIdNbr(arrExtrnlIdNbrTpCd, arrExtrnlIdNbr, txDt, txSeqNbr, this); }
TGT:
Change arrangement external ID number registered on arrangement.
PRED:
Change arrangement external id number registered on arrangement (Excluding transactional contract support)
test 샘플별 bleu-4:  27.97
========================================================================================================================
SRC:
static boolean isValid(String value) throws BizApplicationException { if(!StringCoreUtils.isEmpty(value)) { for (IpctTxStsCdEnum item : IpctTxStsCdEnum.values()) { if (value.equals(item.getValue())) { return true; } } return false; } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public BigDecimal getRngVal() throws BizApplicationException { if ( super.getRngVal() == null ){ super.setRngVal(_getAgreementPeriod()); } if(logger.isDebugEnabled()){ logger.debug("<z.g> ArrCndAgreementPeriod getRngVal={}",super.getRngVal()); } return super.getRngVal(); }
TGT:
A method that compares the value of a condition class to the value of a range condition.
PRED:
A method that compares the value of a condition class to the value of a range condition.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrReal> getListCustOwnArrRealInitOrAppliedOnPeriod (String custId,String pdCd,String inqryStartDt,String inqryEndDt) throws BizApplicationException { //return _getArrCustRelQryBizImpl().getListCustOwnArrRealInitOrAppliedOnPeriod(custId,pdCd,inqryStartDt,inqryEndDt); return _getArrCustRelQryBizImpl().getListArrRealByArrStsWithInitOrAppliedOnPeroid(custId,ArrCustRelEnum.MAIN_CONTRACTOR.getValue(), null, null, null,pdCd,inqryStartDt, inqryEndDt); }
TGT:
Inquire a list of customer own (as main contractor) arrangements of specific product whose status was in "Initiated" or "Applied" during inquiry period.
PRED:
Inquire a list of customer own (as main contractor) arrangements of specific product hierarchy whose status was in "Initiated" or "Applied" during inquiry period.
test 샘플별 bleu-4:  88.95
========================================================================================================================
SRC:
public CustCtcptChngSvcGetTelNbrOut clone(){ try{ CustCtcptChngSvcGetTelNbrOut object= (CustCtcptChngSvcGetTelNbrOut)super.clone(); if ( this.ctcptXtnInfoList== null ) object.ctcptXtnInfoList = null; else{ java.util.List<bankware.corebanking.customer.change.service.dto.CustCtcptChngSvcGetXtnAtrbtOut> clonedList = new java.util.ArrayList<bankware.corebanking.customer.change.service.dto.CustCtcptChngSvcGetXtnAtrbtOut>(ctcptXtnInfoList.size()); for( bankware.corebanking.customer.change.service.dto.CustCtcptChngSvcGetXtnAtrbtOut item : ctcptXtnInfoList ){ clonedList.add( (bankware.corebanking.customer.change.service.dto.CustCtcptChngSvcGetXtnAtrbtOut)item.clone()); } object.ctcptXtnInfoList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrRealCore> getCustOwnLoanArrCoreListActive (String custId) throws BizApplicationException { // 해당 메소드는 ({0}) 클래스의 인스턴스로 사용할 수 없습니다. 계약담당자에게 문의바랍니다. // This method cannot be used by instance of ({0}) class. throw new BizApplicationException("AAPARE0678",new Object[]{this.getClass().getName()}); }
TGT:
Get loan arrangements with active status that a customer owns as main contractor.
PRED:
Get loan arrangements with active status that a customer owns as main contractor.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getSubInfo(String xtnAtrbtNm, AprslRqstCore aprslRqstCore) throws BizApplicationException { return _getAprslRqstSubInfoBiz().getSubInfo(xtnAtrbtNm, (AprslRqstImpl)aprslRqstCore); }
TGT:
Inquire a specific subsidiary information of the asset transaction.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  67.87
========================================================================================================================
SRC:
public boolean isDiscarded() throws BizApplicationException { return DocIssueStsEnum.CLOSED.getValue().equals(getDocIssueCore().getDocIssueStsCd()); }
TGT:
It inquires whether or not the issued document is discarded.
PRED:
It inquires whether or not the issued document is discarded.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaRoleMgmtSvcGetRoleScreenRelationOut clone(){ try{ CaRoleMgmtSvcGetRoleScreenRelationOut object= (CaRoleMgmtSvcGetRoleScreenRelationOut)super.clone(); object.lastChngTmstmp = (bxm.omm.format.wrapper.DateFormattedWrapper)this.lastChngTmstmp.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaStdSrvcIoMgmtSvcGetStdSrvcIOStdAtrbtRuleOut clone(){ try{ CaStdSrvcIoMgmtSvcGetStdSrvcIOStdAtrbtRuleOut object= (CaStdSrvcIoMgmtSvcGetStdSrvcIOStdAtrbtRuleOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void doServiceAction(String arrSrvcTpCd,ArrCndActionRequiredValue arrCndActionRequiredValue) throws BizApplicationException { switch (arrSrvcTpCd) { case "AcquireCltrl": _doServiceAction(arrSrvcTpCd,arrCndActionRequiredValue); return; default: // there are no condition action for this condition ({0},{1}) on arrangement service ({2}) // 계약서비스 ({2})를 위한 조건 ({0},{1})의 행동은 유효하지 않습니다 throw new BizApplicationException("AAPARE0288" , new Object[]{this.getCndCd(),this.getCndCdNm(),arrSrvcTpCd}); } }
TGT:
Perform the condition action related to the specific service type. For example 1 , In case of loan installment disbursement possible condition ,the loan disbursement possible condition class' "doServiceAction" method dose the validation step like 1.investigates disbursed amount, 2.get product condition value whether installment disbursement is allowed, 3. make decision whether the service is permitted or not. The other example, the interest capitalization YN condition class do the action to make a interest capitalization arrangement plan on next planed date when arrangement open
PRED:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
test 샘플별 bleu-4:  4.31
========================================================================================================================
SRC:
public String getApplyEndDateTime() { return PdUtil.parseDateToYYYYMMDDHHMMSS(_getAplyEndDt()); }
TGT:
This method inquire apply end date and time of product condition.
PRED:
This method inquire apply end date and time of product condition.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Integer getListDataCntForConsistency() throws BizApplicationException { return _getDstbCnstncyCmInstPMDso().selectListCntForConsistency(); }
TGT:
Validate Query Row Count for Distribution Validation
PRED:
Validate Query Row Count for Distribution Validation
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getAcctgDscd(){ return acctgDscd; }
TGT:
This method inquires the accounting distinction code.
PRED:
This method inquires the accounting distinction code.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void isValid() throws BizApplicationException { // 서비스 존재여부 검증 SvInstSrvcRstrctnDIO daoIn = new SvInstSrvcRstrctnDIO(); _getCmnContext().setColumn(daoIn); daoIn.setInstCd(_getCmnContext().getInstCode()); daoIn.setSrvcCd(_getCmnContext().getServiceCode()); daoIn.setSrvcRstrctnTrgtCntnt(_getCmnContext().getChannelDscd()); List<SvInstSrvcRstrctnDIO> daoOut = _getSvInstSrvcRstrctnDDso().selectListBySrvcCd( daoIn ); if(!daoOut.isEmpty()) { boolean isRstrct = false; String txDateTime = _getCmnContext().getTxDate().concat(_getCmnContext().getTxTime()); for(SvInstSrvcRstrctnDIO entry : daoOut){ if(txDateTime.compareTo(entry.getSrvcRstrctnStartDtm()) >= 0 && txDateTime.compareTo(entry.getSrvcRstrctnEndDtm() ) <= 0 ) { isRstrct = true; } } if (isRstrct) { throw new BizApplicationException( "AAPSVE0009", new String[] { _getCmnContext().getServiceCode() } ); } } } /** * <div class='en'> * @description * <pre> * Check whether the service is restricted by the product code. * If restricted service, call the error message (AAPSVE0014). * </pre> * @seealso {@link #isValid()} : Check by the service code * @seealso {@link #isValidByChnlCode()} : Check by the channel code * </div> * * <div class='ko'> * @description * <pre> * 상품 코드를 통해 해당 서비스의 제한 여�
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  16.68
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> subInfoMap, ArrTxCore arrTx) throws BizApplicationException{ _getArrTxSubInfoBiz().saveSubInfo(subInfoMap, (ArrTxImpl)arrTx); }
TGT:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaArrRelRuleMgmtSvcGetArrRelRuleDtl clone(){ try{ CaArrRelRuleMgmtSvcGetArrRelRuleDtl object= (CaArrRelRuleMgmtSvcGetArrRelRuleDtl)super.clone(); object.lastChngTmstmp = (bxm.omm.format.wrapper.DateFormattedWrapper)this.lastChngTmstmp.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(InsrncSubInfo subInfo, String txDt, Integer txSeqNbr, InsrncImpl insrncImpl) throws BizApplicationException{ // 0. null check if(subInfo == null){ throw new BizApplicationException("AAPCME0006", new Object[] {InsrncSubInfo.class.getSimpleName()}); } // 1. 표준속성에 등록된 검증규칙을 통해 입력받은 확장속성내용 검증 for(Entry<String, Object> entry : subInfo.getFieldValues().entrySet()) { if(entry.getValue() != null) { _getAtrbtChk().checkStandardAttribute(entry.getKey(), String.valueOf(entry.getValue())); } } // 2. 보조원장 캐시 조회결과에 따라 insert/update 판단 AsInsrncSIO subInfoCache = getSubInfoCache(insrncImpl); if(subInfoCache == null){ // DBIO VO new instance subInfoCache = new AsInsrncSIO(); subInfoCache.setInsrncId(insrncImpl.getInsrncBasicCache().getInsrncId()); // PK setting // 빈 이력 생성 --> undo 시 확장속성 저장 이전으로 속성값을 원복시키기 위함 _saveSubInfoHst(insrncImpl, subInfoCache, txDt, txSeqNbr); // 입력된 I/F VO를 DBIO VO�
TGT:
Save an asset subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public String getSaleStartDateTime() { return PdUtil.parseDateToYYYYMMDDHHMMSS(bf.getSaleStartDt()); }
TGT:
This Method inquire sale start date time of point
PRED:
This Method inquire sale start date time of point
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrPsbkBkgMsg> buildMsgFormat(ArrIssmdaCore arrIssmda, String arrId, String psbkSrvcTpCd, String psbkMsgId, Map<String, Object> psbkMsgParmMap) throws BizApplicationException { /** * get arrangement */ Arr arr = _getArrMngr().getArr(arrId); /** * get configuration */ int sideCnt = 2; int row = 5; int col = 1; int length = 84; String align = ""; String custName = String.format("%"+col+"s%"+align+length+"s"," " , _getCustMngr().getCust(arr.getMainArrCustId()).getName()); ArrPsbkBkgMsg psbkLine = new ArrPsbkBkgMsg(); psbkLine.setPsbkBkgSideCnt(sideCnt); psbkLine.setPsbkBkgRowCnt(row); psbkLine.setPsbkBkgCntnt(custName); List<ArrPsbkBkgMsg> psbkLineList = new ArrayList<>(); psbkLineList.add(psbkLine); return psbkLineList; }
TGT:
Build passbook by booking message's form.
PRED:
Build passbook message by passbook message template and input values.
test 샘플별 bleu-4:  17.83
========================================================================================================================
SRC:
public String getServiceClassName() { return srvcClassNm; }
TGT:
Inquire service class name.
PRED:
Inquire service class name.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value){ for (AmountKindEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
private BfCndTestSvcOut getCndVal(BfCndTestSvcIn in) throws BizApplicationException { // Set input BfIn bfIn = new BfIn(); bfIn.setBfCd(in.getPdCd()); bfIn.setAplyDt(in.getAplyDt()); // BF 객체생성 Bf bf = _getBfMngr().getBf(bfIn); // 조건객체 생성 BfCnd bfCnd = bf.getCnd(in.getCndCd()); CndVal output = bfCnd.getCndVal(_convertProvideCndSvcListToProvideCndList(in.getProvideCnd())); BfCndTestSvcOut out = new BfCndTestSvcOut(); if (output == null) { out.setChkYn(false); } else { out.setChkYn(true); out.setCntnt(output.toString()); } return out; }
TGT:
This method inquire condition value.
PRED:
This method inquire privide condition value.
test 샘플별 bleu-4:  48.89
========================================================================================================================
SRC:
public String calculateDate(String baseDt, int dtNum, CaDtDscdEnum dtType) throws BizApplicationException { if (StringUtils.isEmpty(baseDt)) { throw new BizApplicationException("AAPCME0001", new Object[] {baseDt, ""}); } // Validate input date type _checkDate(baseDt); // Date Computation return _calculateDate(baseDt, dtNum, dtType, DateUtils.EMPTY_DATE_TYPE); }
TGT:
It calculates the date of the day. (±1~2 days)
PRED:
It calculates the date of the day. (±1~2 days)
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isValidType(AtrbtTpEnum atrbtTp, Integer dcmlPntLen, String atrbtCntnt) throws BizApplicationException { if (logger.isDebugEnabled()) { logger.debug("atrbtTpCd={}", atrbtTp); logger.debug("atrbtCntnt={}", atrbtCntnt); } if (atrbtTp == null) { throw new BizApplicationException("AAPCME0037", new Object[] { atrbtTp }); } // Validate attribute type switch (atrbtTp) { case TEXT: // text return (StringCoreUtils.isEmpty(atrbtCntnt)) ? false : true; case TEXT_DATE: // date return DateCoreUtils.isValidDate(atrbtCntnt); case TEXT_NUMBER: // number return DataCheckCoreUtils.isNumeric(atrbtCntnt); case NUMBER: // number boolean chkNbr = DataCheckCoreUtils.isNumeric(atrbtCntnt); if(logger.isDebugEnabled()) { logger.debug(" ########### isValidType NUMBER chkNbr : {}", chkNbr); } if(chkNbr) { // 소수점자리수 검증 return _isValidDecimalPoint(dcmlPntLen, atrbtCntnt); } else { return chkNbr; } case TEXT_ALPHA_NUMERIC: // Alpha-Number return DataCheckCoreUtils.isAlphaNumeric(atrbtCntnt); case YES_OR_NO: // yes or no return (CCM01.YES.equals(atrbtCntnt) || CCM01.NO.equals(atrbtCntnt)) ? true : false; case PASSWORD: // Password return DataCheckCoreUtils.isValidPassword(atrbtCntnt); case TIMESTAMP: // timestamp return true; case JSON: // json return DataCheckCoreUtils.isJson(atrbtCntnt); case EMPTY: return true; default: throw new BizApplicationException("AAPCME0037", new Object[] { atrbtTp }); } }
TGT:
Validate that the value of the input attribute matches the type of the attribute.
PRED:
Validate that the value of the input attribute matches the type of the attribute.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void register(List<CaNoticeMsgDocRMgmtIO> docNoticeMsgRIOList) throws BizApplicationException { if(docNoticeMsgRIOList == null || docNoticeMsgRIOList.isEmpty()){ return; } for(CaNoticeMsgDocRMgmtIO docNoticeMsgRIOItem : docNoticeMsgRIOList){ //check required inputs if(StringUtils.isEmpty(docNoticeMsgRIOItem.getInstCd())){ throw new BizApplicationException("AAPCME0006", new String[] {"@instCd"}); }else if(StringUtils.isEmpty(docNoticeMsgRIOItem.getNoticeMsgCd())){ throw new BizApplicationException("AAPCME0006", new String[] {"@noticeMsgCd"}); } CaAtDocNoticeMsgRIO rgstrnDocNoticeMsgRMgmtIO = _getAtDocNoticeMsgRDso().select(docNoticeMsgRIOItem.getInstCd(), docNoticeMsgRIOItem.getNoticeMsgCd()); if(rgstrnDocNoticeMsgRMgmtIO == null){ if(!_isEmptyDocId(docNoticeMsgRIOItem.getDocId())){ CaAtDocNoticeMsgRIO atDocNoticeMsgRIO = new CaAtDocNoticeMsgRIO(); _getCaCmnContext().setHeaderColumn(atDocNoticeMsgRIO); atDocNoticeMsgRIO.setInstCd(docNoticeMsgRIOItem.getInstCd()); atDocNoticeMsgRIO.setNoticeMsgCd(docNoticeMsgRIOItem.getNoticeMsgCd()); atDocNoticeMsgRIO.setDocId(docNoticeMsgRIOItem.getDocId()); _getAtDocNoticeMsgRDso().insert(atDocNoticeMsgRIO); } }else{ //delete registered doc-notice message relation _getCaCmnContext().setHeaderColumn(rgstrnDocNoticeMsgRMgmtIO); rgstrnDocNoticeMsgRMgmtIO.setInstCd(docNoticeMsgRIOItem.getInstCd()); _getAtDocNoticeMsgRDso().delete(rgstrnDocNoticeMsgRMgmtIO); //insert new doc-notice message relation rgstrnDocNoticeMsgRMgmtIO.setDocId(StringUtils.isEmpty(docNoticeMsgRIOItem.getDocId())
TGT:
It registers or modifies the customer grade code.
PRED:
It registers the actor role parameter information list. If there is registered actor role parameter information by the same institution, throws exception.
test 샘플별 bleu-4:  7.83
========================================================================================================================
SRC:
public ArrPlanIO getArrPlan(Integer plnSeqNbr, ArrRealImpl arrRealImpl) throws BizApplicationException { if (plnSeqNbr == null) { throw new BizApplicationException("AAPCME0006", new Object[]{"@plnSeqNbr"}); } ArArrPlnMIO arArrPlnMIO; if(arrRealImpl.isArrKindTxal()){ arArrPlnMIO = _getArArrTmpryPlnMDso().select( _getCmnContext().getInstCode(), arrRealImpl.getArrId(), plnSeqNbr); }else{ arArrPlnMIO = _getArArrPlnMDso().select( _getCmnContext().getInstCode(), arrRealImpl.getArrId(), plnSeqNbr); } if (arArrPlnMIO == null) { throw new BizApplicationException("XXXXX", new Object[]{"@plnSeqNbr"}); } return _buildArrPlanIO(arArrPlnMIO); }
TGT:
Inquire arrangement plan with plan sequence number
PRED:
Inquire arrangement plan with plan sequence number.
test 샘플별 bleu-4:  84.09
========================================================================================================================
SRC:
public void registerArrPlan(ArrPlanIO arrPlan, String txDt, Integer txSeqNbr, ArrRealCoreImpl arrRealImpl) throws BizApplicationException { // 계약 계획 주제영역 미사용 시 skip if (!_getArrCustom().isSubDmnUsed(ArrSubDmnEnum.PLAN)) { return; } _checkInput(arrPlan,txDt,txSeqNbr, arrRealImpl); // Check Transaction Exist // 거래생성여부 검증 _getArrCmnUtil().validateArrTxExist(arrRealImpl, txDt, txSeqNbr); List<ArArrPlnMIO> arArrPlnMIOList = _selectActivePlan(arrPlan.getArrSrvcCd(),arrRealImpl); if (arArrPlnMIOList != null && !arArrPlnMIOList.isEmpty()) { //The ({0})service is already registered on arrangement //동일한 서비스({0})의 계약계획이 이미 등록 되어 있습니다 throw new BizApplicationException("AAPARE0289", new Object[]{_getCdCore().getCode(ArrSrvcCoreEnum.cdNbr, arrPlan.getArrSrvcCd())}); } //Register Arrangement Plan ArArrPlnMIO arArrPlnMIO = new ArArrPlnMIO(); arArrPlnMIO.setInstCd(arrRealImpl.getInstCd()); arArrPlnMIO.setArrId(arrRealImpl.getArrId()); //거래계약분리처리 Integer seqNbr; if(ArrKndCoreEnum.TEMPORARY.getValue().equals(arrRealImpl.getArrKindCd())){ seqNbr = _getArArrTmpr
TGT:
- register arrangement plan - Functionalities It create new arrangement plan
PRED:
Register arrangement plan to arrangement.
test 샘플별 bleu-4:  10.82
========================================================================================================================
SRC:
public List<TaxRtIO> getListTaxRate(String isoNatCd, String taxRtCd, String aplyStartDt) throws BizApplicationException { return _getListTaxRate(isoNatCd, taxRtCd, "", aplyStartDt, ""); }
TGT:
This method provides a list of tax rate information by ISO country code and start date.
PRED:
This method provides a list of tax rate information by ISO country code, start/end date.
test 샘플별 bleu-4:  75.45
========================================================================================================================
SRC:
public void register(DstbCtvdMIO dstbCtvdMIO, DstbCtvdRsltErrRgstIn dstbCtvdRsltErrRgstIn) throws BizApplicationException{ // 1. convert insert data CaDstbCtvdRsltErrHIO caDstbCtvdRsltErrHIO = _setCaDstbCtvdRsltErrH(dstbCtvdMIO, dstbCtvdRsltErrRgstIn); // 2. check pk validation _PKValidateCaDstbCtvdRsltErrH(caDstbCtvdRsltErrHIO); // 3. data insert _getCaDstbCtvdRsltErrHDso().insert(caDstbCtvdRsltErrHIO); }
TGT:
It registers the notice message code information. Needs caution as the registered information performs the update transaction.
PRED:
It registers the actor role parameter information list. If there is registered actor role parameter information by the same institution, throws exception.
test 샘플별 bleu-4:  11.86
========================================================================================================================
SRC:
public void doServiceAction(String arrSrvcTpCd, ArrCndActionRequiredValue arrCndActionRequiredValue) throws BizApplicationException { if(logger.isDebugEnabled()){ logger.debug("doServiceAction start"); } ArrReal arrReal = (ArrReal) this.getArrangementCore(); if(!arrReal.isReal()) return; _doOpenAction(arrSrvcTpCd, arrCndActionRequiredValue, arrReal); // switch(arrSrvcTpCd) { // case "ArrangementConditionTest": // case "OpenDeposit": // break; // default: // // there are no condition action for this condition ({0},{1}) on arrangement service ({2}) // // 계약서비스 ({2})를 위한 조건 ({0},{1})의 행동은 유효하지 않습니다 // throw new BizApplicationException("AAPARE0288", new Object[]{this.getCndCd(),this.getCndCdNm(),arrSrvcTpCd}); // } }
TGT:
Process the special condition related actions for input service according to product condition value or negotiated value. For example, the "Required document" condition has the product required document type for loan application service. The arrangement condition action validate the required document type is received (presented) or not. Another example is the deposit open service, "Interest capitalization YN" condition dose the action to make an interest capitalization arrangement plan on next planed date. This method performs the function of performing product condition management rule registered on system. Implementation of condition management rule : - The rules that should be processed in
PRED:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
test 샘플별 bleu-4:  15.44
========================================================================================================================
SRC:
static boolean isValid(String value) { for (CaExternalTableStatusCodeCoreEnum item : CaExternalTableStatusCodeCoreEnum.values()) { if (value.equals(item.getValue())) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaPdInfoInqrySvcTblOut clone(){ try{ CaPdInfoInqrySvcTblOut object= (CaPdInfoInqrySvcTblOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public int delete(CaAmCrdtrtgGradeMIO AmCrdtrtgGradeMIO){ return _getAmCrdtrtgGradeM().delete(AmCrdtrtgGradeMIO); }
TGT:
It changes the status of insurance to cancel status
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  15.45
========================================================================================================================
SRC:
public DocCore getDocCore() throws BizApplicationException { return this.docCore; }
TGT:
It obtains the document object of the issued document.
PRED:
It inquiries document object with institution id and document id.
test 샘플별 bleu-4:  17.83
========================================================================================================================
SRC:
public AcctCltrlMgmtSvcSaveIn clone(){ try{ AcctCltrlMgmtSvcSaveIn object= (AcctCltrlMgmtSvcSaveIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getArrStsChngRsnCd(){ return arrStsChngRsnCd; }
TGT:
Inquire status changed reason code of current arrangement status.
PRED:
현재 계약 상태의 상태변경사유코드 조회
test 샘플별 bleu-4:  10.32
========================================================================================================================
SRC:
public void saveSubInfo(Map<String, String> subInfoMap, ArrTxImpl arrTx) { // 1. 입력으로 받은 Map이 비여 있거나 null일 때 , null 체크하는 이유는 CTI, EAV분리하는 메소드에서 없으면 null return하고 있음. if(subInfoMap==null || subInfoMap.isEmpty()) { return; } // 속성값 검증 _getAtrbtChk().checkStandardAttributeMap(subInfoMap); // 2. 거래관련 보조명세 조회(캐시로부터) IValueObject oldCache = getSubInfoCache(arrTx); // 4. DB 반영 if(oldCache == null) { // 4.1.1 DBIO VO 인스턴스 생성 oldCache = _newSubInfoDBIO(arrTx); // 4.1.2 primary key 조립 _setKey(oldCache,arrTx); // 4.1.3 보조정보Map-> DBIO VO값 채우기 DtoUtils.setSubInfoIO(subInfoMap, oldCache); // 4.1.4 캐싱된 보조명세 정보가 없으면 최초 저장, 즉 insert _insertSubInfo(arrTx, oldCache); // 4.1.5 arrTx.set
TGT:
This method save settlement subsidiary detail information using xtnAtrbtNm and xtnAtrbtCntnt.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public List<ArrReal> getListArrBasedOnStsHistory(String deptId, ArrDeptRelEnum arrDeptRel, String bizDscd, String pdTpCd, String pdTmpltCd, ArrStsEnum curArrSts, ArrStsEnum arrSts, String inqryStartDt, String inqryEndDt, int pgNbr, int pgCnt) throws BizApplicationException { return _getArrDeptRelImpl().getArrListBasedOnArrStatusHistory(deptId, bizDscd, pdTpCd, pdTmpltCd, null, arrDeptRel, curArrSts, arrSts, null, inqryStartDt, inqryEndDt, pgNbr, pgCnt, false); }
TGT:
Inquire specific department own (as accounting department) arrangements of specific product hierarchy whose status changed into specific status within inquiry period and currently in another specific status.
PRED:
Inquire specific customer own (as main contractor) arrangements of specific product hierarchy whose status changed into specific status within inquiry period and currently in another specific status. Current Status / Base Status / Inquiry Period(Start Date / End Date) Approved / Applied / 1/1 ~ 3/1 : Get arrangement applied within 1/1 ~ 3/1 and approved currently. Arrangement whose status was changed into other status on 1/1 is not inquired. Active / Applied / 1/1 ~ 3/1 : Get arrangement applied within 1/1
test 샘플별 bleu-4:  25.25
========================================================================================================================
SRC:
public CustDocRelChngSvcSrchIn clone(){ try{ CustDocRelChngSvcSrchIn object= (CustDocRelChngSvcSrchIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CndVal getComplexCndValue(List<CmpsCnd> cmpsCndList) throws BizApplicationException { if (!isComplexCnd()) { throw new BizApplicationException("AAPPDE0003", null); } CndVal cndVal = null; // Set the composing condition value to input DTO // 입력된 구성조건값을 입력DTO에 set함 PdPdCndUnitComplexSearchIn inDaoS010 = _setPdPdCndUnitComplexSearchIn(); inDaoS010.setTierNbr(getComplexCndStructureInfo(cmpsCndList).getTierNbr()); if (isListCnd()) { // 복합목록조건값 조회 cndVal = _getComplexListCndValue(inDaoS010); } else if (isRngCnd()) { // 복합범위조건값 조회 cndVal = _getComplexRangeCndValue(inDaoS010); } /* * else if (isIntCnd()) { // 복합금리조건값 조회 cndVal = * _getComplexInterestCndValue(inDaoS010); * * } else if (isFeeCnd()) { // 복합수수료조건값 조회 cndVal = * _getComplexFeeCndValue(inDaoS010); } */ // Return output return cndVal; }
TGT:
This method inquire preferential interest rate complex condition value by the value of the composing condition and the value of the provide condition.
PRED:
This method inquire preferential interest rate complex condition value by the value of the composing condition and the value of the provide condition.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public static boolean isValid(String value){ for (AprvlRsltEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isValid(String type) { return ( "O".equalsIgnoreCase(type) || "B".equalsIgnoreCase(type) ) ; //added by Roh(change to simplify) }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  16.68
========================================================================================================================
SRC:
public List<ArrReal> getListCustOwnArrRealActiveOnBaseDt(String custId,String baseDt) throws BizApplicationException { return _getArrXtnUtil().convertArrRealList(super.getCustOwnArrRealCoreListActiveOnBaseDt(custId, baseDt)); }
TGT:
Inquire a list of customer own (as main contractor) arrangements which was in "Active" status on specific date. (Paging)
PRED:
Inquire a list of customer own (as main contractor) arrangements which was in "Active" status on specific date.
test 샘플별 bleu-4:  94.6
========================================================================================================================
SRC:
public List<XtnCdIO> getListCode(String cdNbr, Map<String, Object> supplInfoVal) throws BizApplicationException { List<CaCaDstbSrvrMIO> svDstbSrvrMList = _getSvDstbSrvrMDso().selectSrvrCdList(); List<XtnCdIO> xtnCdIOs = new ArrayList<XtnCdIO>(); if( svDstbSrvrMList == null || svDstbSrvrMList.isEmpty() ) return xtnCdIOs; for(CaCaDstbSrvrMIO out : svDstbSrvrMList) { XtnCdIO xtnCdIO = new XtnCdIO(); xtnCdIO.setCd(out.getDstbSrvrId()); xtnCdIO.setCdNm(out.getDstbSrvrId() + " " + out.getDstbSrvrNm()); xtnCdIOs.add(xtnCdIO); } return xtnCdIOs; }
TGT:
This method returns the list of code corresponding to the search condition
PRED:
It make the combo-box of Code that meet the search condition. Combo-box is consisted of CaCmnCdCheckOut. (cdNbr, cd, cdNm, delYn, cdAbrvtnNm)
test 샘플별 bleu-4:  8.69
========================================================================================================================
SRC:
public ArrXtnSvcGetChngListOut clone(){ try{ ArrXtnSvcGetChngListOut object= (ArrXtnSvcGetChngListOut)super.clone(); if ( this.tblNm== null ) object.tblNm = null; else{ java.util.List<bankware.corebanking.arrangementservice.amend.service.dto.ArrXtnSvcGetChngOut> clonedList = new java.util.ArrayList<bankware.corebanking.arrangementservice.amend.service.dto.ArrXtnSvcGetChngOut>(tblNm.size()); for( bankware.corebanking.arrangementservice.amend.service.dto.ArrXtnSvcGetChngOut item : tblNm ){ clonedList.add( (bankware.corebanking.arrangementservice.amend.service.dto.ArrXtnSvcGetChngOut)item.clone()); } object.tblNm = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaTaxRtCdMgmtSvcGetTaxRateCodeListOut clone(){ try{ CaTaxRtCdMgmtSvcGetTaxRateCodeListOut object= (CaTaxRtCdMgmtSvcGetTaxRateCodeListOut)super.clone(); if ( this.taxRtList== null ) object.taxRtList = null; else{ java.util.List<bankware.corebanking.configurationadmin.code.service.dto.CaTaxRtCdMgmtSvcGetTaxRateCodeListSubOut> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.code.service.dto.CaTaxRtCdMgmtSvcGetTaxRateCodeListSubOut>(taxRtList.size()); for( bankware.corebanking.configurationadmin.code.service.dto.CaTaxRtCdMgmtSvcGetTaxRateCodeListSubOut item : taxRtList ){ clonedList.add( (bankware.corebanking.configurationadmin.code.service.dto.CaTaxRtCdMgmtSvcGetTaxRateCodeListSubOut)item.clone()); } object.taxRtList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean deleteTransferLanguage(String trnsfrKnd, String lngCd, String trnsfrOriginKeyVal) throws BizApplicationException { if (_getCmMltLngTrnsltnDDso().getLanguageTable(trnsfrKnd, lngCd, trnsfrOriginKeyVal) == null) { return false; } CaCmMltLngTrnsltnDIO cmMltLngTrnsltnDIO = new CaCmMltLngTrnsltnDIO(); _getCmnContextCore().setHeaderColumn(cmMltLngTrnsltnDIO); cmMltLngTrnsltnDIO.setTrnsfrKndCd(trnsfrKnd); cmMltLngTrnsltnDIO.setTrnsfrOriginKeyVal(trnsfrOriginKeyVal); cmMltLngTrnsltnDIO.setLngCd(lngCd); cmMltLngTrnsltnDIO.setLastChngId(_getCmnContextCore().getStaffId()); cmMltLngTrnsltnDIO.setActvStsCd(CaActiveStatusEnum.INACTIVITY.getValue()); cmMltLngTrnsltnDIO.setSiteLbrtryDscd(_getInstParmProvider().getInstParm(CaInstParamEnum.SITE_LABORATORY_DISTINCTION_CODE.getValue() )); _getCmMltLngTrnsltnDDso().updateActvStsCd(cmMltLngTrnsltnDIO); return true; }
TGT:
Delete language transfer retrieved from the Translate origin key value.
PRED:
Delete language transfer retrieved from the Transfer Kind, Translate origin key value.
test 샘플별 bleu-4:  67.03
========================================================================================================================
SRC:
public String getSubInfo(PrtnrCore prtnrCore, String xtnAtrbtNm) throws BizApplicationException { return _getPrtnrSubInfoBiz().getSubInfo(xtnAtrbtNm, (PrtnrImpl) prtnrCore); }
TGT:
Inquire a specific subsidiary information of the asset transaction.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  67.87
========================================================================================================================
SRC:
static boolean isValid(String value){ for (ArrRelKndCoreEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void doServiceAction(String arrSrvcTpCd, ArrCndActionRequiredValue arrCndActionRequiredValue) throws BizApplicationException { ArrSrvcEnum arrSrvcType = ArrSrvcEnum.getEnum(arrSrvcTpCd); if (arrSrvcType == null) { // It is an error of Arrangement Service Type Code // 계약서비스유형코드 오류입니다. throw new BizApplicationException("AAPARE0579"); } switch (arrSrvcType) { case GAIN_MISCELLANEOUS_REVENUE: _doServiceAction(arrSrvcTpCd, arrCndActionRequiredValue); break; default: // there are no condition action for this condition ({0},{1}) on arrangement service ({2}) // 계약서비스 ({2})를 위한 조건 ({0},{1})의 행동은 유효하지 않습니다 throw new BizApplicationException("AAPARE0288" , new Object[]{this.getCndCd(),this.getCndCdNm(),arrSrvcTpCd}); } }
TGT:
Process the special condition related actions for input service according to product condition value or negotiated value. For example, the "Required document" condition has the product required document type for loan application service. The arrangement condition action validate the required document type is received (presented) or not. Another example is the deposit open service, "Interest capitalization YN" condition dose the action to make an interest capitalization arrangement plan on next planed date. This method performs the function of performing product condition management rule registered on system. Implementation of condition management rule : - The rules that should be processed in
PRED:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
test 샘플별 bleu-4:  15.44
========================================================================================================================
SRC:
static Object getBean(String arg0) throws NestedRuntimeException { return LApplicationContext.getCurrentApplicationContext().getBean(arg0); }
TGT:
get bean
PRED:
get bean
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaArrArrRelPdRuleMgmtSvcGetArrArrRelPdRuleListOut getListArrArrRelPdRule(CaArrArrRelPdRuleMgmtSvcArrArrRelPdRuleIn in) throws BizApplicationException { CaArrArrRelPdRuleMgmtSvcGetArrArrRelPdRuleListOut out = new CaArrArrRelPdRuleMgmtSvcGetArrArrRelPdRuleListOut(); List<CaArrArrRelPdRuleMgmtSvcGetArrArrRelPdRuleDtl> arrArrRelPdRuleDtl = new ArrayList<CaArrArrRelPdRuleMgmtSvcGetArrArrRelPdRuleDtl>(); CaArrArrRelPdRuleIO arrArrRelPdRuleListSrchKeyIn = _setArrArrRelPdRuleListSearchKeyIn(in); List<CaArrArrRelPdRuleIO> ruleList = _getArrArrRelPdRuleMgmt().getListArrArrRelPdRule(arrArrRelPdRuleListSrchKeyIn); for (CaArrArrRelPdRuleIO rule : ruleList) { arrArrRelPdRuleDtl.add(_setArrArrRelPdRuleMgmtSvcArrArrRelPdRuleDtl(rule)); } out.setTblList(arrArrRelPdRuleDtl); return out; }
TGT:
Get the list of rules about arrangement arrangement relation and product.
PRED:
Get the list of rules about arrangement arrangement relation and product.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void terminate(InsrncStsChngIn in) throws BizApplicationException { super.terminate(in); }
TGT:
terminate assessment status
PRED:
Change status of arrangement issued media into "Terminated".
test 샘플별 bleu-4:  16.04
========================================================================================================================
SRC:
public static boolean isValid(String value) { for (BaseIntRtAplyTmCoreEnum enumObject : values()) { if (enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(Map<String, String> subInfoMap, ArrTxImpl arrTx) { // 1. 입력으로 받은 Map이 비여 있거나 null일 때 , null 체크하는 이유는 CTI, EAV분리하는 메소드에서 없으면 null return하고 있음. if(subInfoMap==null || subInfoMap.isEmpty()) { return; } // 속성값 검증 _getAtrbtChk().checkStandardAttributeMap(subInfoMap); // 2. 거래관련 보조명세 조회(캐시로부터) IValueObject oldCache = getSubInfoCache(arrTx); // 4. DB 반영 if(oldCache == null) { // 4.1.1 DBIO VO 인스턴스 생성 oldCache = _newSubInfoDBIO(arrTx); // 4.1.2 primary key 조립 _setKey(oldCache,arrTx); // 4.1.3 보조정보Map-> DBIO VO값 채우기 DtoUtils.setSubInfoIO(subInfoMap, oldCache); // 4.1.4 캐싱된 보조명세 정보가 없으면 최초 저장, 즉 insert _insertSubInfo(arrTx, oldCache); // 4.1.5 arrTx.set
TGT:
Save an appraisal subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> subInfoMap, StStlmntCalcnSIO stStlmntCalcnSIOIn) { logger.debug("##<ST-StlmntCalcnSubInfoBiz> saveMapSubInfo"); if(subInfoMap==null || subInfoMap.isEmpty()) { return; } // 1.create a new instance of I/F VO //IValueObject subInfoIfVo = new StlmntCalcnSubInfo(); // 2.create a new instance of DBIO VO StStlmntCalcnSIO stStlmntCalcnSIO = new StStlmntCalcnSIO(); // 3.set primary key _setKey(stStlmntCalcnSIO, stStlmntCalcnSIOIn); // 4.convert map to DBIO VO DtoUtils.setSubInfoIO(subInfoMap, stStlmntCalcnSIO); // 5.insert subsidiary detail _insertSubInfo(stStlmntCalcnSIO); }
TGT:
Save the appraisal subsidiary information using map.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  6.11
========================================================================================================================
SRC:
public int delete(String instCd, String tblNm, String xtnAtrbtNm) { super.clearCache(DataCacheCoreConfig.COMMON_TABLE_XTN_ATTRIBUTE_SELECT_CACHE); return _getCmTblXtnAtrD().delete(instCd, tblNm, xtnAtrbtNm); }
TGT:
It removes document information.
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  15.62
========================================================================================================================
SRC:
public String getSubInfo(PrtnrCore prtnrCore, String xtnAtrbtNm) throws BizApplicationException { return _getPrtnrSubInfoBiz().getSubInfo(xtnAtrbtNm, (PrtnrImpl) prtnrCore); }
TGT:
This method provides to inquire the specific subsidiary information named 'xtnAtrbtNm'.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  22.45
========================================================================================================================
SRC:
public List<XtnCdIO> getListCode(String cdNbr, Map<String, Object> supplInfoVal) throws BizApplicationException { List<XtnCdIO> xtnCdIOs = new ArrayList<XtnCdIO>(); String lngCd = supplInfoVal == null ? null : String.valueOf(supplInfoVal.get(InstParamEnum.LANGUAGE_CODE.getValue())); String instCd = supplInfoVal == null ? null : String.valueOf(supplInfoVal.get(InstParamEnum.INSTITUTION_CODE.getValue())); if (StringCoreUtils.isEmpty(cdNbr)) { throw new BizApplicationException("AAPCME0006", new Object[] { "@cdNbr" }); } if (StringCoreUtils.isEmpty(lngCd)) { throw new BizApplicationException("AAPCME0006", new Object[] { "@lngCd" }); } /* * 기관별로 통화코드를 조회 한다. * (AS-IS)통화코드 조회시 기관별통화코드가 존재 하면 해당 list return * (AS-IS)존재 하지 않으면 STDA return * (TO-BE)#20254 통화코드는 기관데이터만 참조(표준기관의 통화코드 참조하지 않는다.) 2020.11.16 */ List<CmCrncyCdMIO> cmCrncyCdIOs = _getCmCrncyCdDso().selectList(instCd); // //(TO
TGT:
This method returns the list of code corresponding to the search condition
PRED:
It make the combo-box of Code that meet the search condition. Combo-box is consisted of CaCmnCdCheckOut. (cdNbr, cd, cdNm, delYn, cdAbrvtnNm)
test 샘플별 bleu-4:  8.69
========================================================================================================================
SRC:
public ScrtyIntMngrSvcSaveOut openScrtyInt(ScrtyIntMngrSvcSaveIn in)throws BizApplicationException { /** * service validation */ _serviceValidate(in); if(_isScrtyIntOpnTx(in.getScrtyIntId())){ return _openScrtyInt(in); } else{ return _modifyScrtyInt(in); } } /** * <div class='en'> * @description * <pre> * This service supplies to inquire information of security interest. * </pre> * @flow * <pre> * 1. get security interest by security interest identification * 2. get basic information of security interest * 3. assemble output * 3.1 assemble basic information of security interest. * 3.2 assemble extended attributes of security interest. * 3.3 assemble information of relation between collateral and security interest. * </pre> * <div class='ko'> * @description * <pre> * 이 서비스는 담보물권의 정보를 조회하는 기능을 제공한다. * </pre> * @flow * <pre> * 1. 설정식별자에 의한 설정정보 조회 * 2. 설정의 기본정보 조회 * 3. 출력값 조립 * 3.1. 설정기본정보 조립 * 3.2. 설정의 확장속성 조립 * 3.3. 설정,담보 관계정보 조립 *
TGT:
It register security interest for the asset and create and return a object to access it.
PRED:
It registers new security interest.
test 샘플별 bleu-4:  3.35
========================================================================================================================
SRC:
public WorkflowRuleMgmtSvcIO clone(){ try{ WorkflowRuleMgmtSvcIO object= (WorkflowRuleMgmtSvcIO)super.clone(); object.lastChngTmstmp = (bxm.omm.format.wrapper.DateFormattedWrapper)this.lastChngTmstmp.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getArrExtrnlIdNbr(){ return arrExtrnlIdNbr; }
TGT:
Inquire the external ID number which identified the current arrangement.
PRED:
Inquire external id number of specific type registerd to arrangement.
test 샘플별 bleu-4:  15.85
========================================================================================================================
SRC:
protected void saveUniqueBusinessBean(String arrIssmdaTpCd, String arrIssmdaInhrncId, ArrIssmdaCoreImpl arrIssmdaCoreImpl) throws BizApplicationException { ApplicationContextCoreUtils.saveUniqueBusinessBean(_getCmnContextCore().getInstCode().concat(arrIssmdaTpCd).concat(arrIssmdaInhrncId), arrIssmdaCoreImpl); }
TGT:
save unique business bean in one transaction
PRED:
save unique business bean in one transaction
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public java.lang.String getTxStaffId(){ return txStaffId; }
TGT:
This method inquires a staff identification of the transaction.
PRED:
Inquire the transaction staff ID of this asset transaction.
test 샘플별 bleu-4:  17.75
========================================================================================================================
SRC:
public CustRprsnChngSvcDeleteLoinInfoIn clone(){ try{ CustRprsnChngSvcDeleteLoinInfoIn object= (CustRprsnChngSvcDeleteLoinInfoIn)super.clone(); if ( this.loinIdNbrList== null ) object.loinIdNbrList = null; else{ java.util.List<bankware.corebanking.customer.security.service.dto.CustRprsnChngSvcDeleteLoinInfoInSub> clonedList = new java.util.ArrayList<bankware.corebanking.customer.security.service.dto.CustRprsnChngSvcDeleteLoinInfoInSub>(loinIdNbrList.size()); for( bankware.corebanking.customer.security.service.dto.CustRprsnChngSvcDeleteLoinInfoInSub item : loinIdNbrList ){ clonedList.add( (bankware.corebanking.customer.security.service.dto.CustRprsnChngSvcDeleteLoinInfoInSub)item.clone()); } object.loinIdNbrList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public int getBalanceVerificationTotalCount(BalVrfctnSrchIn in) throws BizApplicationException { if (BalVrfctnRsltQryDscdEnum.ALL.getValue().equals(in.getBalVrfctnInqryDscd())){ //return _getAcBalVrfctnSmtnDDso().selectBalVrfctnAllTotalCount(_setAcBalVrfctnSmtnDIO(in)); return _getAcBalVrfctnSmtnDDso().selectListBalVrfctnRsltTotalCnt(_setAcBalVrfctnSmtnDIO(in)); } else{ return _getAcBalVrfctnSmtnDDso().selectBalVrfctnWithDifferenceTotalCount(_setAcBalVrfctnSmtnDIO(in)); } }
TGT:
It is for getting the count of balance cross-check data to compare the balances from the settlement component with the balances from the general ledger for each account title. If balance verification inquiry distinction code is 1, then all count of balance verification result will be queried, or the balance verification inquiry distinction code is 2, then difference count will be queried.
PRED:
It inquires the total count of balance verification result.
test 샘플별 bleu-4:  0.12
========================================================================================================================
SRC:
public CaArrIssmdaTmpltMgmtSvcGetTmpltInfoOut clone(){ try{ CaArrIssmdaTmpltMgmtSvcGetTmpltInfoOut object= (CaArrIssmdaTmpltMgmtSvcGetTmpltInfoOut)super.clone(); if ( this.prflAtrbtList== null ) object.prflAtrbtList = null; else{ java.util.List<bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrIssmdaPrflAtrbtInfo> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrIssmdaPrflAtrbtInfo>(prflAtrbtList.size()); for( bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrIssmdaPrflAtrbtInfo item : prflAtrbtList ){ clonedList.add( (bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrIssmdaPrflAtrbtInfo)item.clone()); } object.prflAtrbtList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(CustTxImpl custTxImpl) throws BizApplicationException { Map<String, String> subInfoMap = new HashMap<String, String>(); // 1. 보조명세 캐시 조회 AtCustTxSIO subInfo = getSubInfoCache(custTxImpl); // 2. 보조명세 캐시가 null인 경우, 빈 Map 리턴 if (subInfo == null) { return subInfoMap; } // 3. 보조명세 캐시를 Map으로 convert for (Entry<String, Object> entry : subInfo.getFieldValues().entrySet()) { // Casting 시 Null 방지 if (entry.getValue() != null) { subInfoMap.put(entry.getKey(), String.valueOf(entry.getValue())); } } return subInfoMap; }
TGT:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<CaTblXtnAtrbtOut> getTableExtendAttribute(String instCd, String tblNm) throws BizApplicationException { return this.getTableExtendAttribute(instCd, tblNm, CaXtnAtrbtVrtnCmpsEnum.NA, null); }
TGT:
Query table extend attribute list by input condition(cmnContext institution) basic method reference : {@link TblXtnAtrbtCore getTableExtendAttribute(String, String, XtnAtrbtVrtnCmpsEnum, Map<String, String>)}
PRED:
Query table extend attribute list by no condition basic method reference : {@link TblXtnAtrbtCore getTableExtendAttribute(String, String, XtnAtrbtVrtnCmpsEnum, Map<String, String>)}
test 샘플별 bleu-4:  76.2
========================================================================================================================
SRC:
public static boolean isValid(String value){ for (ArrInternalKndEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Long selectIncompletionNumberingCnt(String instCd, String acctgPrcsDt) { return _getAcAcctgLDfrdDso().selectIncompletionNumberingCnt(instCd, acctgPrcsDt); }
TGT:
This class returns the number of unprocessed data (janz_prcs_yn = 'N') currently not numbered.
PRED:
This class returns the number of unprocessed data (janz_prcs_yn = 'N') currently not numbered.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> assetTxSubInfoMap, AssetTxCore assetTx) throws BizApplicationException { _getAssetTxSubInfoBiz().saveMapSubInfo(assetTxSubInfoMap, (AssetTxImpl) assetTx); }
TGT:
This method save settlement subsidiary calculation detail information using subInfoMap
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public List<TblXtnAtrbtOut> getTableExtendAttribute(String instCd, String tblNm, XtnAtrbtVrtnCmpsEnum xtnAtrbtVrtnCmpsCd, Map<String, String> mapCnd) throws BizApplicationException { // Check input if (StringCoreUtils.isEmpty(instCd)) { // {0} is mandatory input item. throw new BizApplicationException("AAPCME0006", new Object[] { "@instCd" }); } if (StringCoreUtils.isEmpty(tblNm)) { // {0} is mandatory input item. throw new BizApplicationException("AAPCME0006", new Object[] { "@tblNm" }); } if (xtnAtrbtVrtnCmpsCd == null || StringCoreUtils.isEmpty(xtnAtrbtVrtnCmpsCd.getValue())) { // {0} is mandatory input item. throw new BizApplicationException("AAPCME0006", new Object[] { "@xtnAtrbtVrtnCmpsCd" }); } if (!XtnAtrbtVrtnCmpsEnum.NA.equals(xtnAtrbtVrtnCmpsCd) && !XtnAtrbtVrtnCmpsEnum.ALL.equals(xtnAtrbtVrtnCmpsCd) && (mapCnd == null || mapCnd.isEmpty())) { // {0} is mandatory input item. throw new BizApplicationException("AAPCME0006", new Object[] { "@xtnAtrbtVrtnCmpsCd" }); } List<TblXtnAtrbtOut> out = new ArrayList<TblXtnAtrbtOut>(); List<String> itmList = new ArrayList<String>(); // Set condition if (XtnAtrbtVrtnCmpsEnum.ALL.equals(xtnAtrbtVrtnCmpsCd)) { // skip; } else if (XtnAtrbtVrtnCmpsEnum.NA.equals(xtnAtrbtVrtnCmpsCd)) { itmList.add(" "); } else if (XtnAtrbtVrtnCmpsEnum.PD_CD.equals(xtn
TGT:
Query table extend attribute list by input condition
PRED:
Query table extend attribute list by no condition basic method reference : {@link CaTblXtnAtrbtMgmt getTableExtendAttribute(String, String, CaXtnAtrbtVrtnCmpsEnum, Map<String, String>)}
test 샘플별 bleu-4:  30.14
========================================================================================================================
SRC:
public Integer getCustCountOverview(String actorTpCd, String actorNm, String loinIdNbr, String actorUnqIdNbr, String actorNmTpCd, String actorUnqIdNbrTpCd) throws BizApplicationException { //check required inputs if (StringUtils.isEmpty(actorNmTpCd)) { throw new BizApplicationException("AAPCME0006", new String[] {"@actorNmTpCd"}); } else if (StringUtils.isEmpty(actorUnqIdNbrTpCd)) { throw new BizApplicationException("AAPCME0006", new String[] {"@actorUnqIdNbrTpCd"}); } return _getCustBsicXtnBiz().getCustOverviewCount(_getCmnContext().getInstCode(), actorTpCd, actorNm, loinIdNbr, actorUnqIdNbr, actorNmTpCd, actorUnqIdNbrTpCd); }
TGT:
Inquire customer count that matches the input actor type, actor name, actor unique identification number, login information, page number and count. It inquires the effective actor name, unique identification number and login information on transaction date.
PRED:
Inquire customer count that matches the input actor type, actor name, actor unique identification number, login information, page number and count. It inquires the effective actor name, unique identification number and login information on transaction date.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void close() throws ItemStreamException { if (logger.isDebugEnabled()) logger.debug("ArrExtendAttributeReMakeTargetReader close"); DasUtils.disconnectDasExecutor(iterator); }
TGT:
It closes the customer related person by updating delYn of basic information to 'Y'.
PRED:
It closes the customer related person by updating delYn of basic information to 'Y'.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(InsrncCore insrncCore) throws BizApplicationException { return _getInsrncSubInfoBiz().getMapSubInfo((InsrncImpl)insrncCore); }
TGT:
This method provides the function for inquiring all of subsidiary information about transaction as MAP type.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  14.25
========================================================================================================================
SRC:
public SvcEntryIn clone(){ try{ SvcEntryIn object= (SvcEntryIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<CaInstSrvcIO> getListInstService(String instCd, String cmpntCd) throws BizApplicationException { return getListInstService(instCd, cmpntCd, null); }
TGT:
inquiry institution service list
PRED:
inquiry institution service list by institution code of cmnContext (all service list) basic method reference : {@link #getListInstService(String, String, String)}
test 샘플별 bleu-4:  17.0
========================================================================================================================
SRC:
static boolean isValid(String value) { for (ProductPassbookTypeEnum enumObject : values()) { if (enumObject.getValue().equals(value)) { return true; } } // Return Output return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, InsrncCore insrncCore, String txDt, Integer txSeqNbr) throws BizApplicationException { _getInsrncSubInfoBiz().saveSubInfo(xtnAtrbtNm, xtnAtrbtCntnt, txDt, txSeqNbr, (InsrncImpl) insrncCore); }
TGT:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public BfInfoCntntSvcIn clone(){ try{ BfInfoCntntSvcIn object= (BfInfoCntntSvcIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public StaffTxMgmtSvcItemOut clone(){ try{ StaffTxMgmtSvcItemOut object= (StaffTxMgmtSvcItemOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(ActorCore actorCore, String ctcptId, int ctcptChngSeqNbr) throws BizApplicationException { return _getActorCtcptSubInfoBiz().getMapSubInfo((ActorImpl) actorCore, ctcptId, ctcptChngSeqNbr); }
TGT:
Inquire all subsidiary information of the insurance as a map.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  18.85
========================================================================================================================
SRC:
public boolean isActive() throws BizApplicationException { if (ArrStsEnum.ACTIVE_TERMINATED.getValue().equals(getArrStsCd()) && !StringUtils.isEmpty(getArrMtrtyDt())) { return getArrMtrtyDt().compareTo(_getCmnContext().getTxDate()) > 0; } return this.getArrStsCd().equals(ArrStsEnum.ACTIVE.getValue()); }
TGT:
It checks if the staff's status is 'active'.
PRED:
It checks if the customer's customer status is active. It returns true if active, return false if customer status doesn't exist or it is not active.
test 샘플별 bleu-4:  14.94
========================================================================================================================
SRC:
public String getScrtyIntXtnInfo(ScrtyIntXtnInfoEnum scrtyIntXtnInfoEnum) throws BizApplicationException { // 속성명 기준으로 확장정보관리방법 판단 // 1. 확장정보명세 if(_getTblXtnAtrbt().isExtendWayEav(XtnTableEnum.AS_SCRTYINT_M.getValue(), scrtyIntXtnInfoEnum.getValue())) { return super.getScrtyIntXtnInfoByEav(scrtyIntXtnInfoEnum.getValue()); } // 2. 보조명세 else { return _getScrtyIntSubInfoBiz().getSubInfo(scrtyIntXtnInfoEnum.getValue(), this); } }
TGT:
Inquire a specific extended information of the security interest.
PRED:
Inquire a specific extended information of the security interest.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveAssetTxXtnInfo(String xtnAtrbtNm, String xtnAtrbtCntnt) throws BizApplicationException { _getAssetTxXtnInfoBiz().saveAssetTxXtnInfo(xtnAtrbtNm, xtnAtrbtCntnt, this, false); }
TGT:
Save a specific extended information of the asset transaction.
PRED:
Save a specific extended information of the asset transaction.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaStaffInqrySvcGetStaffTreeListOut clone(){ try{ CaStaffInqrySvcGetStaffTreeListOut object= (CaStaffInqrySvcGetStaffTreeListOut)super.clone(); if ( this.staffTree== null ) object.staffTree = null; else{ java.util.List<bankware.corebanking.configurationadmin.actor.service.dto.CaStaffInqrySvcGetStaffTreeOut> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.actor.service.dto.CaStaffInqrySvcGetStaffTreeOut>(staffTree.size()); for( bankware.corebanking.configurationadmin.actor.service.dto.CaStaffInqrySvcGetStaffTreeOut item : staffTree ){ clonedList.add( (bankware.corebanking.configurationadmin.actor.service.dto.CaStaffInqrySvcGetStaffTreeOut)item.clone()); } object.staffTree = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaSrvcMgmtSvcChngListIn clone(){ try{ CaSrvcMgmtSvcChngListIn object= (CaSrvcMgmtSvcChngListIn)super.clone(); if ( this.tblNm== null ) object.tblNm = null; else{ java.util.List<bankware.corebanking.configurationadmin.service.service.dto.CaSrvcMgmtSvcChngIn> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.service.service.dto.CaSrvcMgmtSvcChngIn>(tblNm.size()); for( bankware.corebanking.configurationadmin.service.service.dto.CaSrvcMgmtSvcChngIn item : tblNm ){ clonedList.add( (bankware.corebanking.configurationadmin.service.service.dto.CaSrvcMgmtSvcChngIn)item.clone()); } object.tblNm = clonedList; } if ( this.saveList== null ) object.saveList = null; else{ java.util.List<bankware.corebanking.configurationadmin.service.service.dto.CaSrvcMgmtSvcChngIn> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.service.service.dto.CaSrvcMgmtSvcChngIn>(saveList.size()); for( bankware.corebanking.configurationadmin.service.service.dto.CaSrvcMgmtSvcChngIn item : saveList ){ clonedList.add( (bankware.corebanking.configurationadmin.service.service.dto.CaSrvcMgmtSvcChngIn)item.clone()); } object.saveList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrPlanIO> getArrPlans(String arrSrvcCd, String exctnPlnDt) throws BizApplicationException { return _getArrRealCoreFundamentalAgent().getArrPlans(arrSrvcCd, exctnPlnDt, this); }
TGT:
Inquire the full list of active plans registered in the contract
PRED:
Inquire arrangement plans which is currently in "ACTIVE" status with arrangement service type ENUM.
test 샘플별 bleu-4:  10.51
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(StStlmntCalcnSIO stStlmntCalcnSIOIn){ logger.debug("##<ST-StlmntCalcnSubInfoBiz> getMapSubInfo"); Map<String, String> subInfoMap = new HashMap<String, String>(); // 1.I/F VO 생성 StlmntCalcnSubInfo subInfoIntrfcIO = new StlmntCalcnSubInfo (); // 2.DBIO VO 신규 StStlmntCalcnSIO stlmntCalcnSIO = new StStlmntCalcnSIO(); // 3.DB 조회 //selectList DSO의 Key: 계산근기의 상세일련번호까지의 키값을 이용하여 계산근기 보조명세를 검색시 사용 StStlmntCalcnSIO stStlmntCalcnS = _getStlmntCalcnSDso().select(stStlmntCalcnSIOIn); if(stStlmntCalcnS == null) { return null; } // 4.DBIO VO 를 I/F VO로 변환 DtoUtils.setSubInfoIO(stStlmntCalcnS, subInfoIntrfcIO); // 5.I/F VO를 MAP으로 변환 for(Entry<String,Object> entry : subInfoIntrfcIO.getFieldValues().entrySet()) { if(entry.getValue()!=null) { subInfoMap.put(entry.getKey(), String.valueOf(entry.getValue())); } } return subInfoMap; }
TGT:
Inquire all subsidiary information of the asset thing as a map.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  17.06
========================================================================================================================
SRC:
public List<ArrPlanIO> getArrPlans(String arrSrvcCd,String nxtExctnPlnDt, ArrRealCoreImpl arrReal) throws BizApplicationException { return _getArrPlanImpl().getArrPlans(arrSrvcCd,nxtExctnPlnDt,ArrPlnStsCoreEnum.ACTIVE.getValue(),arrReal); }
TGT:
Inquire arrangement active plans on specified date with arrangement service type code It inquire that only the status is 'Active'.
PRED:
Inquire arrangement plans which is currently in "ACTIVE" status with arrangement service type ENUM.
test 샘플별 bleu-4:  20.15
========================================================================================================================
SRC:
public LnAplctnInfoQrySvcDocInfoOut clone(){ try{ LnAplctnInfoQrySvcDocInfoOut object= (LnAplctnInfoQrySvcDocInfoOut)super.clone(); if ( this.xtnAtrbtList== null ) object.xtnAtrbtList = null; else{ java.util.List<bankware.corebanking.underexamination.consultationapplication.service.dto.LnAplctnDocInfoQrySvcDocXtnAtrbtIO> clonedList = new java.util.ArrayList<bankware.corebanking.underexamination.consultationapplication.service.dto.LnAplctnDocInfoQrySvcDocXtnAtrbtIO>(xtnAtrbtList.size()); for( bankware.corebanking.underexamination.consultationapplication.service.dto.LnAplctnDocInfoQrySvcDocXtnAtrbtIO item : xtnAtrbtList ){ clonedList.add( (bankware.corebanking.underexamination.consultationapplication.service.dto.LnAplctnDocInfoQrySvcDocXtnAtrbtIO)item.clone()); } object.xtnAtrbtList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean checkCode(CdNbrInfoIO in, String cd) throws BizApplicationException { CdD cdDImpl = _getCdDImpl(in); return cdDImpl.checkCode(in, cd); }
TGT:
It check code number & code value. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter
PRED:
It check code number & code value by cdDtlIO DTO. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter.
test 샘플별 bleu-4:  79.75
========================================================================================================================
SRC:
public List<StStlmntXtnInfoDIO> getListStlmntXtnInfo(StStlmntXtnInfoDIO stStlmntXtnInfoDIO) throws BizApplicationException { logger.debug("StlmntCoreImpl==>getListStlmntXtnInfo : stStlmntXtnInfoDIO: {}", stStlmntXtnInfoDIO); return _getStlmntXtnInfoBiz().getListStlmntXtnInfo(stStlmntXtnInfoDIO); }
TGT:
This method provide settlement extended information list (using Key to detail sequence number).
PRED:
This method provide settlement extended information list (using Key to detail sequence number).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<StaffSrchOut> getListPrtnrStaffInfoByName(String instCd, String actorName, String actorNmTpCd, String prtnrActorId, String prtnrDtlTpCd) throws BizApplicationException { //check required inputs if (StringUtils.isEmpty(instCd)) { throw new BizApplicationException("AAPCME0006", new String[] {"@instCd"}); } if (StringUtils.isEmpty(actorNmTpCd)) { throw new BizApplicationException("AAPCME0006", new String[] {"@actorNmTpCd"}); } if (CCM01.NO.equals(_getInstParmProvider().getInstParm(instCd, InstParamEnum.STAFF_PARAM_ACTOR_INFORM_USE_YN.getValue()))) { return _getStaffBsicXtnBiz().getListPartnerStaffByName(instCd, actorName, prtnrActorId, prtnrDtlTpCd); } return _setStaffSrchOutList(_getActorNmXtn().getListPartnerStaffByName(instCd, actorName, actorNmTpCd, prtnrActorId, prtnrDtlTpCd)); }
TGT:
Inquire partner's staff information list by actor name.
PRED:
Inquire partner's staff information list by actor name.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isTableAttributeValid(String xtnTblNm, String xtnAtrbtNm, String atrbtCntnt) throws BizApplicationException { if(!_checkAttributeBase(xtnTblNm, xtnAtrbtNm, atrbtCntnt)) { return false; } CaCmTblXtnAtrVrtnCmpsDIO cmTblXtnAtrVrtnCmpsDIO = _getCmTblXtnAtrVrtnCmpsDDso().selectXtnAtrbtVrtnCmpsCd(_getCmnContextCore().getInstCode(), xtnTblNm, xtnAtrbtNm); if(cmTblXtnAtrVrtnCmpsDIO == null || "".equals(cmTblXtnAtrVrtnCmpsDIO.getXtnAtrbtVrtnCmpsCd())) { // 기관에 데이터가 없을시 STDA 기관으로 재조회 하여 검증 한다. cmTblXtnAtrVrtnCmpsDIO = new CaCmTblXtnAtrVrtnCmpsDIO(); cmTblXtnAtrVrtnCmpsDIO = _getCmTblXtnAtrVrtnCmpsDDso().selectXtnAtrbtVrtnCmpsCd(_getCmnContextCore().getStandardInstCode(), xtnTblNm, xtnAtrbtNm); if(cmTblXtnAtrVrtnCmpsDIO != null && CaXtnAtrbtVrtnCmpsEnum.NA.getValue().equals(cmTblXtnAtrVrtnCmpsDIO.getXtnAtrbtVrtnCmpsCd())) { return true; } } else if(CaXtnAtrbtVrtnCmpsEnum.NA.getValue().equals(cmTblXtnAtrVrtnCmpsDIO.getXtnAtrbtVrtn
TGT:
Validate Table Extension Attribute Effectiveness
PRED:
Validate extend attribute validation Not product.
test 샘플별 bleu-4:  22.09
========================================================================================================================
SRC:
public List<ArrInternal> getListArrInternal(String pdCd) throws BizApplicationException { return _getArrPdRelImpl().getInternalArr(pdCd); }
TGT:
This method inquire the internal arrangement list in which the state of the arrangement reaches a certain state by the product template.
PRED:
This method inquire active arrangements which belongs to the internal management product.
test 샘플별 bleu-4:  10.39
========================================================================================================================
SRC:
public List<CaTblXtnAtrbtOut> getTableExtendAttribute(String instCd, String tblNm) throws BizApplicationException { return this.getTableExtendAttribute(instCd, tblNm, CaXtnAtrbtVrtnCmpsEnum.NA, null); }
TGT:
Query table extend attribute list by no condition(cmnContext institution) basic method reference : {@link TblXtnAtrbtCore getTableExtendAttribute(String, String, XtnAtrbtVrtnCmpsEnum, Map<String, String>)}
PRED:
Query table extend attribute list by no condition basic method reference : {@link TblXtnAtrbtCore getTableExtendAttribute(String, String, XtnAtrbtVrtnCmpsEnum, Map<String, String>)}
test 샘플별 bleu-4:  81.39
========================================================================================================================
SRC:
private BfCndTestSvcOut getInstCd(BfCndTestSvcIn in) throws BizApplicationException { // Set input BfIn bfIn = new BfIn(); bfIn.setBfCd(in.getPdCd()); bfIn.setAplyDt(in.getAplyDt()); // BF 객체생성 Bf bf = _getBfMngr().getBf(bfIn); // 조건객체 생성 BfCnd bfCnd = bf.getCnd(in.getCndCd()); String output = bfCnd.getInstCd(); BfCndTestSvcOut out = new BfCndTestSvcOut(); if (StringUtils.isEmpty(output)) { out.setChkYn(false); } else { out.setChkYn(true); out.setCntnt(output.toString()); } return out; }
TGT:
This method inquire institution code of product
PRED:
This method get financial institution code by which the arrangement is created and managed.
test 샘플별 bleu-4:  14.63
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(AssetCore asset) throws BizApplicationException { return _getAssetSubInfoBiz().getMapSubInfo((AssetImpl)asset); }
TGT:
Inquire all subsidiary information of the asset as a map.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  18.85
========================================================================================================================
SRC:
public CndVal getComplexCndValue(List<CmpsCnd> cmpsCndList) throws BizApplicationException { if (!isComplexCnd()) { throw new BizApplicationException("AAPPDE0003", null); } CndVal cndVal = null; // Set the composing condition value to input DTO // 입력된 구성조건값을 입력DTO에 set함 PdPdCndUnitComplexSearchIn inDaoS010 = _setPdPdCndUnitComplexSearchIn(); inDaoS010.setTierNbr(getComplexCndStructureInfo(cmpsCndList).getTierNbr()); if (isListCnd()) { // 복합목록조건값 조회 cndVal = _getComplexListCndValue(inDaoS010); } else if (isRngCnd()) { // 복합범위조건값 조회 cndVal = _getComplexRangeCndValue(inDaoS010); } else if (isIntCnd()) { // 복합금리조건값 조회 cndVal = _getComplexInterestCndValue(inDaoS010); } else if (isFeeCnd()) { // 복합수수료조건값 조회 cndVal = _getComplexFeeCndValue(inDaoS010); } // Return output return cndVal; }
TGT:
This method inquire complex condition value of the composing value input value.
PRED:
This method inquire preferential interest rate complex condition value by the value of the composing condition and the value of the provide condition.
test 샘플별 bleu-4:  24.24
========================================================================================================================
SRC:
public List<CaAssetRegionClIO> getListAssetRegionClassification(String instCd) throws BizApplicationException{ List<CaAssetRegionClIO> outList = new ArrayList<CaAssetRegionClIO>(); List<CaAsAssetRegionClMIO> asAssetRegionClList = new ArrayList<>(); Integer total = _AsAssetRegionClMDso().selectListCount(instCd);//82000 Integer startNbr=0; Integer pgCnt=5000; while(startNbr<total){ asAssetRegionClList.addAll(_AsAssetRegionClMDso().selectList(instCd,startNbr,pgCnt)); startNbr+=pgCnt; } for(CaAsAssetRegionClMIO item :asAssetRegionClList) { CaAssetRegionClIO assetRegionClIO = new CaAssetRegionClIO(); // Generated by code generator [[ assetRegionClIO.setAddrHrarcyCd(item.getAddrHrarcyCd()); assetRegionClIO.setAddrId(item.getAddrId()); assetRegionClIO.setAssetAddrRegionClCrtrCd(item.getAssetAddrRegionClCrtrCd()); assetRegionClIO.setAplyStartDt(item.getAplyStartDt()); assetRegionClIO.setAplyEndDt(item.getAplyEndDt()); assetRegionClIO.setAssetAddrRegionClCd(item.getAssetAddrRegionClCd()); // Generated by code generator ]] outList.add(assetRegionClIO); } return outList; } /** * <div class='en'> * @description * <pre> * It registers asset region classification for new institution. * </pre> * @seealso * @note {@link CaAssetRegionClIO} : required fields - all of them * </div> * * <div class='ko'> * @description * <pre> * 신규기관을 위해 자산 지역분류를 생성한다. * </pre> * @seealso * @note {@link CaAssetRegionClIO}
TGT:
It inquiries asset region classification information list.
PRED:
It inquires asset region classification information list.
test 샘플별 bleu-4:  70.71
========================================================================================================================
SRC:
public String getNbrgArrExternalId(String arrExtrnlIdNbrTpCd, Map<String,String> hashMap) throws BizApplicationException { return super.getNbrgArrExternalId(arrExtrnlIdNbrTpCd, hashMap); }
TGT:
Number and inquire external id number in advance to register.
PRED:
Inquire the external id number
test 샘플별 bleu-4:  18.69
========================================================================================================================
SRC:
public CaStyleSvcTextStyleTree clone(){ try{ CaStyleSvcTextStyleTree object= (CaStyleSvcTextStyleTree)super.clone(); if ( this.children== null ) object.children = null; else{ java.util.List<bankware.corebanking.configurationadmin.style.service.dto.CaStyleSvcTextStyleTree> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.style.service.dto.CaStyleSvcTextStyleTree>(children.size()); for( bankware.corebanking.configurationadmin.style.service.dto.CaStyleSvcTextStyleTree item : children ){ clonedList.add( (bankware.corebanking.configurationadmin.style.service.dto.CaStyleSvcTextStyleTree)item.clone()); } object.children = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isValidType(CaAtrbtTpEnum atrbtTp, String atrbtCntnt) throws BizApplicationException { if (logger.isDebugEnabled()) { logger.debug("atrbtTpCd={}", atrbtTp); logger.debug("atrbtCntnt={}", atrbtCntnt); } if (atrbtTp == null) { throw new BizApplicationException("AAPCME0037", new Object[] { atrbtTp }); } // Validate attribute type switch (atrbtTp) { case TEXT: // text return (StringUtils.isEmpty(atrbtCntnt)) ? false : true; case TEXT_DATE: // date return DateUtils.isValidDate(atrbtCntnt); case TEXT_NUMBER: // number return DataCheckUtils.isNumeric(atrbtCntnt); case NUMBER: // number return DataCheckUtils.isNumeric(atrbtCntnt); case TEXT_ALPHA_NUMERIC: // Alpha-Number return DataCheckUtils.isAlphaNumeric(atrbtCntnt); case YES_OR_NO: // yes or no return (CCM01.YES.equals(atrbtCntnt) || CCM01.NO.equals(atrbtCntnt)) ? true : false; case PASSWORD: // Password return DataCheckUtils.isValidPassword(atrbtCntnt); case TIMESTAMP: // timestamp return true; case JSON: // json return DataCheckUtils.isJson(atrbtCntnt); default: throw new BizApplicationException("AAPCME0037", new Object[] { atrbtTp }); } }
TGT:
Validate that the value of the input attribute matches the type of the attribute.
PRED:
Validate that the value of the input attribute matches the type of the attribute.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
private BfCndTestSvcOut getListAllCmpsCndValue(BfCndTestSvcIn in) throws BizApplicationException { // Set input BfIn bfIn = new BfIn(); bfIn.setBfCd(in.getPdCd()); bfIn.setAplyDt(in.getAplyDt()); // BF 객체생성 Bf bf = _getBfMngr().getBf(bfIn); // 조건객체 생성 BfCnd bfCnd = bf.getCnd(in.getCndCd()); List<CmpsCndOut> output = bfCnd.getListAllCmpsCndValue(); BfCndTestSvcOut out = new BfCndTestSvcOut(); if (CollectionUtils.isEmpty(output)) { out.setChkYn(false); } else { out.setChkYn(true); out.setCntnt(output.toString()); } return out; }
TGT:
This method inquire the composing condition value of all tiers of the complex condition. DataCache has been applied.
PRED:
This method inquire the composing condition value of all tiers of the complex condition. DataCache has been applied.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CashSndRcvMgmtSvcCashSndRcvListIn clone(){ try{ CashSndRcvMgmtSvcCashSndRcvListIn object= (CashSndRcvMgmtSvcCashSndRcvListIn)super.clone(); if ( this.tblNm== null ) object.tblNm = null; else{ java.util.List<bankware.corebanking.accounting.cashaccounting.service.dto.CashSndRcvMgmtSvcCashSndRcvIn> clonedList = new java.util.ArrayList<bankware.corebanking.accounting.cashaccounting.service.dto.CashSndRcvMgmtSvcCashSndRcvIn>(tblNm.size()); for( bankware.corebanking.accounting.cashaccounting.service.dto.CashSndRcvMgmtSvcCashSndRcvIn item : tblNm ){ clonedList.add( (bankware.corebanking.accounting.cashaccounting.service.dto.CashSndRcvMgmtSvcCashSndRcvIn)item.clone()); } object.tblNm = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CustRprsnChngSvcListTerminateListIn clone(){ try{ CustRprsnChngSvcListTerminateListIn object= (CustRprsnChngSvcListTerminateListIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, AsmCore asm) { _getAsmSubInfoBiz().saveSubInfo(xtnAtrbtNm, xtnAtrbtCntnt, (AsmImpl)asm); }
TGT:
Save an asset transaction subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public PdTxSrvcMgmtSvcPdInfoByCndVal clone(){ try{ PdTxSrvcMgmtSvcPdInfoByCndVal object= (PdTxSrvcMgmtSvcPdInfoByCndVal)super.clone(); if ( this.cndList== null ) object.cndList = null; else{ java.util.List<bankware.corebanking.product.service.dto.PdTxSrcMgmtSvcPdInfoByCndValSub> clonedList = new java.util.ArrayList<bankware.corebanking.product.service.dto.PdTxSrcMgmtSvcPdInfoByCndValSub>(cndList.size()); for( bankware.corebanking.product.service.dto.PdTxSrcMgmtSvcPdInfoByCndValSub item : cndList ){ clonedList.add( (bankware.corebanking.product.service.dto.PdTxSrcMgmtSvcPdInfoByCndValSub)item.clone()); } object.cndList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getXtnInfo(ArrGrpXtnInfoEnum arrGrpXtnInfoEnum) throws BizApplicationException { return super.getXtnInfo(arrGrpXtnInfoEnum.getValue()); }
TGT:
Inquire Arrangement group extend attribute.
PRED:
Inquire the extended attribute information that matches the input attribute name. If the matching extended attribute information doesn't exist, it returns null.
test 샘플별 bleu-4:  5.54
========================================================================================================================
SRC:
public List<PdCnd> getCndMultiple(List<String> cndCdList) throws BizApplicationException { // 조건코드만 입력된 경우, 상품조회기준일자를 입력하여 유효조건조회 // if the apply date was not inputed, use the product input date to // inquiry condition PdCndMltplIn in = new PdCndMltplIn(); in.setAplyStartDt(aplyDt); in.setAplyStartTm(aplyTm); in.setAplyEndDt(aplyDt); in.setAplyEndTm(aplyTm); in.setCndCdList(cndCdList); return getCndMultiple(in); }
TGT:
This Method create a list of condition objects for the list of input condition codes. condition information initialization. condition object has condition defined in benefit or common condition information.
PRED:
This Method create a list of condition objects for the list of input condition codes. condition information initialization. condition object has condition defined in product or common condition information.
test 샘플별 bleu-4:  90.96
========================================================================================================================
SRC:
public String getArrTxKnd(ArrRealCore arr) { logger.debug("=================== ArrTxCustomImpl getArrTxKnd Start=========="); if(((ArrReal)arr).isArrKindInternal()) { return ArrTxKndEnum.ARR_TX_INTERNAL.getValue(); }else if(((ArrReal)arr).isArrKindTemporary()) { return ArrTxKndEnum.ARR_TX_TEMPRARY.getValue(); }else if(arr.getPdTmpltCd().equals(PdTemplateCodeEnum.ON_DEMAND_DPST.getValue())) { return ArrTxKndEnum.ARR_TX_DEMAND.getValue(); }else { return ArrTxKndEnum.ARR_TX_NORMAL.getValue(); } }
TGT:
This method provides the function for getting the kind of transaction.
PRED:
This method provides the function for getting the kind of transaction.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getArrXtnInfo(ArrXtnInfoEnum arrXtnInfoEnum) throws BizApplicationException { // 속성명 기준으로 확장정보관리방법 판단 // 1. 확장정보명세 if (_getTblXtnAtrbt().isExtendWayEav(XtnTableEnum.AR_ARR_M.getValue(), arrXtnInfoEnum.getValue())) { return super.getArrXtnInfoByEav(arrXtnInfoEnum.getValue()); } // 2. 보조명세 else { return _getArrSubInfoBiz().getSubInfo(arrXtnInfoEnum.getValue(), this); } }
TGT:
Inquire arrangement extend information by extend attribute ENUM.
PRED:
Inquire Arrangement extend information by attribute name. Caution : - Return null if there is no extend attribute with the name - You must consult with arrangement team to use new extend attribute - Inquiry effective extend attribute : Application Resource > Attribute Mgmt. > Inst Table Extend Attribute Mgmt > Select AR on tree > Select arArrM - Cast properly if the extend attribute is number type
test 샘플별 bleu-4:  4.19
========================================================================================================================
SRC:
public List<ArrIntRt> getArrDepositInterestRate(Arrangement arr,String procsDt) throws BizApplicationException{ return getArrDepositInterestRate(arr, null, procsDt); }
TGT:
Inquire a list of deposit normal interest rate applied to the arrangement from the open date to the maturity date.
PRED:
Inquire a list of deposit normal interest rate applied to the arrangement from the open date to the maturity date.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrPsbkBkgMsg> buildMsgFormat(ArrIssmdaCore arrIssmda, String arrId, String psbkSrvcTpCd, String psbkMsgId, Map<String, Object> psbkMsgParmMap) throws BizApplicationException { /** * get arrangement */ Arr arr = _getArrMngr().getArr(arrId); /** * get configuration */ int sideCnt = 2; int row = 15; int col = 10; int length = 75; String align = "-"; Dept mgmtDept = _getDeptMngr().getDept(arr.getMgmtDeptId()); String bkgText = String.format("%-20s%-15s%-15s", mgmtDept.getDeptName(), arr.getArrOpnDt(), mgmtDept.getTelNbr()); String custName = String.format("%"+col+"s%"+align+length+"s", " ", bkgText); ArrPsbkBkgMsg psbkLine = new ArrPsbkBkgMsg(); psbkLine.setPsbkBkgSideCnt(sideCnt); psbkLine.setPsbkBkgRowCnt(row); psbkLine.setPsbkBkgCntnt(custName); List<ArrPsbkBkgMsg> psbkLineList = new ArrayList<>(); psbkLineList.add(psbkLine); return psbkLineList; }
TGT:
Build passbook message by passbook message template and input values.
PRED:
Build passbook message by passbook message template and input values.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaClTreeMgmtSvcDtlRoleIO clone(){ try{ CaClTreeMgmtSvcDtlRoleIO object= (CaClTreeMgmtSvcDtlRoleIO)super.clone(); object.lastChngTmstmp = (bxm.omm.format.wrapper.DateFormattedWrapper)this.lastChngTmstmp.clone(); if ( this.children== null ) object.children = null; else{ java.util.List<bankware.corebanking.configurationadmin.applicationcommon.service.dto.CaClTreeMgmtSvcDtlRoleIO> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.applicationcommon.service.dto.CaClTreeMgmtSvcDtlRoleIO>(children.size()); for( bankware.corebanking.configurationadmin.applicationcommon.service.dto.CaClTreeMgmtSvcDtlRoleIO item : children ){ clonedList.add( (bankware.corebanking.configurationadmin.applicationcommon.service.dto.CaClTreeMgmtSvcDtlRoleIO)item.clone()); } object.children = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public PdQrySvcGetPdIntegratedInformationPdBizCtgryRelOut clone(){ try{ PdQrySvcGetPdIntegratedInformationPdBizCtgryRelOut object= (PdQrySvcGetPdIntegratedInformationPdBizCtgryRelOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public InstMgmtSvcGetInstListOut clone(){ try{ InstMgmtSvcGetInstListOut object= (InstMgmtSvcGetInstListOut)super.clone(); if ( this.instList== null ) object.instList = null; else{ java.util.List<bankware.corebanking.common.institution.service.dto.InstMgmtSvcGetInstOut> clonedList = new java.util.ArrayList<bankware.corebanking.common.institution.service.dto.InstMgmtSvcGetInstOut>(instList.size()); for( bankware.corebanking.common.institution.service.dto.InstMgmtSvcGetInstOut item : instList ){ clonedList.add( (bankware.corebanking.common.institution.service.dto.InstMgmtSvcGetInstOut)item.clone()); } object.instList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public MkngMsgRprtngO clone(){ try{ MkngMsgRprtngO object= (MkngMsgRprtngO)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ActorSrchOut> getListCustInfoOverview(String actorTpCd, String actorNm, String loinIdNbr, String actorUnqIdNbr, String actorNmTpCd, String actorUnqIdNbrTpCd, Integer pageNum, Integer pageCount) throws BizApplicationException { //check required inputs if (StringUtils.isEmpty(actorNmTpCd)) { throw new BizApplicationException("AAPCME0006", new String[] {"@actorNmTpCd"}); } else if (StringUtils.isEmpty(actorUnqIdNbrTpCd)) { throw new BizApplicationException("AAPCME0006", new String[] {"@actorUnqIdNbrTpCd"}); } else if (pageNum == null || CCM01.ZERO.equals(pageNum)) { throw new BizApplicationException("AAPCME0006", new String[] {"@pgNbr"}); } else if (pageCount == null || CCM01.ZERO.equals(pageCount)) { throw new BizApplicationException("AAPCME0006", new String[] {"@pgCnt"}); } return _getCustBsicXtnBiz().getListCustOverview(_getCmnContext().getInstCode(), actorTpCd, actorNm, loinIdNbr, actorUnqIdNbr, actorNmTpCd, actorUnqIdNbrTpCd, pageNum, pageCount); }
TGT:
Inquire customers' information that matches the input actor type, actor name, actor unique identification number, login information, page number and count. It inquires the effective actor name, unique identification number and login information on transaction date.
PRED:
Inquire customers' information that matches the input actor type, actor name, actor unique identification number, login information, page number and count. It inquires the effective actor name, unique identification number and login information on transaction date.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArrBalAcmltAmtOut getAccumulatedAmount(String startDt, String endDt, List<BigDecimal> amtList, boolean isMinusSkip, boolean isPlusSkip) throws BizApplicationException { boolean parttnYn = false; /* * Checking partition */ if(amtList != null && !amtList.isEmpty() ) parttnYn = true; /* * Basic Input Data Validation */ if (StringCoreUtils.isEmpty(startDt)) { throw new BizApplicationException("AAPCME0006", new Object[] {"@startDt"}); } if (StringCoreUtils.isEmpty(endDt)) { throw new BizApplicationException("AAPCME0006", new Object[] {"@endDt"}); } if (startDt.compareTo(endDt) > 0) { throw new BizApplicationException("AAPSTE0180", null); // error (start date > end date) } /* * Check for avoid that (+) value and (-) value, both are exist. */ int plusCnt = 0; int mnsCnt = 0; if(parttnYn == true) { for(int i = 0; i < amtList.size() -1; i++) { if(amtList.get(i).compareTo(amtList.get(i+1)) >= 0) throw new BizApplicationException("AAPSTE0181", null); // disorder or duplication if(amtList.get(i).compareTo(BigDecimal.ZERO) > 0) { plusCnt++; }else if(amtList.get(i).compareTo(BigDecimal.ZERO) < 0) { mnsCnt++; } } if(amtList.get(amtList.size() -1).compareTo(BigDecimal.ZERO) > 0) { plusCnt++; }else if(amtList.get(amtList.size() -1).compareTo(BigDecimal.ZERO) < 0) { mnsCnt++; } } if(plusCnt > 0 && mnsCnt > 0) throw new BizApplicationException("AAPSTE0182", null); ArrBalAcmltAmtOut out = new ArrBalAcmltAmtOut(); // Initialization out.setAcmltdAmt(BigDecimal.ZERO); out.setLowLmtAcmltd
TGT:
This method inquires the accumulated amount within the period you entered.
PRED:
This method inquires accumulated amount for each amount section(amtList) you entered. It returns the accumulated amount sliced by amount section from Start date to End date. The flow of this method is as follows. 1. Basic Input Data Validation 2. Check for avoid that (+) value and (-) value, both are exist. 2-1. Period section must increase or decrease in order Case1. If period section increase, first data in amount list should be Zero. Case2. If period section decrease, last data in amount list should be Zero. 3. Calculate accumulated amount 3-1. Accumulated amount
test 샘플별 bleu-4:  3.92
========================================================================================================================
SRC:
public CaCoaMgmtSvcGetCoaListIn clone(){ try{ CaCoaMgmtSvcGetCoaListIn object= (CaCoaMgmtSvcGetCoaListIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String calculateDateWeek(String baseDt) throws BizApplicationException { // Validate date _checkDate(baseDt); // Inquiry calendar CmClndrMIO inCmClndrM = new CmClndrMIO(); inCmClndrM.setBaseDt(baseDt); _getCmnContext().setHeaderColumn(inCmClndrM); CmClndrMIO outCmClndrM = _getCmClndrMDso().select(inCmClndrM); if (outCmClndrM == null) { throw new BizApplicationException("AAPCME0004", null); } // Set result value return outCmClndrM.getDtWeekDscd(); }
TGT:
It inquiries the week name of the date.
PRED:
It inquiries the week name of the date.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Integer getTxSeqNbr(){ return txSeqNbr; }
TGT:
Inquire the transaction sequence number of this asset transaction.
PRED:
This method gets the sequence number of transaction about specific arrangement. - It gets the sequence number of transaction no transaction date about one arrangement in Core. - This function can be customized in site.
test 샘플별 bleu-4:  7.1
========================================================================================================================
SRC:
static boolean isValid(String value){ for (AmtKndDscdEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaArrCndCntrlSrvcSaveItmIn clone(){ try{ CaArrCndCntrlSrvcSaveItmIn object= (CaArrCndCntrlSrvcSaveItmIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public UeCupldRgstSvcRgstCmpltnIn clone(){ try{ UeCupldRgstSvcRgstCmpltnIn object= (UeCupldRgstSvcRgstCmpltnIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public BfSvcIn clone(){ try{ BfSvcIn object= (BfSvcIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArrTx getCancelableLastTx(ArrReal arrReal, String baseDt) throws BizApplicationException { return (ArrTx) super.getCancelableLastTxCore((ArrRealCore)arrReal, baseDt); }
TGT:
This method inquires the last transaction that can be canceled during the transaction of the contract. A cancelable transaction is what cancelable service Yn is Y in the service profile of the service pointed to by the transaction code.
PRED:
This method inquires the last transaction that can be canceled during the transaction of the contract. A cancelable transaction is what cancelable service Yn is Y in the service profile of the service pointed to by the transaction code.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
protected void register(CustImpl custImpl, AtCustLoinInfoDIO atCustLoinInfoDIO) throws BizApplicationException { AtCustMIO atCustMIO = custImpl.getCustBsicCache(); if (atCustLoinInfoDIO == null) { return; } AtCustLoinInfoDIO bfCustLoinInfoDIO = _getAtCustLoinInfoDDso().select( _getCmnContext().getInstCode(), atCustLoinInfoDIO.getLoinIdNbr(), InfoStsEnum.NORMAL.getValue(), null, _getCmnContext().getTxDate()); if (bfCustLoinInfoDIO != null) { throw new BizApplicationException("AAPATE0075", new Object[] { "@loinIdNbr" }); } int seqNbr = _getAtCustLoinInfoDDso().selectNextSeqNbr(atCustMIO.getInstCd(), atCustMIO.getCustId()); _register(atCustMIO, atCustLoinInfoDIO, seqNbr); }
TGT:
It registers the actor role parameter information list. If there is registered actor role parameter information by the same institution, throws exception.
PRED:
It registers the self authentication code information. Needs caution as the registered information performs the update transaction. It gets the first institution code in the list and query the entire contents.
test 샘플별 bleu-4:  8.35
========================================================================================================================
SRC:
public DpstIntCalculatorOut calculateInterestDailyAccrual(Arr arr, String baseDt, Map<String,String> xtdInfo) throws BizApplicationException { return _calculateInt(arr,0, null, baseDt, true, xtdInfo, InterestTransactionTypeEnum.DAILY_ACCRUAL); }
TGT:
This method calculates the daily accrual interest. The way of interest calculation by product is as follows. 1.Demand deposit product : calculate interest on the same plan as settlement case 2.Installment product : calculate maturity interest for each deposit 3.Term deposit product : calculate maturity interest on the deposit
PRED:
This method calculates the daily accrual interest on the product that is the subject of settlement. Interest calculation start date is the value of ArrXtnInfoEnum.LAST_INT_CALC_DAILY_ACCRUAL_DT, and interest calculation end date is the value of ArrXtnInfoEnum.LAST_INT_CALC_DAILY_ACCRUAL_DT
test 샘플별 bleu-4:  14.91
========================================================================================================================
SRC:
public void validate(String arrSrvcCd, ArrRealCore arrReal, CustCore cust, Map<String, Object> vldtnRequiredValMap) throws BizApplicationException { if (_getLnOvrduInfoProvider().isOverdue((ArrReal)arrReal, ArrCmnUtil.getRckngDt(_getCmnContext()))){ //Arrangement is in overdue. This service ({0}) could not be finished properly //계약이 연체상태입니다. 본서비스({0}) 실행이 불가 합니다 throw new BizApplicationException("AAPARE0295", new Object[]{_getCd().getCode(ArrSrvcEnum.cdNbr,arrSrvcCd)}); } }
TGT:
Processing rules should be commonly performed according to the rules defined in the service processing rule, based on the service type input.
PRED:
It performs common service processing rules defined in the service processing rules and whether the contract-based service is available, based on the representative service type registered to the specific service. Whether contract services are available verifies: 1) Verification of service restriction based on product information of contract. 2) Verification of restriction related to the service set in the contract such as pledge setting. 3) Perform verification rules that should be performed in common as the requirement that dead customers should not become financial transactions.
test 샘플별 bleu-4:  10.16
========================================================================================================================
SRC:
public List<ArrStsChngHst> getArrStatusChangeHistory(ArrRealCoreImpl arrReal) throws BizApplicationException { return _getArrBasicBiz().getArrStatusChangeHistory(arrReal); }
TGT:
Inquire arrangement status change history
PRED:
Inquire history of arrangement status has changed.
test 샘플별 bleu-4:  27.78
========================================================================================================================
SRC:
public java.lang.String getCndValDcsnLvlCd(){ return cndValDcsnLvlCd; }
TGT:
This method inquire condition value decision level code.
PRED:
This method inquire condition value decision level code.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public static boolean isValid(String value){ for (ArrIssmdaRelStsEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public AprslRqstAddrOut getAddress(String aprslRqstId, int aprslRqstSeqNbr)throws BizApplicationException { AsAprslRqstAddrDIO input = new AsAprslRqstAddrDIO(); input.setInstCd(_getCmnContextCore().getInstCode()); input.setAprslRqstId(aprslRqstId); input.setAprslRqstSeqNbr(aprslRqstSeqNbr); List<AsAprslRqstAddrDIO> result = _getAsAprslRqstAddrDDso().selectByAprslRqstSeqNbr(_getCmnContextCore().getInstCode(), aprslRqstId, aprslRqstSeqNbr); //출력부조립 AprslRqstAddrOut out = new AprslRqstAddrOut(); if(!result.isEmpty()) { out.setInstCd(result.get(0).getInstCd()); out.setAprslRqstId(result.get(0).getAprslRqstId()); out.setAprslRqstSeqNbr(result.get(0).getAprslRqstSeqNbr()); out.setAssetAddrTpCd(result.get(0).getAssetAddrTpCd()); out.setAddrSeqNbr(result.get(0).getAddrSeqNbr()); out.setAddrHrarcyCd(result.get(0).getAddrHrarcyCd()); out.setAddrId(result.get(0).getAddrId()); out.setBsicAddrCntnt(result.get(0).getBsicAddrCntnt()); out.setDtlAddrCntnt(result.get(0).getDtlAddrCntnt()); } return out; }
TGT:
Inquire the address information of the appraisal request.
PRED:
The address information of the asset is inquired according to the asset address type and the address system.
test 샘플별 bleu-4:  20.97
========================================================================================================================
SRC:
public List<TblXtnAtrbtOut> getTableExtendAttribute(String tblNm) throws BizApplicationException { return this.getTableExtendAttribute(_getCmnContextCore().getInstCode(), tblNm, XtnAtrbtVrtnCmpsEnum.NA, null); }
TGT:
Query table extend attribute list by no condition(cmnContext institution) basic method reference : {@link TblXtnAtrbtCore getTableExtendAttribute(String, String, XtnAtrbtVrtnCmpsEnum, Map<String, String>)}
PRED:
Query table extend attribute list by no condition basic method reference : {@link TblXtnAtrbtCore getTableExtendAttribute(String, String, XtnAtrbtVrtnCmpsEnum, Map<String, String>)}
test 샘플별 bleu-4:  81.39
========================================================================================================================
SRC:
static boolean isValid(String value) { for (VarIntRtCyclCalcnBaseCoreEnum enumObject : values()) { if (enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<XtnCdIO> getListCode(String cdNbr, Map<String, Object> supplInfoVal) throws BizApplicationException { List<XtnCdIO> xtnCdIOs = new ArrayList<XtnCdIO>(); ClTreeIO clIn = new ClTreeIO(); String lngCd = supplInfoVal == null ? null : String.valueOf(supplInfoVal.get(InstParamEnum.LANGUAGE_CODE.getValue())); if (StringUtils.isEmpty(cdNbr)) { throw new BizApplicationException("AAPCME0006", new Object[] { "@cdNbr" }); } clIn.setClHrarcyId(CCM01.IPCT); clIn.setMostLowrLvlYn(CCM01.YES); List<ClTreeIO> clList = _getCltree().getListClassification(clIn); for(ClTreeIO clTree : clList ){ XtnCdIO xtnCdIO = new XtnCdIO(); xtnCdIO.setCd(clTree.getClId()); xtnCdIO.setLngCd(lngCd); if(StringUtils.isEmpty(lngCd)) { xtnCdIO.setCdNm(_getTrnsfrLng().getTransferLanguage(CCM01.TRANS_CL, CCM01.IPCT.concat(clTree.getClId()))); } else { xtnCdIO.setCdNm(_getTrnsfrLng().getTransferLanguage(CCM01.TRANS_CL, CCM01.IPCT.concat(clTree.getClId()), lngCd)); } xtnCdIOs.add(xtnCdIO); } return xtnCdIOs; }
TGT:
This method returns the list of code corresponding to the search condition
PRED:
It make the combo-box of Code that meet the search condition. Combo-box is consisted of CaCmnCdCheckOut. (cdNbr, cd, cdNm, delYn, cdAbrvtnNm)
test 샘플별 bleu-4:  8.69
========================================================================================================================
SRC:
public BigDecimal getBlockedPrincipal(String crncyCd, String baseDt, ArrRealCoreImpl arrRealCoreImpl) throws BizApplicationException { _checkInput(crncyCd, baseDt); ArArrSrvcBlckngDSelectSumEffectiveAmtOnDateIO sqlOut = _getArArrSrvcBlckngDDso().selectSumEffectiveBlckgAmtOnDate(arrRealCoreImpl.getInstCd(), arrRealCoreImpl.getArrId(), baseDt, crncyCd); if(sqlOut == null) { return BigDecimal.ZERO; } if(sqlOut.getArrSrvcBlckngAmt() == null) { sqlOut.setArrSrvcBlckngAmt(BigDecimal.ZERO); } if(CCM01.YES.equals(sqlOut.getWhdrwlAblBalInitzYn())){ sqlOut.setArrSrvcBlckngAmt(new BigDecimal("999999999999999")); } return sqlOut.getArrSrvcBlckngAmt(); }
TGT:
Inquire total amount of principal which is currently blocked by service blocking registered on arrangement (Used to calculate currently available balance).
PRED:
It get arrangement's blocked principal amount on base date. Return value is summarized value of all of the effective blocking amount on base date. It is used to calculate available balance.
test 샘플별 bleu-4:  7.11
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(CustImpl custImpl) throws BizApplicationException { Map<String, String> subInfoMap = new HashMap<String, String>(); // 1. 보조명세 캐시 조회 AtCustSIO subInfo = getSubInfoCache(custImpl); // 2. 보조명세 캐시가 null인 경우, 빈 Map 리턴 if (subInfo == null) { return subInfoMap; } // 3. 보조명세 캐시를 Map으로 convert for (Entry<String, Object> entry : subInfo.getFieldValues().entrySet()) { // Casting 시 Null 방지 if (entry.getValue() != null) { subInfoMap.put(entry.getKey(), String.valueOf(entry.getValue())); } } return subInfoMap; }
TGT:
This method provide settlement subsidiary calculation detail information.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  10.6
========================================================================================================================
SRC:
public TxQrySvcGetXtnOut clone(){ try{ TxQrySvcGetXtnOut object= (TxQrySvcGetXtnOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getSubInfo(PrtnrCore prtnrCore, String xtnAtrbtNm) throws BizApplicationException { return _getPrtnrSubInfoBiz().getSubInfo(xtnAtrbtNm, (PrtnrImpl) prtnrCore); }
TGT:
Inquire a specific subsidiary information of the appraisal request.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  78.61
========================================================================================================================
SRC:
public boolean isActive() { return this.arrGrpStsCd.equals(ArrGrpStsCoreEnum.ACTIVE.getValue()); }
TGT:
It checks if the actor role's actor role status is active. It returns true if active, return false if actor role status doesn't exist or it is not active.
PRED:
It checks if the customer's customer status is active. It returns true if active, return false if customer status doesn't exist or it is not active.
test 샘플별 bleu-4:  67.18
========================================================================================================================
SRC:
public CustRgstSvcAnswerListIn clone(){ try{ CustRgstSvcAnswerListIn object= (CustRgstSvcAnswerListIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CdMgmtSvcGetCdListByCdNbrIn clone(){ try{ CdMgmtSvcGetCdListByCdNbrIn object= (CdMgmtSvcGetCdListByCdNbrIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, AssetCore assetImpl, Integer assetThingSeqNbr, String txDt, Integer txSeqNbr) throws BizApplicationException { _getAssetThingSubInfoBiz().saveSubInfo(xtnAtrbtNm, xtnAtrbtCntnt, txDt, txSeqNbr, (AssetImpl) assetImpl, assetThingSeqNbr); }
TGT:
This method save settlement subsidiary calculation detail information using interface VO
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public boolean check(Map<String, String> atrbtCntnt) throws BizApplicationException { if(logger.isDebugEnabled()) { logger.debug("YnMndtryCmpxVldtnImpl : {}", atrbtCntnt); } int cnt = 0; String ynAtrbt = null; String ynVal = null; for(Map.Entry<String, String> atrbt: atrbtCntnt.entrySet()) { if(cnt == 0) { String [] pair = atrbt.getValue().split("="); if(pair.length != 2) { // It is {0} error. Please check {0}. throw new BizApplicationException("AAPCME0002", new Object[] {"@inpCntnt"}, new Object[] {"YnMndtryCmpxVldtnImpl : " + atrbtCntnt.toString()}); } ynAtrbt = pair[0]; ynVal = pair[1]; cnt++; if(logger.isDebugEnabled()) { logger.debug("ynAtrbt, ynVal : {}, {}", ynAtrbt, ynVal); } if(ynAtrbt == null || ynVal == null) { throw new BizApplicationException("AAPCME0002", new Object[] {"@inpCntnt"}, new Object[] {"YnMndtryCmpxVldtnImpl : " + atrbtCntnt.toString()}); } continue; } if(CCM01.YES.equals(ynVal) && ynVal.equals(atrbtCntnt.get(ynAtrbt)) && !ynAtrbt.equals(atrbt.getKey()) && StringUtils.isEmpty(atrbt.getValue())) { // {1} is mandatory input item when inputting {0}. throw new BizApplicationException("AAPCME0076", new Object[] {ynAtrbt + "=" + ynVal, "@" + atrbt.getKey()}); } if(CCM01.NO.equals(ynVal) && ynVal.equals(atrbtCntnt.get(ynAtrbt)) && !ynAtrbt.equals(atrbt.getKey()) && !StringUtils.isEmpty(atrbt.getValue())) { // If {0}, it
TGT:
Validate the attribute value ( Simple Validation ) Implemented and used by each business component.
PRED:
Validate the attribute value ( Complex Validation ) Implemented and used by each business component.
test 샘플별 bleu-4:  81.54
========================================================================================================================
SRC:
public CaCustAgrmntCdSvcDeleteListIn clone(){ try{ CaCustAgrmntCdSvcDeleteListIn object= (CaCustAgrmntCdSvcDeleteListIn)super.clone(); if ( this.deleteList== null ) object.deleteList = null; else{ java.util.List<bankware.corebanking.configurationadmin.actor.service.dto.CaCustAgrmntCdSvcDeleteIn> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.actor.service.dto.CaCustAgrmntCdSvcDeleteIn>(deleteList.size()); for( bankware.corebanking.configurationadmin.actor.service.dto.CaCustAgrmntCdSvcDeleteIn item : deleteList ){ clonedList.add( (bankware.corebanking.configurationadmin.actor.service.dto.CaCustAgrmntCdSvcDeleteIn)item.clone()); } object.deleteList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public LnArr360IntRt clone(){ try{ LnArr360IntRt object= (LnArr360IntRt)super.clone(); if ( this.tierElmntList== null ) object.tierElmntList = null; else{ java.util.List<bankware.corebanking.loan.query.service.dto.LnArrIntRtTierElmnt> clonedList = new java.util.ArrayList<bankware.corebanking.loan.query.service.dto.LnArrIntRtTierElmnt>(tierElmntList.size()); for( bankware.corebanking.loan.query.service.dto.LnArrIntRtTierElmnt item : tierElmntList ){ clonedList.add( (bankware.corebanking.loan.query.service.dto.LnArrIntRtTierElmnt)item.clone()); } object.tierElmntList = clonedList; } if ( this.rtElmntList== null ) object.rtElmntList = null; else{ java.util.List<bankware.corebanking.loan.query.service.dto.LnArrIntRtCmpsElmnt> clonedList = new java.util.ArrayList<bankware.corebanking.loan.query.service.dto.LnArrIntRtCmpsElmnt>(rtElmntList.size()); for( bankware.corebanking.loan.query.service.dto.LnArrIntRtCmpsElmnt item : rtElmntList ){ clonedList.add( (bankware.corebanking.loan.query.service.dto.LnArrIntRtCmpsElmnt)item.clone()); } object.rtElmntList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaDstbChrncDataRqstIn clone(){ try{ CaDstbChrncDataRqstIn object= (CaDstbChrncDataRqstIn)super.clone(); if ( this.tblList==null ) object.tblList = null; else object.tblList = (bankware.corebanking.configurationadmin.distribution.service.dto.CaDstbChrncDataRqstTblInfoIn)this.tblList.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getNumbering(String instCd, String nbrgAtrbtNm, Map<String, Object> inpParmMap, Boolean isReUseSameTxNbrg) throws BizApplicationException { // 기관코드와 채번속성명이 있는지 검증 한다. _checkNumberingInput(instCd, nbrgAtrbtNm); // Query numbering rule NumberingGetIn inParm = new NumberingGetIn(); inParm.setInstCd(instCd); inParm.setNbrgAtrbtNm(nbrgAtrbtNm); // 채번규칙 조회 NumberingGetListOut numbering02Out = this._getNumberingRule(inParm); if(logger.isDebugEnabled()) { logger.debug("numbering02Out ::: {}", numbering02Out.getFieldValues()); } CmNbrgRuleMIO cmNbrgRuleMIO = _setCommonNumberingRuleMasterParameter(numbering02Out); List<CmNbrgRuleCmpsDIO> listCmNbrgRuleCmpsDIO = new ArrayList<CmNbrgRuleCmpsDIO>(); for (NumberingGetOut numbering02OutSub1 : numbering02Out.getTblNm()) { listCmNbrgRuleCmpsDIO.add(_setNumberingRuleCompositionDetailParameter(numbering02OutSub1)); } // Assemble numbering layer value String jsonCntnt = ""; Map<String, Object> tierValMap = new LinkedHashMap<String, Object>(); for (CmNbrgRuleCmpsDIO cmNbrgRuleCmpsDIO : listCmNbrgRuleCmpsDIO) { // 채번계층여부가 Y 이면 채번계층값을 가져 온다. if (CCM01.YES.equals
TGT:
It calculates next number. Compared to the default method, the omitted 'isReUseSameTxNbrg' value is replaced by false. Compared to the default method, the omitted 'inpParmMap' value is replaced by null.
PRED:
It calculates next number. Compared to the default method, the omitted 'instCd' value is replaced by instCd in Common Context. Compared to the default method, the omitted 'isReUseSameTxNbrg' value is replaced by false. Compared to the default method, the omitted 'inpParmMap' value is replaced by null.
test 샘플별 bleu-4:  64.81
========================================================================================================================
SRC:
public boolean isBatchMode() throws BizApplicationException { SystemOnlineModeEnum vender = SystemOnlineModeEnum.getByValue(getSystemOnlineMode()); if (vender == SystemOnlineModeEnum.BF_DAY_SNAPSHOT) return true; else return false; }
TGT:
It checks whether system mode is batch.
PRED:
It checks whether system mode is batch.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public static boolean isValid(String value){ for (CaDstbProcStatusCdEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value){ for (TxCnclRsnEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(ActorCore actorCore, String dueDlgncDscd, int dueDlgncSeqNbr) throws BizApplicationException { return _getActorDueDlgncSubInfoBiz().getMapSubInfo((ActorImpl) actorCore, dueDlgncDscd, dueDlgncSeqNbr); }
TGT:
This method provide settlement subsidiary detail information.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  10.6
========================================================================================================================
SRC:
public LnRpymntSvcRpymntInfoListIn clone(){ try{ LnRpymntSvcRpymntInfoListIn object= (LnRpymntSvcRpymntInfoListIn)super.clone(); if ( this.rpymntInfoList== null ) object.rpymntInfoList = null; else{ java.util.List<bankware.corebanking.loan.financialtransaction.service.dto.LnRpymntSvcRpymntInfoIn> clonedList = new java.util.ArrayList<bankware.corebanking.loan.financialtransaction.service.dto.LnRpymntSvcRpymntInfoIn>(rpymntInfoList.size()); for( bankware.corebanking.loan.financialtransaction.service.dto.LnRpymntSvcRpymntInfoIn item : rpymntInfoList ){ clonedList.add( (bankware.corebanking.loan.financialtransaction.service.dto.LnRpymntSvcRpymntInfoIn)item.clone()); } object.rpymntInfoList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value){ for (LmtChkRsltCoreEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaArrPdRuleCntntCdNbrListOut clone(){ try{ CaArrPdRuleCntntCdNbrListOut object= (CaArrPdRuleCntntCdNbrListOut)super.clone(); if ( this.list== null ) object.list = null; else{ java.util.List<bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrPdRuleCntntCdNbrList> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrPdRuleCntntCdNbrList>(list.size()); for( bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrPdRuleCntntCdNbrList item : list ){ clonedList.add( (bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrPdRuleCntntCdNbrList)item.clone()); } object.list = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> arrXtnInfoMap, Integer arrSrvcBlckngSeqNbr, Integer seqNbr, String txDt, Integer txSeqNbr, ArrRealCore arrRealCore) throws BizApplicationException { _getArrSrvcBlckngSubInfoBiz().saveMapSubInfo(arrXtnInfoMap, arrSrvcBlckngSeqNbr, seqNbr, txDt, txSeqNbr, (ArrRealImpl)arrRealCore); }
TGT:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaScrnMgmtSvcRemoveScrnInfoIn clone(){ try{ CaScrnMgmtSvcRemoveScrnInfoIn object= (CaScrnMgmtSvcRemoveScrnInfoIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ActorAddrOut getAddrInfo(String cntctPntLctnTpCd, String cntctMthdTpCd) throws BizApplicationException { List<ActorAddrOut> addrInfoList = getListAddrInfo(); for (ActorAddrOut addrInfo : addrInfoList) { if (cntctPntLctnTpCd.equals(addrInfo.getCtcptTpCd()) && cntctMthdTpCd.equals(addrInfo.getCntctMthdTpCd())) { return addrInfo; } } return null; }
TGT:
Inquire the address information that matches the input contact point location type code, contact method type code.
PRED:
Inquire the address information that matches the input contact point location type code, contact method type code.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArrPlnSvcGetExctnHstIn clone(){ try{ ArrPlnSvcGetExctnHstIn object= (ArrPlnSvcGetExctnHstIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public BigDecimal getPdCmpxCndTierNbr(){ return pdCmpxCndTierNbr; }
TGT:
This method get complex condition's tier number which is applied to this arrangement condition, return null when condition is simple condition or the tier number was not decided.
PRED:
This method get complex condition's tier number which is applied to this arrangement condition, return null when condition is simple condition or the tier number was not decided.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(ActorCore actorCore, String ctcptId, int ctcptChngSeqNbr, String xtnAtrbtNm, String xtnAtrbtCntnt) throws BizApplicationException { _getActorCtcptSubInfoBiz().saveSubInfo((ActorImpl) actorCore, ctcptId, ctcptChngSeqNbr, xtnAtrbtNm, xtnAtrbtCntnt); }
TGT:
Save an asset subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public MkngMsgBsicO clone(){ try{ MkngMsgBsicO object= (MkngMsgBsicO)super.clone(); if ( this.mkngMsgRprtngLst== null ) object.mkngMsgRprtngLst = null; else{ java.util.List<bankware.corebanking.foreignexchange.importservice.service.dto.MkngMsgRprtngO> clonedList = new java.util.ArrayList<bankware.corebanking.foreignexchange.importservice.service.dto.MkngMsgRprtngO>(mkngMsgRprtngLst.size()); for( bankware.corebanking.foreignexchange.importservice.service.dto.MkngMsgRprtngO item : mkngMsgRprtngLst ){ clonedList.add( (bankware.corebanking.foreignexchange.importservice.service.dto.MkngMsgRprtngO)item.clone()); } object.mkngMsgRprtngLst = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public IpctMgmtSvcGetIpctTxEntryFullOut clone(){ try{ IpctMgmtSvcGetIpctTxEntryFullOut object= (IpctMgmtSvcGetIpctTxEntryFullOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public int delete(CaArArrSrvcClassRIO arArrSrvcClassRIO) { int cnt = _getArArrSrvcClassR().delete(arArrSrvcClassRIO); _getArDataCacheManager().clearInstanceCache(DataCacheCoreConfig.ARR_SRVC_VLDTN_RULE_CACHE, null); return cnt; }
TGT:
Delete all occurrences of the given substring.
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value) { for (LevyCrncyDscdEnum enumObject : values()) { if (enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CustRgstSvcAgrmntTpListIn clone(){ try{ CustRgstSvcAgrmntTpListIn object= (CustRgstSvcAgrmntTpListIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public StStlmntXtnInfoDIO getStlmntXtnInfo(StStlmntXtnInfoDIO stStlmntXtnInfoDIO) throws BizApplicationException { logger.debug("StlmntCoreImpl==>getStlmntXtnInfo : stStlmntXtnInfoDIO: {}", stStlmntXtnInfoDIO); return _getStlmntXtnInfoBiz().getStlmntXtnInfo(stStlmntXtnInfoDIO); }
TGT:
This method provide settlement extended information.
PRED:
This method provide settlement extended information.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(AssetImpl asset, Integer assetThingSeqNbr){ Map<String, String> subInfoMap = new HashMap<String, String>(); // 1. 보조명세 캐시 조회 IValueObject subInfo = getSubInfoCache(asset, assetThingSeqNbr); // 2. 보조명세 캐시가 null인 경우, 빈 Map 리턴 if (subInfo == null) { return subInfoMap; } // 3. 보조원장 캐시를 Map으로 convert for (Entry<String, Object> entry : subInfo.getFieldValues().entrySet()) { if(!_isSubInfoContainsField(asset.getAssetThingSubInfoKnd(assetThingSeqNbr), entry.getKey())) { continue; } // Casting 시 Null 방지 if (entry.getValue() != null ) { subInfoMap.put(entry.getKey(), String.valueOf(entry.getValue())); } } return subInfoMap; }
TGT:
This method provide settlement subsidiary calculation detail information.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  10.6
========================================================================================================================
SRC:
public CaCdMgmtSvcReoveCodeListIn clone(){ try{ CaCdMgmtSvcReoveCodeListIn object= (CaCdMgmtSvcReoveCodeListIn)super.clone(); if ( this.tblNm== null ) object.tblNm = null; else{ java.util.List<bankware.corebanking.configurationadmin.code.service.dto.CaCdMgmtSvcCdInfoListIn> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.code.service.dto.CaCdMgmtSvcCdInfoListIn>(tblNm.size()); for( bankware.corebanking.configurationadmin.code.service.dto.CaCdMgmtSvcCdInfoListIn item : tblNm ){ clonedList.add( (bankware.corebanking.configurationadmin.code.service.dto.CaCdMgmtSvcCdInfoListIn)item.clone()); } object.tblNm = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public DummyIO saveArrXtnAtrbtClass(CaArrXtnAtrbtCntrlClassSaveIn in) throws BizApplicationException { CaArrXtnAtrbtClassIn input = new CaArrXtnAtrbtClassIn(); input.setInstCd(in.getInstCd()); input.setXtnAtrbtNm(in.getXtnAtrbtNm()); input.setXtnAtrbtClassNm(in.getXtnAtrbtClassNm()); input.setBizDscd(in.getBizDscd()); input.setPdTpCd(in.getPdTpCd()); input.setPdTmpltCd(in.getPdTmpltCd()); input.setPdCd(in.getPdCd()); _getArrXtnAtrbtCntrlMgmt().saveArrXtnAtrbtClass(input); return new DummyIO(); }
TGT:
Save the information about the extended attribute class mapped with arrangement condition. (condition variation class name)
PRED:
Save the information about the extended attribute class mapped with arrangement condition.
test 샘플별 bleu-4:  71.65
========================================================================================================================
SRC:
public void saveSubInfo(AtCustRprsnSIO subInfoIO, CustRprsnImpl custRprsnImpl) throws BizApplicationException { // 1. 보조명세 캐시 조회결과에 따라 insert/update 판단 AtCustRprsnSIO oldSubInfoIO = getSubInfoCache(custRprsnImpl); if (oldSubInfoIO == null) { // PK setting subInfoIO.setCustRprsnId(custRprsnImpl.getCustRprsnId()); // insert _getAtCustRprsnSDso().insert(subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(subInfoIO, oldSubInfoIO)) { return; } // 변경전 이력 저장 _saveSubInfoHst(custRprsnImpl, oldSubInfoIO); // PK setting subInfoIO.setCustRprsnId(custRprsnImpl.getCustRprsnId()); // update _getAtCustRprsnSDso().update(oldSubInfoIO); } // 2. 캐시 저장 custRprsnImpl.setSubInfoCache(oldSubInfoIO); }
TGT:
Save an asset subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
static boolean isValid(String value) throws BizApplicationException { if(!StringUtils.isEmpty( value)) { for (AssetTpEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } throw new BizApplicationException("AAPATE0028", new Object[] {value, "@AssetXtnAtrbtNm"});//({0}) is invalid {1}. } return true; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value) { for (PdServiceTypeEnum enumObject : values()) { if (enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public int delete(CaAmAsmItmMIO amAsmItmMIO){ return _getAmAsmItmM().delete(amAsmItmMIO); }
TGT:
It changes the status of insurance to cancel status
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  15.45
========================================================================================================================
SRC:
public BfCardInfoPopUpSvcIn clone(){ try{ BfCardInfoPopUpSvcIn object= (BfCardInfoPopUpSvcIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaBnkMgmtSvcGetBankCodeListOut clone(){ try{ CaBnkMgmtSvcGetBankCodeListOut object= (CaBnkMgmtSvcGetBankCodeListOut)super.clone(); if ( this.bnkList== null ) object.bnkList = null; else{ java.util.List<bankware.corebanking.configurationadmin.code.service.dto.CaBnkMgmtSvcGetBankCodeOut> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.code.service.dto.CaBnkMgmtSvcGetBankCodeOut>(bnkList.size()); for( bankware.corebanking.configurationadmin.code.service.dto.CaBnkMgmtSvcGetBankCodeOut item : bnkList ){ clonedList.add( (bankware.corebanking.configurationadmin.code.service.dto.CaBnkMgmtSvcGetBankCodeOut)item.clone()); } object.bnkList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<CmRefAtrbtMIO> selectList(CmRefAtrbtMIO cmRefAtrbtMIO) { return _getCmRefAtrbtM().selectList(cmRefAtrbtMIO); }
TGT:
It gets list of http header properties.
PRED:
It gets list of http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(AssetTxCore assetTx) throws BizApplicationException { return _getAssetTxSubInfoBiz().getMapSubInfo((AssetTxImpl)assetTx); }
TGT:
Inquire all subsidiary information of the asset transaction as a map.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  17.06
========================================================================================================================
SRC:
public boolean isCancelled() { return this.getArrSts().equals(ArrStsEnum.CANCELED); }
TGT:
Check whether if the status of arrangement is "CANCELLED". Detail function descripation refers to {@link #isActive()}.
PRED:
Check if the status of arrangement activity is "Cancelled".
test 샘플별 bleu-4:  25.52
========================================================================================================================
SRC:
public CalculateInterestOut calculate(CalculateInterestIn in) { logger.debug("### CustomBalloonCalculationStrategy start"); logger.debug("### CustomBalloonCalculationStrategy #4-1 input: {}", in); CalculationIntervalsOut calIntervalsOut = _makeCalculationIntervals(in); CalculateInterestOut out = new CalculateInterestOut(); out.setIntCalIntervals(calIntervalsOut.getInterestCalculationSections()); out.setFeeCalTgtAmt(calIntervalsOut.getFeeCalTargetAmount()); return out; }
TGT:
This method provides main business flow for calculating tax. Business Flow : 1) Get calculator class by tax calculation way defined in institution parameter 2) Make common VO for calculating the tax 3) Calculate tax actually
PRED:
This method calculates the interest of account accordance with type of interest transaction. It must be performed after executing normally the createCalculator method.
test 샘플별 bleu-4:  4.25
========================================================================================================================
SRC:
public List<ActorAddrOut> getListAddrInfo() throws BizApplicationException { return getActor().getListAddrInfo(); }
TGT:
Inquire the actor's address information list. It inquires the effective information on transaction date.
PRED:
Inquire the actor's address information list. It inquires the effective information on transaction date.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaLogInSvcGetLoginUserOut clone(){ try{ CaLogInSvcGetLoginUserOut object= (CaLogInSvcGetLoginUserOut)super.clone(); if ( this.roleList== null ) object.roleList = null; else{ java.util.List<bankware.corebanking.configurationadmin.actor.service.dto.CaLogInSvcGetLoginUserRoleOut> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.actor.service.dto.CaLogInSvcGetLoginUserRoleOut>(roleList.size()); for( bankware.corebanking.configurationadmin.actor.service.dto.CaLogInSvcGetLoginUserRoleOut item : roleList ){ clonedList.add( (bankware.corebanking.configurationadmin.actor.service.dto.CaLogInSvcGetLoginUserRoleOut)item.clone()); } object.roleList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<CaTblXtnAtrbtOut> getTableExtendAttribute(String instCd, String tblNm) throws BizApplicationException { return this.getTableExtendAttribute(instCd, tblNm, CaXtnAtrbtVrtnCmpsEnum.NA, null); }
TGT:
Query table extend attribute list by input condition
PRED:
Query table extend attribute list by no condition basic method reference : {@link TblXtnAtrbtCore getTableExtendAttribute(String, String, XtnAtrbtVrtnCmpsEnum, Map<String, String>)}
test 샘플별 bleu-4:  30.14
========================================================================================================================
SRC:
public LnAplctnInfo clone(){ try{ LnAplctnInfo object= (LnAplctnInfo)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void apply(ArrStsChngIn arrStsChngIn) throws BizApplicationException { _setArrStatus( ArrStsEnum.APPLIED, arrStsChngIn ); _changeStatus( arrStsChngIn, null); }
TGT:
Change the status of arrangement into "Applied", while change product of arrangement based on product code input. Following additional arrangement information can be registered. 1) Account number 2) Whether if created mandatory condition automatically or not 3) A list of arrangement level condition 4) A list of arrangement relation information 5) A list of arrangement extended attribute
PRED:
Change the status of arrangement into "Applied", while change product of arrangement based on product code input. Following additional arrangement information can be registered. 1) Account number 2) Whether if created mandatory condition automatically or not 3) A list of arrangement level condition 4) A list of arrangement relation information 5) A list of arrangement extended attribute
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<CaDocInqryIO> getCaDoc(CaDocInqryIO docInqryIn) throws BizApplicationException { List<CaDocInqryIO> docInqryList = null; List<CaDocBsicIO> docBsicList = _getDocBsic().searchDoc(docInqryIn); if(docBsicList != null && !docBsicList.isEmpty()) { docInqryList = new ArrayList<CaDocInqryIO>(); for(CaDocBsicIO docBsicIO : docBsicList) { CaDocInqryIO docInqryIO = new CaDocInqryIO(); docInqryIO.setInstCd(docInqryIn.getInstCd()); docInqryIO.setCmpntCd(docBsicIO.getCmpntCd()); docInqryIO.setDocId(docBsicIO.getDocId()); docInqryIO.setDocNm(docBsicIO.getDocNm()); docInqryIO.setDocStsCd(docBsicIO.getDocStsCd()); docInqryIO.setDocTpCd(docBsicIO.getDocTpCd()); docInqryIO.setRgstrnDocTmpltYn(docBsicIO.getRgstrnDocTmpltYn()); docInqryIO.setDocMkngTpCd(docBsicIO.getDocMkngTpCd()); docInqryList.add(docInqryIO); } } return docInqryList; }
TGT:
Get Document Object with document id
PRED:
Query document by name, id, status, type, component type, rgstDocTmptYn
test 샘플별 bleu-4:  12.61
========================================================================================================================
SRC:
public CaBizRuleInqrySvcBySrvcIn clone(){ try{ CaBizRuleInqrySvcBySrvcIn object= (CaBizRuleInqrySvcBySrvcIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public PreScrnngRslt clone(){ try{ PreScrnngRslt object= (PreScrnngRslt)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isValid(String type) { return ( "F".equalsIgnoreCase(type) || "L".equalsIgnoreCase(type) ) ; //added by Roh(change to simplify) }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(ScrtyIntSubInfo subInfo, String txDt, Integer txSeqNbr, ScrtyIntImpl scrtyIntImpl) throws BizApplicationException{ // 0. null check if(subInfo == null){ throw new BizApplicationException("AAPCME0006", new Object[] {ScrtyIntSubInfo.class.getSimpleName()}); } logger.debug("## <AS> saveSubInfo -> subInfo = {} :: ", subInfo.getFieldValues()); // 1. 표준속성에 등록된 검증규칙을 통해 입력받은 확장속성내용 검증 for(Entry<String, Object> entry : subInfo.getFieldValues().entrySet()) { if(entry.getValue() != null) { _getAtrbtChk().checkStandardAttribute(entry.getKey(), String.valueOf(entry.getValue())); } } // 2. 보조원장 캐시 조회결과에 따라 insert/update 판단 AsScrtyIntSIO subInfoCache = getSubInfoCache(scrtyIntImpl); if(subInfoCache == null){ // DBIO VO new instance subInfoCache = new AsScrtyIntSIO(); subInfoCache.setScrtyIntId(scrtyIntImpl.getScrtyIntBasicCache().getScrtyIntId()); // PK setting // 빈 이력 생성 --> undo 시 확장속성 저장 이전으로 속성값을 원복시키기 위함 _saveSubInfoHst(scrtyIntImpl,
TGT:
This method save settlement subsidiary calculation detail information using xtnAtrbtNm and xtnAtrbtCntnt
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public CalculateInterestOut calculate(CalculateInterestIn in) { logger.debug("### CustomAmortizedCalculationStrategy start"); logger.debug("### CustomAmortizedCalculationStrategy #4-1 input: {}", in); CalculationIntervalsOut calIntervalsOut = _makeCalculationIntervals((CustomCalculateInterestIn) in); CalculateInterestOut out = new CalculateInterestOut(); out.setIntCalIntervals(calIntervalsOut.getInterestCalculationSections()); out.setPartialRepymntNotClearAmt(calIntervalsOut.getPartialRepaymentNotClearAmt()); out.setFeeCalTgtAmt(calIntervalsOut.getFeeCalTargetAmount()); out.setInstallmntAmt(calIntervalsOut.getInstallmentAmount()); out.setInstallmntAmtReCalHistory(calIntervalsOut.getInstallmentAmountReCalHistory()); return out; }
TGT:
This method provides main business flow for calculating tax. Business Flow : 1) Get calculator class by tax calculation way defined in institution parameter 2) Make common VO for calculating the tax 3) Calculate tax actually
PRED:
This method calculates the interest of account accordance with type of interest transaction. It must be performed after executing normally the createCalculator method.
test 샘플별 bleu-4:  4.25
========================================================================================================================
SRC:
public PdCndQueryBizProcGetCndDetailRngCndValOut clone(){ try{ PdCndQueryBizProcGetCndDetailRngCndValOut object= (PdCndQueryBizProcGetCndDetailRngCndValOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, String txDt, Integer txSeqNbr, AssetImpl assetImpl, Integer assetThingSeqNbr) { // 0. null check if (StringUtils.isEmpty(xtnAtrbtNm)){ return; } // 1. 자산물건보조명세의 종류 조회 AssetThingSubInfoKndEnum subInfoKnd = assetImpl.getAssetThingSubInfoKnd(assetThingSeqNbr); // 2. 표준속성에 등록된 검증규칙을 통해 입력받은 확장속성내용 검증 _getAtrbtChk().checkStandardAttribute(xtnAtrbtNm, xtnAtrbtCntnt); // 3. 보조원장 캐시 조회결과에 따라 insert/update 판단 IValueObject subInfoCache = getSubInfoCache(assetImpl, assetThingSeqNbr); if(subInfoCache == null){ // DBIO VO new instance subInfoCache = _getNewSubInfoSqlIO(subInfoKnd); subInfoCache.set("assetId", assetImpl.getAssetBasicCache().getAssetId()); // PK setting subInfoCache.set("assetThingSeqNbr", assetThingSeqNbr); // PK setting // 빈 이력 생성 --> undo 시 확장속성 저장 이전으로 속성값을 원복시키기 위함 _
TGT:
Save an asset subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public void deleteArrCustRXtnInfo(ArArrCustRXtnInfoDIO arArrCustRXtnInfoDIO, String txDt, Integer txSeqNbr) throws BizApplicationException { // 기존 확장속성 조회 ArArrCustRXtnInfoDIO arArrCustRXtnInfoOld = selectArrCustRXtnInfo(arArrCustRXtnInfoDIO); // 조회결과가 존재하지 않는 경우 에러처리 if (arArrCustRXtnInfoOld == null) { throw new BizApplicationException("AAPARE0064", new Object[] { arArrCustRXtnInfoDIO.getXtnAtrbtNm() }); } // 확장속성 update arArrCustRXtnInfoOld.setXtnAtrbtCntnt(null); updateArrCustRXtnInfo(arArrCustRXtnInfoOld, txDt, txSeqNbr); }
TGT:
Remove one arrangement/customer relation extended attribute of subsidiary information(CTI)
PRED:
Remove one arrangement/customer relation extended attribute of subsidiary information(CTI)
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value) throws BizApplicationException { if(!StringUtils.isEmpty( value)) { for (AssetScrtyIntRelStsEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } throw new BizApplicationException("AAPATE0028", new Object[] {value, "@assetScrtyIntRelStsCd"});//({0}) is invalid {1}. } return true; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(StlmntCalcnSubInfoInqryIn stlmntCalcnSubInfoInqryIn) throws BizApplicationException { return _getStlmntCalcnSubInfoBiz().getMapSubInfo(_setStStlmntCalcnSIO(stlmntCalcnSubInfoInqryIn)); }
TGT:
This method provide settlement subsidiary detail information.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  10.6
========================================================================================================================
SRC:
public CaOnlyDstbSendOut clone(){ try{ CaOnlyDstbSendOut object= (CaOnlyDstbSendOut)super.clone(); if ( this.dstbRqstSqlList== null ) object.dstbRqstSqlList = null; else{ java.util.List<java.lang.String> clonedList = new java.util.ArrayList<java.lang.String>(dstbRqstSqlList.size()); for( java.lang.String item : dstbRqstSqlList ){ clonedList.add(item); } object.dstbRqstSqlList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value){ for (ArrVldtnRequiredValEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public AprvlCndMgmtGetAprvlCondXtnInfoIO clone(){ try{ AprvlCndMgmtGetAprvlCondXtnInfoIO object= (AprvlCndMgmtGetAprvlCondXtnInfoIO)super.clone(); if ( this.listVal== null ) object.listVal = null; else{ java.util.List<java.lang.String> clonedList = new java.util.ArrayList<java.lang.String>(listVal.size()); for( java.lang.String item : listVal ){ clonedList.add(item); } object.listVal = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrReal> getListCustOwnArrBasedOnArrBasic(String custId, ArrStsEnum arrStsEnum, String bizDscd,String pdTpCd, String pdTmpltCd, String pdCd) throws BizApplicationException { return _getArrCustRelQryBizImpl().getArrRealListBasedOnArrBasic(custId, arrStsEnum, ArrCustRelEnum.MAIN_CONTRACTOR, bizDscd, pdTpCd, pdTmpltCd, pdCd, 0, 0, false); }
TGT:
Inquire a list of customer own arrangement in specific status.
PRED:
Inquire a list of customer own modification arrangement in specific status.
test 샘플별 bleu-4:  73.49
========================================================================================================================
SRC:
public String getArrKindCd(){ return arrKndCd; }
TGT:
Inquire the arrangement kind code.
PRED:
Inquire the arrangement kind code.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaActorRolePSvcSrchOut clone(){ try{ CaActorRolePSvcSrchOut object= (CaActorRolePSvcSrchOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(AsmImpl asm) { // 1. 보조명세 저장 할 Map 생성 Map<String, String> subInfoMap = new HashMap<String, String>(); // 2. 보조명세정보 조회(캐시로부터) IValueObject subInfo = getSubInfoCache(asm); // 3. 조회된 보조명세정보가 없으면 빈 Map 리턴 if(subInfo == null) { return subInfoMap; } // 4. 값이 null이 아닌 정보를 Map에 저장 for(Entry<String,Object> entry : subInfo.getFieldValues().entrySet()) { if(AsmSubInfo.FIELDS.get(entry.getKey())==null) { continue; } if(entry.getValue()!=null) { subInfoMap.put(entry.getKey(), String.valueOf(entry.getValue())); } } return subInfoMap; }
TGT:
Inquire entire extended information of subsidiary information(CTI) as MAP type.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  58.77
========================================================================================================================
SRC:
public void terminateArrCustRelation(ArrCustRelTrmntnIn in) throws BizApplicationException { if(ArrCustRelEnum.MAIN_CONTRACTOR.getValue().equals(in.getArrCustRelCd())){ throw new BizApplicationException("AAPDPE0104"); } super.terminateArrCustRelation(in); }
TGT:
Terminate arrangement customer relationship.
PRED:
It terminate arrangement customer relation
test 샘플별 bleu-4:  35.93
========================================================================================================================
SRC:
public CrncyGetOut getCurrency(String crncyCd) throws BizApplicationException { _checkQueryInputArgument(crncyCd); CmCrncyCdMIO outParm = _selectCurrencyInformation(crncyCd, _getCmnContext().getStandardInstCode()); if (outParm == null) { return null; } return _setCurrencyInformationToOutput(outParm); }
TGT:
It inquiries the Currency Information by currency code.
PRED:
It inquiries the Currency Information by currency code.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, ArrIssmdaImpl arrIssmdaImpl, String txDt, Integer txSeqNbr) throws BizApplicationException { // null check if (StringUtils.isEmpty(xtnAtrbtNm)){ return; } ArArrIssmdaSIO sqlIO = null; // 1.기존 보조명세 캐시 조회결과에 따라 insert/update 판단 ArrIssmdaSubInfo oldCache = (ArrIssmdaSubInfo) getSubInfoCache(arrIssmdaImpl); if (oldCache == null) { sqlIO = new ArArrIssmdaSIO(); sqlIO.setArrIssmdaTpCd(arrIssmdaImpl.getArrIssmdaTpCd()); sqlIO.setArrIssmdaInhrncId(arrIssmdaImpl.getArrIssmdaInhrncId()); // 빈 이력 생성 --> undo 시 확장속성 저장 이전으로 속성값을 원복시키기 위함 _saveArArrIssmdaSubHEmpty(arrIssmdaImpl, txDt, txSeqNbr); // 입력된 속성명/속성값을 DBIO VO에 set DtoUtils.setSubInfoIO(xtnAtrbtNm, xtnAtrbtCntnt, sqlIO); _getArArrIssmdaSDso().insert(sqlIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(xtnAtrbtNm, xtnAtrbtCntnt,
TGT:
Save an asset subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> subInfoMap, ArrTxCore arrTx) throws BizApplicationException{ _getArrTxSubInfoBiz().saveSubInfo(subInfoMap, (ArrTxImpl)arrTx); }
TGT:
Save the appraisal thing subsidiary information using map.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  6.11
========================================================================================================================
SRC:
public AssetTxBsicInfoIO getBasicInfo() throws BizApplicationException { if(assetTxBasicCache == null) { return null; } AssetTxBsicInfoIO assetTxBsicInfoIO = new AssetTxBsicInfoIO(); DtoCoreUtils.setSubInfoIO(assetTxBasicCache, assetTxBsicInfoIO); return assetTxBsicInfoIO; }
TGT:
It inquires basic information of insurance.
PRED:
It inquires basic information of security interest.
test 샘플별 bleu-4:  68.04
========================================================================================================================
SRC:
public BfCndCndRelSvcIn clone(){ try{ BfCndCndRelSvcIn object= (BfCndCndRelSvcIn)super.clone(); object.aplyDt = (bxm.omm.format.wrapper.DateFormattedWrapper)this.aplyDt.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public RoleMgmtSvcGetRoleScrnRelListOut clone(){ try{ RoleMgmtSvcGetRoleScrnRelListOut object= (RoleMgmtSvcGetRoleScrnRelListOut)super.clone(); if ( this.tblNm== null ) object.tblNm = null; else{ java.util.List<bankware.corebanking.common.role.service.dto.RoleMgmtSvcGetRoleScrnRelOut> clonedList = new java.util.ArrayList<bankware.corebanking.common.role.service.dto.RoleMgmtSvcGetRoleScrnRelOut>(tblNm.size()); for( bankware.corebanking.common.role.service.dto.RoleMgmtSvcGetRoleScrnRelOut item : tblNm ){ clonedList.add( (bankware.corebanking.common.role.service.dto.RoleMgmtSvcGetRoleScrnRelOut)item.clone()); } object.tblNm = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public PymntArrOpnSvcOut clone(){ try{ PymntArrOpnSvcOut object= (PymntArrOpnSvcOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public PntCndImpl getCnd(PntCndIn in) throws BizApplicationException { // 조건 오브젝트 생성 및 초기화 // Get condition bean and initialize PntCndImpl cnd = new PntCndImpl(this, in); cnd.initialize(); // Return condition return cnd; }
TGT:
This Method create a condition object. condition information initialization. condition object has condition defined in benefit or common condition information.
PRED:
This Method create a condition object. condition information initialization. condition object has condition defined in product or common condition information.
test 샘플별 bleu-4:  86.56
========================================================================================================================
SRC:
public boolean checkDtoAttribute(Object obj) throws BizApplicationException { return _getDtoValidation().checkDtoAttribute(obj, 'I'); }
TGT:
DTO input/output validation.
PRED:
DTO input/output validation.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, ArrIssmdaImpl arrIssmdaImpl, String txDt, Integer txSeqNbr) throws BizApplicationException { // null check if (StringUtils.isEmpty(xtnAtrbtNm)){ return; } ArArrIssmdaSIO sqlIO = null; // 1.기존 보조명세 캐시 조회결과에 따라 insert/update 판단 ArrIssmdaSubInfo oldCache = (ArrIssmdaSubInfo) getSubInfoCache(arrIssmdaImpl); if (oldCache == null) { sqlIO = new ArArrIssmdaSIO(); sqlIO.setArrIssmdaTpCd(arrIssmdaImpl.getArrIssmdaTpCd()); sqlIO.setArrIssmdaInhrncId(arrIssmdaImpl.getArrIssmdaInhrncId()); // 빈 이력 생성 --> undo 시 확장속성 저장 이전으로 속성값을 원복시키기 위함 _saveArArrIssmdaSubHEmpty(arrIssmdaImpl, txDt, txSeqNbr); // 입력된 속성명/속성값을 DBIO VO에 set DtoUtils.setSubInfoIO(xtnAtrbtNm, xtnAtrbtCntnt, sqlIO); _getArArrIssmdaSDso().insert(sqlIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(xtnAtrbtNm, xtnAtrbtCntnt,
TGT:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public BigDecimal getTimeoutScnd(){ return timeoutScnd; }
TGT:
Inquire Timeout Second.
PRED:
Inquire Timeout Second.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isValid(String type) { return ( "B".equalsIgnoreCase(type) || "C".equalsIgnoreCase(type) ) ; //added by Roh(change to simplify) }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  16.68
========================================================================================================================
SRC:
public AsmBsicInfoIO changeAsmStatus(String asmId,String asmStsCoreEnum, String rjctdRsnCoreEnum, String rjctdRsnCntnt) throws BizApplicationException { //1.조회 AsmBsicInfoIO in = getBasicInformation(asmId); //2.변경. AmAsmMIO amAsmMIO = _setAmAsmMIO(in, asmStsCoreEnum, rjctdRsnCoreEnum, rjctdRsnCntnt); _getAmAsmMDso().updateTerminate(amAsmMIO); //3.상태이력등록 _insertStsHistory(amAsmMIO); return _getBasicInfomation(amAsmMIO); } /** * 심사기본 상태변경 * <pre> * </pre> * @param in : (required) 심사식별자 * @param asmStsCd : (required) 심사상태코드 * @return AsmBsicInfoIO : {@link AsmBsicInfoIO}
TGT:
Change assessment status
PRED:
change assessment status
test 샘플별 bleu-4:  70.71
========================================================================================================================
SRC:
public boolean isExistArrScrtyIntRelation(String arrScrtyIntRelCd, String scrtyIntId, String baseDt) throws BizApplicationException { return _getArrScrtyIntRelBiz().isExistArrScrtyIntRelation(arrScrtyIntRelCd, scrtyIntId, baseDt, this); } /** * <div class='en'> * @description * <pre> * Register arrangement-security interest relation. * </pre> * @note {@link ArrScrtyIntRelRgstrnIn} - required fields : scrtyIntId, arrScrtyIntRelCd, relStartDt, txDt, txSeqNbr, arrScrtyIntRelStsRsnCd * </div> * * <div class='ko'> * @description * <pre> * 계약설정관계를 등록한다. * </pre> * @note {@link ArrScrtyIntRelRgstrnIn}
TGT:
Inquire existence of arrangement/security interest relation.
PRED:
Inquire existence of arrangement/security interest relation.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public PdTemplateQuerySvcGetCndGrpTmpltDSubOut clone(){ try{ PdTemplateQuerySvcGetCndGrpTmpltDSubOut object= (PdTemplateQuerySvcGetCndGrpTmpltDSubOut)super.clone(); if ( this.rngCndBaseVal==null ) object.rngCndBaseVal = null; else object.rngCndBaseVal = (bankware.corebanking.product.service.dto.PdTemplateQuerySvcGetCndGrpTmpltDRngBaseValOut)this.rngCndBaseVal.clone(); if ( this.listCndBaseVal== null ) object.listCndBaseVal = null; else{ java.util.List<bankware.corebanking.product.service.dto.PdTemplateQuerySvcGetCndGrpTmpltDListBaseValOut> clonedList = new java.util.ArrayList<bankware.corebanking.product.service.dto.PdTemplateQuerySvcGetCndGrpTmpltDListBaseValOut>(listCndBaseVal.size()); for( bankware.corebanking.product.service.dto.PdTemplateQuerySvcGetCndGrpTmpltDListBaseValOut item : listCndBaseVal ){ clonedList.add( (bankware.corebanking.product.service.dto.PdTemplateQuerySvcGetCndGrpTmpltDListBaseValOut)item.clone()); } object.listCndBaseVal = clonedList; } if ( this.cndBtwnRel== null ) object.cndBtwnRel = null; else{ java.util.List<bankware.corebanking.product.service.dto.PdTemplateQuerySvcGetCndGrpTmpltDCndRelOut> clonedList = new java.util.ArrayList<bankware.corebanking.product.service.dto.PdTemplateQuerySvcGetCndGrpTmpltDCndRelOut>(cndBtwnRel.size()); for( bankware.corebanking.product.service.dto.PdTemplateQuerySvcGetCndGrpTmpltDCndRelOut item : cndBtw
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, ScrtyIntCore scrtyInt, String txDt, Integer txSeqNbr) throws BizApplicationException { _getScrtyIntSubInfoBiz().saveSubInfo(xtnAtrbtNm, xtnAtrbtCntnt, txDt, txSeqNbr, (ScrtyIntImpl) scrtyInt); }
TGT:
Save an insurance subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public List<InterestCalculationSection> apply(ApplyInterestCalculationSectionExceptionIn in, List<InterestCalculationSection> intCalIntervals) throws BizApplicationException { final String balOvrduBaseDt = in.getBalOvrduBaseDt(); final String balOvrduStartDt = in.getBalOvrduStartDt(); final String holidyDfrdBalOvrduBaseDt = in.getHolidyDfrdBalOvrduBaseDt(); for (InterestCalculationSection interval : intCalIntervals) { List<CalculationType> typeList = new ArrayList<>(); for (CalculationType type : interval.getCalTps()) { typeList.add(type); // 이자계산유형구분 = 315 // AND 계산시작년월일 = 잔액연체시작일 if ("315".equals(type.getIntCalTpCd()) && type.getCalStartDt().equals(balOvrduStartDt)) { CalculationType t1 = type.clone(); t1.setIntCalTpCd("101"); // 약정이자 t1.setCalStartDt(balOvrduBaseDt); // 잔액연체기준일 t1.setCalEndDt(holidyDfrdBalOvrduBaseDt); // 휴일이연잔액연체기준일 typeList.add(t1); } } // 변경된 유형 반영 interval.setCalTps(typeList); } return intCalIntervals; }
TGT:
Change status of arrangement activity into "Applied". Available next status is managed by ArrActvtyMapStsChngDflt and it throws error if new status is not available.
PRED:
Change the status of arrangement into "Applied", while change product of arrangement based on product code input. Following additional arrangement information can be registered. 1) Account number 2) Whether if created mandatory condition automatically or not 3) A list of arrangement level condition 4) A list of arrangement relation information 5) A list of arrangement extended attribute
test 샘플별 bleu-4:  4.66
========================================================================================================================
SRC:
static boolean isValid(String value) throws BizApplicationException { if(!StringUtils.isEmpty( value)) { for (ScrtyIntStsChngRsnEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } throw new BizApplicationException("AAPATE0028", new Object[] {value, "@scrtyIntStsCd"});//({0}) is invalid {1}. } return true; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void remove(String instCd, String agrmntTpCd) throws BizApplicationException { //check required inputs if(StringUtils.isEmpty(instCd)){ throw new BizApplicationException("AAPCME0006", new String[] {"@instCd"}); }else if(StringUtils.isEmpty(agrmntTpCd)){ throw new BizApplicationException("AAPCME0006", new String[] {"@agrmntTpCd"}); } CaAtCustAgrmntMIO atCustAgrmntMIO = _getAtCustAgrmntMDso().select(instCd, agrmntTpCd); if(atCustAgrmntMIO == null){ throw new BizApplicationException("AAPATE0120"); } _getCaCmnContext().setHeaderColumn(atCustAgrmntMIO); atCustAgrmntMIO.setInstCd(instCd); _getAtCustAgrmntMDso().delete(atCustAgrmntMIO); }
TGT:
It deletes the document notice relation information. Needs caution as it actually deletes the information.
PRED:
It deletes the customer agreement code information that matches the input institution code and agreement type code. It actually deletes the information.
test 샘플별 bleu-4:  20.62
========================================================================================================================
SRC:
public List<StlmntDtlIO> calculate(IntCalculatorIO intCalculatorIO) throws BizApplicationException { /* * check interest calculation condition */ _validateCommonInfo(intCalculatorIO); // For interest return StlmntDtlIO rtnStlmntDtlIO = new StlmntDtlIO(); /* * Make the target list of interest calculation */ List<StlmntCalcnDtlIO> stlmntCalcnDList = _makeSettlement(intCalculatorIO, rtnStlmntDtlIO); /* * Make the list of settlement result and return it */ List<StlmntDtlIO> stlmntDtlIOList = super.makeInterestSettlementInformation(intCalculatorIO, stlmntCalcnDList, CalcnBaseAmtTpEnum.ACMLTD_AMT.getValue(), rtnStlmntDtlIO); return stlmntDtlIOList; }
TGT:
This method calculates the interest of account accordance with type of interest transaction. It must be performed after executing normally the createCalculator method.
PRED:
This method provides main business flow for calculating tax. Business Flow : 1) Get calculator class by tax calculation way defined in institution parameter 2) Make common VO for calculating the tax 3) Calculate tax actually
test 샘플별 bleu-4:  4.74
========================================================================================================================
SRC:
public ArArrAplyIntRtDIO select(ArArrAplyIntRtDIO arArrAplyIntRtDIO) { return _getArArrAplyIntRtD().select(arArrAplyIntRtDIO); }
TGT:
It get a http header properties.
PRED:
It get a http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaXpExtrnlIntrfcMsgInfoDIO select(CaXpExtrnlIntrfcMsgInfoDIO xpExtrnlIntrfcMsgInfoDIO) { return _getCaXpExtrnlMsgInfoD().select(xpExtrnlIntrfcMsgInfoDIO); }
TGT:
It get a http header properties.
PRED:
It get a http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean checkCode(String cdNbr, Map<String, Object> supplInfoVal) throws BizApplicationException { String cd = ""; if(supplInfoVal.get(CCM03.CD) != null) { cd = supplInfoVal.get(CCM03.CD).toString(); } AmtTpDtlIO amtTpDtlIO = _getAmtTpXtn().getAmountType(cd); if(amtTpDtlIO == null || !amtTpDtlIO.getMostUpAmtTpCd().equals(AmtTpEnum.FEE.getValue())) { return false; } return true; }
TGT:
This method check the code number. If code is exist return true, else return false.
PRED:
It check code number & code value by cdDtlIO DTO. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter.
test 샘플별 bleu-4:  4.82
========================================================================================================================
SRC:
public CaLeasePrtctnMgmtSvcRemoveLeasePrtctnIn clone(){ try{ CaLeasePrtctnMgmtSvcRemoveLeasePrtctnIn object= (CaLeasePrtctnMgmtSvcRemoveLeasePrtctnIn)super.clone(); if ( this.leasePrtctnList== null ) object.leasePrtctnList = null; else{ java.util.List<bankware.corebanking.configurationadmin.asset.service.dto.CaLeasePrtctnMgmtSvcGetLeasePrtctn> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.asset.service.dto.CaLeasePrtctnMgmtSvcGetLeasePrtctn>(leasePrtctnList.size()); for( bankware.corebanking.configurationadmin.asset.service.dto.CaLeasePrtctnMgmtSvcGetLeasePrtctn item : leasePrtctnList ){ clonedList.add( (bankware.corebanking.configurationadmin.asset.service.dto.CaLeasePrtctnMgmtSvcGetLeasePrtctn)item.clone()); } object.leasePrtctnList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void registerAssetCustRel(AssetCustRelRgstrnIn rgstrnIn) throws BizApplicationException{ // 등록할 고객의 상태 검증 _checkCustAlive(rgstrnIn.getCustId()); super.registerAssetCustRel(rgstrnIn); }
TGT:
Register relation between asset and customer.
PRED:
Register relation between asset and customer.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CashChargeSvcOut clone(){ try{ CashChargeSvcOut object= (CashChargeSvcOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<StlmntDtlIO> calculate(IntCalculatorIO intCalculatorIO) throws BizApplicationException { /* * Get lists of target of interest calculation */ List<StlmntCalcnDtlIO> stlmntCalcnDList = _calculateInterest(intCalculatorIO); if(logger.isDebugEnabled()) { logger.debug("##j stlmntDtlIOList: {} ", stlmntCalcnDList); } /* * Make settlement result of the interest */ List<StlmntDtlIO> stlmntDtlIOList = super.makeInterestSettlementInformation(intCalculatorIO, stlmntCalcnDList, CalcnBaseAmtTpEnum.BALANCE.getValue(), null); return stlmntDtlIOList; }
TGT:
This method provides main business flow for calculating tax. Business Flow : 1) Get calculator class by tax calculation way defined in institution parameter 2) Make common VO for calculating the tax 3) Calculate tax actually
PRED:
This method calculates the interest of account accordance with type of interest transaction. It must be performed after executing normally the createCalculator method.
test 샘플별 bleu-4:  4.25
========================================================================================================================
SRC:
public List<ArrIntRt> getListArrIntRt(Arrangement arr, PdIntRtStrctrClCdEnum pdIntRtStrctr, String baseDt) throws BizApplicationException { if (StringUtils.isEmpty(baseDt)) { baseDt = ArrCmnUtil.getRckngDt(_getCmnContext()); } ArrIntRtIn arrIntRtIn = new ArrIntRtIn(); arrIntRtIn.setArr(arr); arrIntRtIn.setPdIntRtStrctr(pdIntRtStrctr); arrIntRtIn.setPrcsDt(baseDt); arrIntRtIn.setCrncyCd(arr.getCrncyCd()); arrIntRtIn.setStartDt(baseDt); arrIntRtIn.setEndDt(DateUtils.getDateDayAfter(CCM01.ONE,baseDt)); arrIntRtIn.setIntClcltYn(CCM01.NO); arrIntRtIn.setIsGenerate(false); return getListArrIntRt(arrIntRtIn); }
TGT:
Inquire interest rate applied to the arrangement.
PRED:
Inquire interest rate currently applied to the arrangement.
test 샘플별 bleu-4:  59.69
========================================================================================================================
SRC:
static boolean isValid(String value){ for (SndRcvTrgtDscdEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Pd getPd() { return pd; }
TGT:
Methods to create a product object Product information initialization. Use inputed product code, apply date to create a product object and return it if the product does not exist, return null
PRED:
Methods to create a product object Product information initialization. Use inputed product code, apply date to create a product object and return it if the product does not exist, return null
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ActorRgstSvcCtcptXtnIn clone(){ try{ ActorRgstSvcCtcptXtnIn object= (ActorRgstSvcCtcptXtnIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void removeExtrnlIntrfcMsgAuthInfo(CaExtrnlIntrfcMsgAuthInfoIO msgAuthInfo) throws BizApplicationException { _checkInputValidation(msgAuthInfo); int result = _getXpExtrnlAuthInfoDDso().delete(_setInputValidation(msgAuthInfo)); if(result == 0) throw new BizApplicationException("AAPSTE0047", null); // Failed to change the information. }
TGT:
It removes list of External Interface Message Authentication Information.
PRED:
It removes external interface message authentication information.
test 샘플별 bleu-4:  18.37
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> assetTxSubInfoMap, AssetTxCore assetTx) throws BizApplicationException { _getAssetTxSubInfoBiz().saveMapSubInfo(assetTxSubInfoMap, (AssetTxImpl) assetTx); }
TGT:
Save the appraisal thing subsidiary information using map.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  6.11
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, CustRprsnImpl custRprsnImpl) throws BizApplicationException { // 0. null check if (StringUtils.isEmpty(xtnAtrbtNm)) { return; } // 1. 보조명세 캐시 조회결과에 따라 insert/update 판단 AtCustRprsnSIO subInfoIO = getSubInfoCache(custRprsnImpl); if (subInfoIO == null) { // DBIO VO new instance subInfoIO = new AtCustRprsnSIO(); subInfoIO.setCustRprsnId(custRprsnImpl.getCustRprsnId()); // 입력된 속성명과 속성값을 DBIO VO에 set DtoUtils.setSubInfoIO(xtnAtrbtNm, xtnAtrbtCntnt, subInfoIO); // insert _getAtCustRprsnSDso().insert(subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(xtnAtrbtNm, xtnAtrbtCntnt, subInfoIO)) { return; } // 변경전 이력 저장 _saveSubInfoHst(custRprsnImpl, subInfoIO); // 입력된 속성명/속성값을 DBIO VO에 set DtoUtils.setSubInfoIO(xtnAtrbtNm, xtnAtrbtCntnt, subInfoIO); // update _getAtCustRprsnSDso().update(subInfoIO); } // 2. 캐시 저장
TGT:
This method save settlement subsidiary calculation detail information using xtnAtrbtNm and xtnAtrbtCntnt
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, CustImpl custImpl) throws BizApplicationException { // 0. null check if (StringUtils.isEmpty(xtnAtrbtNm)) { return; } // 1. 보조명세 캐시 조회결과에 따라 insert/update 판단 AtCustSIO subInfoIO = getSubInfoCache(custImpl); if (subInfoIO == null) { // DBIO VO new instance subInfoIO = new AtCustSIO(); subInfoIO.setCustId(custImpl.getCustId()); // 입력된 속성명과 속성값을 DBIO VO에 set DtoUtils.setSubInfoIO(xtnAtrbtNm, xtnAtrbtCntnt, subInfoIO); // insert _getAtCustSDso().insert(subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(xtnAtrbtNm, xtnAtrbtCntnt, subInfoIO)) { return; } // 변경전 이력 저장 _saveSubInfoHst(custImpl, subInfoIO); // 입력된 속성명/속성값을 DBIO VO에 set DtoUtils.setSubInfoIO(xtnAtrbtNm, xtnAtrbtCntnt, subInfoIO); // update _getAtCustSDso().update(subInfoIO); } // 2. 캐시 저장 custImpl.setSubInfoCache(subInfoIO); }
TGT:
Save an asset thing subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public String getSubInfo(String xtnAtrbtNm, AprslCore aprslCore, Integer aprslThingSeqNbr) throws BizApplicationException { return _getAprslThingSubInfoBiz().getSubInfo(xtnAtrbtNm, (AprslImpl)aprslCore, aprslThingSeqNbr); }
TGT:
This method inquires settlement subsidiary detail information list (inquire all subsidiary detail information of a given settlement master by using the key value other than the detail sequence number).
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  2.95
========================================================================================================================
SRC:
public void changeArrStatus(ArrStsChngIn arrStsChngIn, ArrStsChngAdtnlIn arrStsChngAdtnlIn) throws BizApplicationException { _getArrRealCoreFundamentalAgent().changeArrStatus(arrStsChngIn, arrStsChngAdtnlIn, false, this); }
TGT:
Change arrangement status code with accepted status and apply additional information change.
PRED:
Change arrangement status code with accepted status.
test 샘플별 bleu-4:  41.17
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(ActorImpl actorImpl) throws BizApplicationException { Map<String, String> subInfoMap = new HashMap<String, String>(); // 1. 보조명세 캐시 조회 IValueObject subInfo = getSubInfoCache(actorImpl); // 2. 보조명세 캐시가 null인 경우, 빈 Map 리턴 if (subInfo == null) { return subInfoMap; } // 3. 보조명세 캐시를 Map으로 convert for (Entry<String, Object> entry : subInfo.getFieldValues().entrySet()) { // Casting 시 Null 방지 if (entry.getValue() != null) { subInfoMap.put(entry.getKey(), String.valueOf(entry.getValue())); } } return subInfoMap; }
TGT:
This method provide settlement subsidiary calculation detail information.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  10.6
========================================================================================================================
SRC:
public int deleteServiceProfileAttribute(CaSrvcPrflAtrbtInfoIO in) throws BizApplicationException { _checkServiceProfileAttributeName(in); // status update for SrvcPrflAtrbtD this._deleteSvSrvcPrflAtrbtD(in); // status update for SvInstSrvcPrflD this._deleteSvInstSrvcPrflD(in); return 0; }
TGT:
Delete the service profile attribute.
PRED:
Delete the service profile attribute.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public AplctnRgstSvcGetOut clone(){ try{ AplctnRgstSvcGetOut object= (AplctnRgstSvcGetOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<InsrncRltdAssetOut> getListRelatedAsset(String insrncId) throws BizApplicationException { List<AsAssetInsrncRIO> asAssetInsrncRList = _getAsAssetInsrncRDso().selectAsset(_getCmnContextCore().getInstCode(), insrncId); List<InsrncRltdAssetOut> rltdAssetList = new ArrayList<InsrncRltdAssetOut>(); for(AsAssetInsrncRIO item : asAssetInsrncRList) { InsrncRltdAssetOut rltdAsset = new InsrncRltdAssetOut(); rltdAsset.setAssetId(item.getAssetId()); rltdAsset.setAssetInsrncRelStsCd(item.getAssetInsrncRelStsCd()); rltdAsset.setRelStartDt(item.getRelStartDt()); rltdAsset.setRelEndDt(item.getRelEndDt()); rltdAssetList.add(rltdAsset); } return rltdAssetList; }
TGT:
It inquires lists of asset information related with insurance.
PRED:
Inquire list of asset related by security interest id.
test 샘플별 bleu-4:  19.96
========================================================================================================================
SRC:
public GlQuerySvcAcctgDtOut clone(){ try{ GlQuerySvcAcctgDtOut object= (GlQuerySvcAcctgDtOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void doServiceAction(String arrSrvcTpCd,ArrCndActionRequiredValue arrCndActionRequiredValue) throws BizApplicationException { if (!this.getArrangementCore().isReal()) return; switch (arrSrvcTpCd) { case "OpenDeposit": _doOpenValidation(); break; default: // there are no condition action for this condition ({0},{1}) on arrangement service ({2}) // 계약서비스 ({2})를 위한 조건 ({0},{1})의 행동은 유효하지 않습니다 throw new BizApplicationException("AAPARE0288" , new Object[]{this.getCndCd(),this.getCndCdNm(),arrSrvcTpCd}); } }
TGT:
Process the special action to process "Service Process Rule" related to specific service type. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which implements {@link ArrCndAction}.
PRED:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
test 샘플별 bleu-4:  89.33
========================================================================================================================
SRC:
public void getLogSeqNbr(CmnJrnzArea cmnJrnzArea, String chnlCd) throws BizApplicationException { logger.debug("<AC> AcctgJrnlCmnCustomImpl _getLogSeqNbr CmnJrnzArea logSeqNbr : {}", cmnJrnzArea.getLogSeqNbr()); //20210121 CmnJrnzArea의 로그일련번호가 이미 외부에서 채번된 상태이면 채번하지 않음. if(cmnJrnzArea.getLogSeqNbr()!=null && cmnJrnzArea.getLogSeqNbr().compareTo(BigDecimal.ZERO)!=0) { return; } String logSeqNbr = null; // 로그일련번호 셋팅 if(!_getCmnContext().isChannelAtm() && !_getCmnContext().isChannelTellerWindow()) { // if (!ChannelEnum.CD_ATM.getValue().equals(chnlCd) && // !ChannelEnum.TELLER_WINDOW.getValue().equals(chnlCd)) { //Double d = Math.random() * Double.parseDouble("999999999999999") + 1; Double d = new SecureRandom().nextDouble()*Double.parseDouble("999999999999999") + 1; logSeqNbr = String.valueOf(d.longValue()); } else { // 로그일련번호 채번 logSeqNbr = _getNbrg().getNumbering(NumberingCoreEnum.LOG_SEQUENCE_NUMBER.getValue()); //log sequence number } cmnJrnzArea.setLogSeqNbr(new BigDecimal(logSeqNbr)); if(logger.isDebugEnabled()){ logger.debug("## AcctgJrnlCmnCustomImpl > logSeqNbr : {}", logSeq
TGT:
This method creates general ledger log sequence number. It depends on the requirements of the site, the log sequence number numbering method of the General ledger may be applied differently.
PRED:
This method creates general ledger log sequence number. It depends on the requirements of the site, the log sequence number numbering method of the General ledger may be applied differently.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaClSysIO saveClassificationHierarchy(CaClSysIO in) throws BizApplicationException { CaCmClHrarcyMIO daoIn = _getInputClassificationHierarchy(in); CaCmClHrarcyMIO cmClHrarcyMIO = _getCmClHrarcyMDso().selectWithStatusAll(daoIn.getClHrarcyId()); if (cmClHrarcyMIO == null) { _getCmClHrarcyMDso().insert(daoIn); } else { _getCmClHrarcyMDso().update(daoIn); } // save multi language CaTrnsfrLngSaveListIn mltLngIn = new CaTrnsfrLngSaveListIn(); List<CaTrnsfrLngSaveIn> mltLngListIn = new ArrayList<CaTrnsfrLngSaveIn>(); CaTrnsfrLngSaveIn mltUseLng = new CaTrnsfrLngSaveIn(); mltUseLng.setTrnsfrKndCd(CCM01.TRANS_CL_HRARCY); mltUseLng.setTrnsfrOriginKeyVal(in.getClHrarcyId()); mltUseLng.setQryUnitCd(in.getClHrarcyId()); mltUseLng.setLngCd(_getCmnContext().getLanguageCode()); mltUseLng.setTrnsfrRsltVal(in.getClHrarcyNm()); mltLngListIn.add(mltUseLng); if(!CCM01.LNG_ENG.equals(_getCmnContext().getLanguageCode())) { CaTrnsfrLngSaveIn mltEngLng = new CaTrnsfrLngSaveIn(); mltEngLng.setTrnsfrKndCd(CCM01.TRANS_CL_HRARCY); mltEngLng.setTrnsfrOriginKeyVal(daoIn.getClHrarcyId()); mltEngLng.setQryUnitCd(daoIn.getClHrarcyId()); mltEngLng.setLngCd(CCM01.LNG_ENG); mltEngLng.setTrnsfrRsltVal(in.getClHrarcyEngNm()); mltLngListIn.add(
TGT:
It saves classification hierarchy.
PRED:
It saves classification hierarchy.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ActorRoleActorRoleRIO> getListActorRoleActorRoleRelation() throws BizApplicationException { return getActor().getListActorRoleActorRoleRelation(); }
TGT:
Inquire effective and normal status actor role-actor role relation list on transaction date.
PRED:
Inquire effective and normal status actor role-actor role relation list on transaction date.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<? extends IOmmObject> getListDataForConsistency(Integer pgNbr, Integer pgCnt) throws BizApplicationException { int pageOffSet = PaginationCoreUtils.getPgOffset(pgNbr, pgCnt); return _getDstbCnstncyCmNbrgRuleMDso().selectListForConsistency(pageOffSet, pgCnt); }
TGT:
Validate Query for Distribution Validation
PRED:
Validate Query for Distribution Validation
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getUnmaskId() throws BizApplicationException { return _getContextHeader().getUnmaskId(); }
TGT:
Unmask Id inquiry from standard message
PRED:
Unmask Id inquiry from standard message
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void deleteDocClassificationInfo(String instCd, CaDocClIO docClIO) throws BizApplicationException { _getDocCl().delete(instCd, docBsicIO, docClIO); }
TGT:
It removes document classification.
PRED:
It removes document classification.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrCashFlowIO> simulateArrCashFlowScheduleForEarlyRpymnt(ArrReal arr, String baseDt, BigDecimal rpymntAmt, IntCalcnLnRsltOut intCalcRsltOut) throws BizApplicationException { if(StringUtils.isEmpty(baseDt)) { baseDt = _getCmnContext().getTxDate(); } BigDecimal lnInstlmntAmt = intCalcRsltOut.getLnInstlmntAmt(); if (logger.isDebugEnabled()) { logger.debug("## simulateArrCashFlowScheduleForEarlyRpymnt -> intCalcRsltOut = {} :: ", intCalcRsltOut.getFieldValues()); logger.debug("## simulateArrCashFlowScheduleForEarlyRpymnt -> rpymntAmt = {} :: ", rpymntAmt); logger.debug("## simulateArrCashFlowScheduleForEarlyRpymnt -> lnInstlmntAmt = {} :: ", lnInstlmntAmt); logger.debug("## simulateArrCashFlowScheduleForEarlyRpymnt -> earlyRepaymentTgtAmt = {} :: ", intCalcRsltOut.getEarlyRepaymentTgtAmt()); } //조기상환금액 Row 추가 BigDecimal earlyRepaymentTgtAmt = intCalcRsltOut.getEarlyRepaymentTgtAmt(); // 조기상환대상금액 BigDecimal calcnBaseAmt = earlyRepaymentTgtAmt; if (intCalcRsltOut.getLnInstlmntAmtCalcnBal() != null) { calcnBaseAmt = calcnBaseAmt.add(intCalcRsltOut.getLnInstlmntAmtCalcnBal()); // 할부금계산잔액 } ArrCashFlowIO arrCashFlow = new ArrCashFlowIO(); arrCashFlow.setInstCd(arr.getInstCd()); arrCashFlow.setArrId(arr.getArrId()); arrCashFlow.setSctnSeqNbr(0); arrCashFlow.setSeqNbr(0); /** Amount Type Code(Early Repayment Fee) */ arrCashFlow
TGT:
Simulate a repayment schedule for loan condition change (early repayment).
PRED:
Simulate a repayment schedule for loan condition change (early repayment).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<CaInstSrvcIO> getListInstService(String instCd, String cmpntCd, String baseDt) throws BizApplicationException { String sInstCd = instCd; if (StringUtils.isEmpty(instCd)) sInstCd = _getCaCmnContext().getInstCode(); List<CaSvInstSrvcMIO> svInstSrvcMIOList; List<CaInstSrvcIO> instSrvcList = new ArrayList<CaInstSrvcIO>(); if (baseDt == null) baseDt = CCM01.MIN_DATE; if (StringUtils.isEmpty(cmpntCd)) { svInstSrvcMIOList = _getSvInstSrvcMDso().selectListByInstCdAndBaseDt(sInstCd, baseDt); } else { CaSvInstSrvcMIO svInstSrvcMIO = new CaSvInstSrvcMIO(); svInstSrvcMIO.setInstCd(sInstCd); svInstSrvcMIO.setCmpntCd(cmpntCd); svInstSrvcMIO.setAplyStartDt(baseDt); svInstSrvcMIOList = _getSvInstSrvcMDso().selectListByCmpntCd(svInstSrvcMIO); } for (CaSvInstSrvcMIO svInstSrvcMIO : svInstSrvcMIOList) { CaInstSrvcIO instSrvc = _setInstitutionService(svInstSrvcMIO); instSrvcList.add(instSrvc); } return instSrvcList; }
TGT:
inquiry institution service list
PRED:
inquiry institution service list by institution code of cmnContext (all service list) basic method reference : {@link #getListInstService(String, String, String)}
test 샘플별 bleu-4:  17.0
========================================================================================================================
SRC:
private BfCndTestSvcOut getCndGrpCd(BfCndTestSvcIn in) throws BizApplicationException { // Set input BfIn bfIn = new BfIn(); bfIn.setBfCd(in.getPdCd()); bfIn.setAplyDt(in.getAplyDt()); // BF 객체생성 Bf bf = _getBfMngr().getBf(bfIn); // 조건객체 생성 BfCnd bfCnd = bf.getCnd(in.getCndCd()); String output = bfCnd.getCndGrpCd(); BfCndTestSvcOut out = new BfCndTestSvcOut(); if (StringUtils.isEmpty(output)) { out.setChkYn(false); } else { out.setChkYn(true); out.setCntnt(output.toString()); } return out; }
TGT:
This method inquire condition group code.
PRED:
This method inquire condition group code.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Integer getCustCountByLoginIdNbr(String loginIdNbr, String paymentInstYn) throws BizApplicationException { return _getCustBsicXtnBiz().getCustCountCustByLoginIdentificationNumber(_getCmnContext().getInstCode(), loginIdNbr, paymentInstYn); }
TGT:
Inquire customers' information that matches the input login type code, login identification number, payment institution YN, page number and page count. It inquires the effective login information on transaction date.
PRED:
Inquire customers' information that matches the input login type code, login identification number, payment institution YN, page number and page count. It inquires the effective login information on transaction date.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrCashFlowIO> getListArrDueDateAdvent(String instCd, String deptId, String inqryStartDt, String inqryEndDt) throws BizApplicationException { return _getArrCashFlowBiz().getListArrDueDateAdvent(instCd, deptId, inqryStartDt, inqryEndDt); }
TGT:
Inquire the list of repayment schedules due for each department.
PRED:
Inquire a list of arrangement's due date advance history which was the specific between the specified period and currently not changed
test 샘플별 bleu-4:  9.09
========================================================================================================================
SRC:
public LnArrCndChngDtlInqryIn clone(){ try{ LnArrCndChngDtlInqryIn object= (LnArrCndChngDtlInqryIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CashTransitSvcAprvCashTransit clone(){ try{ CashTransitSvcAprvCashTransit object= (CashTransitSvcAprvCashTransit)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<StlmntDtlIO> calculate(IntCalculatorIO intCalculatorIO) throws BizApplicationException { if(logger.isDebugEnabled()) { logger.debug("##목표금액방식 intCalculatorIO: {} ", intCalculatorIO); } /* * Make the target list of interest calculation */ List<StlmntCalcnDtlIO> stlmntCalcnDList = _makeDemandDepositStlmnt(intCalculatorIO); /* * Calculate interest by accumulated amount */ super.calculateIntByAcmltd(intCalculatorIO.getArr(), intCalculatorIO.getCrncyCd(), stlmntCalcnDList); /** * 2018.04.30 (2018.06.19 적용) * 예보용 보험금지급공고일 이전 최종 결산기준일 구간에 적수 금액 변경 * 원금 -> 원리금 */ setInterestByDepositerInfoExtraction(intCalculatorIO, stlmntCalcnDList); /* * Make the list of settlement result and return it */ return super.makeInterestSettlementInformation(intCalculatorIO, stlmntCalcnDList, CalcnBaseAmtTpEnum.ACMLTD_AMT.getValue(), null); }
TGT:
This method provides main business flow for calculating tax. Business Flow : 1) Get calculator class by tax calculation way defined in institution parameter 2) Make common VO for calculating the tax 3) Calculate tax actually
PRED:
This method calculates the interest of account accordance with type of interest transaction. It must be performed after executing normally the createCalculator method.
test 샘플별 bleu-4:  4.25
========================================================================================================================
SRC:
public PswdChngMgmtSvcOut clone(){ try{ PswdChngMgmtSvcOut object= (PswdChngMgmtSvcOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrReal> getListArrBasedOnStsHistory(String custId, ArrCustRelEnum arrCustRelEnum, ArrStsEnum curArrSts, ArrStsEnum arrSts, String inqryStartDt,String inqryEndDt) throws BizApplicationException { return _getArrCustRelQryBizImpl().getArrRealListBasedOnArrStatusHistory(custId, arrCustRelEnum, null, null, null, null, curArrSts, arrSts, inqryStartDt, inqryEndDt); }
TGT:
Inquire specific department own (as accounting department) arrangements of specific product code whose status changed into specific status within inquiry period and currently in another specific status. (Paging) Inquire modification arrangement of inquired arrangement if hasVrtnArr is true.
PRED:
Inquire specific customer own (as main contractor) arrangements of specific product code whose status changed into specific status within inquiry period and currently in another specific status. Current Status / Base Status / Inquiry Period(Start Date / End Date) Approved / Applied / 1/1 ~ 3/1 : Get arrangement applied within 1/1 ~ 3/1 and approved currently. Arrangement whose status was changed into other status on 1/1 is not inquired. Active / Applied / 1/1 ~ 3/1 : Get arrangement applied within 1/1
test 샘플별 bleu-4:  25.97
========================================================================================================================
SRC:
public ActorDueDlgncInfo getDueDiligenceInfoDetail(String dueDlgncDscd, int dueDlgncSeqNbr) throws BizApplicationException { // due diligence information + extend information ActorDueDlgncInfo dueDlgncInfo = super.getDueDiligenceInfoDetailByEav(dueDlgncDscd, dueDlgncSeqNbr); // subsidiary information Map<String, String> subInfoMap = _getActorDueDlgncSubInfoBiz().getMapSubInfo(this, dueDlgncDscd, dueDlgncSeqNbr); if (dueDlgncInfo != null) { dueDlgncInfo.getDueDlgncXtnInfoMap().putAll(subInfoMap); } return dueDlgncInfo; }
TGT:
Inquire the actor's effective due diligence detail information which are due diligence basic, extended information and contact point information by the input due diligence distinction code. It inquires only the information of which due diligence status code is normal(01).
PRED:
Inquire the actor's certain due diligence detail information which are due diligence basic, extended information and contact point information by the input due diligence distinction code. It inquires only the information of which due diligence status code is normal(01).
test 샘플별 bleu-4:  93.37
========================================================================================================================
SRC:
public String checkPassword(String pswd) throws BizApplicationException{ //check required inputs if (StringUtils.isEmpty(pswd)) { throw new BizApplicationException("AAPCME0006", new String[] {"@pswd"}); } return _getStaffLoginBiz().checkPassword(getStaffBasicInfo(), pswd); }
TGT:
It checks if the input password equals the registered password of the main login information.
PRED:
It checks if the input password equals the registered password of the main login information.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArrCnd getArrCnd(PdCndEnum arrCndEnum) throws BizApplicationException { return (ArrCnd) super.getArrCndCore(arrCndEnum.getValue()); }
TGT:
Inquire effective arrangement condition by product condition ENUM. Detail function description refers to {@link #getArrCnd(String)}
PRED:
Inquire effective arrangement condition by product condition code. The returned condition object can be cast in to each specific type condition object such as {@link ArrCndLst} and {@link ArrCndRng}
test 샘플별 bleu-4:  23.77
========================================================================================================================
SRC:
public List<StlmntDtlIO> simulate(Arrangement arr, InterestTransactionTypeEnum intTxTp, List<StlmntDtlIO> intStlmntDtlList, Map<String, String> xtdInfo) throws BizApplicationException { if(logger.isDebugEnabled()) { logger.debug("HHH TaxCalculator : simulate"); } return super.simulate((ArrangementCore)arr, intTxTp.getValue(), intStlmntDtlList, xtdInfo); } // 비사용로직 주석처리 // private void _checkInputParameter(InterestTransactionTypeEnum intTxTp, int txSeqNbr, boolean smltn) throws BizApplicationException { // // if(!smltn && !InterestTransactionTypeEnum.DEPOSITOR_INFO_EXTRACTION.equals(intTxTp)) { // // 거래일련번호 필수입력 검증 // if (txSeqNbr == 0){ // // this transaction sequence number is not numbered in this transaction // throw new BizApplicationException("AAPSTE0117", null); // } // } // }
TGT:
This method provides an tax calculation simulation function Business Flow : 1) Get calculator class by tax calculation way defined in institution parameter 2) Make common VO for calculating the tax 3) Calculate tax actually
PRED:
This method provides an interest calculation simulation function Business Flow : 1) Get calculator class by tax calculation way defined in institution parameter 2) Make common VO for calculating the tax 3) Calculate tax actually
test 샘플별 bleu-4:  92.58
========================================================================================================================
SRC:
public PdRqstIntCalcnSmltnIn clone(){ try{ PdRqstIntCalcnSmltnIn object= (PdRqstIntCalcnSmltnIn)super.clone(); if ( this.schdlCntnt== null ) object.schdlCntnt = null; else{ java.util.List<bankware.corebanking.product.service.dto.PdRqstIntCalcnSmltnschdlList> clonedList = new java.util.ArrayList<bankware.corebanking.product.service.dto.PdRqstIntCalcnSmltnschdlList>(schdlCntnt.size()); for( bankware.corebanking.product.service.dto.PdRqstIntCalcnSmltnschdlList item : schdlCntnt ){ clonedList.add( (bankware.corebanking.product.service.dto.PdRqstIntCalcnSmltnschdlList)item.clone()); } object.schdlCntnt = clonedList; } if ( this.ovrduRt== null ) object.ovrduRt = null; else{ java.util.List<bankware.corebanking.product.service.dto.PdRqstIntCalcnSmltnAgrmntOvrduRtList> clonedList = new java.util.ArrayList<bankware.corebanking.product.service.dto.PdRqstIntCalcnSmltnAgrmntOvrduRtList>(ovrduRt.size()); for( bankware.corebanking.product.service.dto.PdRqstIntCalcnSmltnAgrmntOvrduRtList item : ovrduRt ){ clonedList.add( (bankware.corebanking.product.service.dto.PdRqstIntCalcnSmltnAgrmntOvrduRtList)item.clone()); } object.ovrduRt = clonedList; } if ( this.agrmntRt== null ) object.agrmntRt = null; else{ java.util.List<bankware.corebanking.product.service.dto.PdRqstIntCalcnS
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String executeWatchListFiltering(int txSeqNbr) throws BizApplicationException { if(txSeqNbr == CCM01.ZERO){ throw new BizApplicationException("AAPCME0006", new String[] {"@txSeqNbr"}); } //assemble watch list filtering input WatchListFilterIn watchListFilterIn = _assembleWatchListFilterIn(); //execute watch list filtering WatchListFilterRule watchListFilterRule = (WatchListFilterRule) CbbApplicationContext.getBean("WatchListFilterRuleSampleImpl"); //FIXME ActorDueDlgncRgstIn dueDlgncRgstIn = watchListFilterRule.executeWatchListFiltering(watchListFilterIn); String dueDlgncDscd = dueDlgncRgstIn.getDueDlgncDscd(); if(dueDlgncRgstIn == null || !DueDlgncDsEnum.EDD.getValue().equals(dueDlgncDscd)){ return null; } // separate subsidiary information from extend information Map<String, String> subInfoMap = _getActorDueDlgncSubInfoBiz().getMapSubInfoCrtn(dueDlgncRgstIn.getDueDlgncXtnInfoList()); Integer dueDlgncSeqNbr = null; //set transaction sequence number dueDlgncRgstIn.setStsChngTxSeqNbr(txSeqNbr); if (this.isDueDiligenceExist(dueDlgncDscd, DueDlgncStsEnum.NORMAL.getValue())) { //modify due diligence status(normal -> target) ActorDueDlgncMdfyIn dueDlgncMdfyIn = _convertDueDlgncRgstToMdfyIn(dueDlgncRgstIn); super.modifyDueDiligenceInfoByEav(dueDlgncMdfyIn, false); dueDlgncSeqNbr = dueDlgncMdfyIn.getDueDlgncSeqNbr(); } else if (this.isDueDiligenceExist(dueDlgncDscd, DueDlgncStsEnum
TGT:
It executes watch list filtering. If the actor is decided as a EDD target customer, due diligence information will be registered/modified.
PRED:
It executes watch list filtering. If the actor is decided as a EDD target customer, due diligence information will be registered/modified.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<XtnCdIO> getListCode(String cdNbr, Map<String, Object> supplInfoVal) throws BizApplicationException { List<AmtTpDtlIO> amtTpList = _getAmtTpXtn().getListLowerAmountType(AmtTpEnum.FEE.getValue()); List<XtnCdIO> xtnCdIOs = new ArrayList<XtnCdIO>(); String lngCd = supplInfoVal == null ? null : String.valueOf(supplInfoVal.get(InstParamEnum.LANGUAGE_CODE.getValue())); if( amtTpList == null || amtTpList.isEmpty() ) return xtnCdIOs; for(AmtTpDtlIO out : amtTpList) { if (!out.getUpAmtTpCd().equals(AmtTpEnum.FEE.getValue())) { XtnCdIO xtnCdIO = new XtnCdIO(); xtnCdIO.setCd(out.getAmtTpCd()); if(StringUtils.isEmpty(lngCd)) { xtnCdIO.setCdNm(_getTrnsfrLng().getTransferLanguage(CCM01.TRANS_CODE_VAL, CdNbrEnum.AMOUNT_TYPE_CD.getValue() + out.getAmtTpCd())); } else { xtnCdIO.setCdNm(_getTrnsfrLng().getTransferLanguage(CCM01.TRANS_CODE_VAL, CdNbrEnum.AMOUNT_TYPE_CD.getValue() + out.getAmtTpCd(), lngCd)); } xtnCdIOs.add(xtnCdIO); } } return xtnCdIOs; }
TGT:
It gets the customer agreement code list registered in the input institution.
PRED:
It make the combo-box of Code that meet the search condition. Combo-box is consisted of CaCmnCdCheckOut. (cdNbr, cd, cdNm, delYn, cdAbrvtnNm)
test 샘플별 bleu-4:  6.91
========================================================================================================================
SRC:
public void saveSubInfo(AprslRqstSubInfo subInfo, AprslRqstImpl aprslRqstImpl) throws BizApplicationException{ // 0. null check if(subInfo == null){ throw new BizApplicationException("AAPCME0006", new Object[] {AprslRqstSubInfo.class.getSimpleName()}); } // 1. 표준속성에 등록된 검증규칙을 통해 입력받은 확장속성내용 검증 for(Entry<String, Object> entry : subInfo.getFieldValues().entrySet()) { if(entry.getValue() != null) { _getAtrbtChk().checkStandardAttribute(entry.getKey(), String.valueOf(entry.getValue())); } } // 2. 보조원장 캐시 조회결과에 따라 insert/update 판단 AsAprslRqstSIO subInfoCache = getSubInfoCache(aprslRqstImpl); if(subInfoCache == null){ // DBIO VO new instance subInfoCache = new AsAprslRqstSIO(); subInfoCache.setAprslRqstId(aprslRqstImpl.getAprslRqstBasicCache().getAprslRqstId()); //PK setting // 입력된 I/F VO를 DBIO VO로 convert DtoUtils.setSubInfoIO(subInfo, subInfoCache); // 2-1. insert _getAsAprslRqstSDso().insert(subInfoCache); // 3. 캐시 저장 aprslRqstImpl.setAprslRqstSubInfoCache(subInfoCache); } else { // 속성값 변경여부
TGT:
This method save settlement subsidiary detail information using xtnAtrbtNm and xtnAtrbtCntnt.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
static boolean isValid(String value) throws BizApplicationException { if(!StringUtils.isEmpty(value)) { for (CaDocMakingTpEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } throw new BizApplicationException("AAPATE0028", new Object[] { value, "@docMkngTpCd" }); } return true; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public static boolean isValid(String value) throws BizApplicationException { if(!StringUtils.isEmpty(value)) { for (QuestionnaireIdEnum enumObject: values()) { if(enumObject.getValue().equals(value)) { return true; } } throw new BizApplicationException("AAPATE0028", new Object[] { value, "@qstnrId" }); } return true; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<PdPdRelOut> getRelBtwnPdsBackward(PdPdRelIn in) { /** * DataCache START */ String uKey = PdUtil.concatenateKeys(Arrays.asList(pdPdM.getInstCd(), getPdInfoDscd() + "Backward", pdPdM.getPdCd() + "Backward", in.getPdBtwnRelCd())); // Get cache data List<PdPdRelOut> list = _getPdDataCacheManager().getCacheData(DataCacheCoreConfig.PD_PD_RELATION_LIST_CACHE, uKey); if (CollectionCoreUtils.isEmpty(list)) { PdPdRelationBackwardListIn inDao = new PdPdRelationBackwardListIn(); inDao.setInstitutionId(pdPdM.getInstCd()); inDao.setPdCd(pdPdM.getPdCd()); inDao.setPdBetweenRelationCd(in.getPdBtwnRelCd()); inDao.setRelationPdInfoDscd(in.getRelPdInfoDscd()); inDao.setBaseDate(PdUtil.parseYyyyMMddHHmmssToDate(in.getAplyDt(), _getAplyTmString(in.getAplyTm()))); list = _convertToPdPdRelOut(_getPdCore().getListPdPdRelationBackward(inDao)); // 값이 없으면 Dummy 저장 if (CollectionCoreUtils.isEmpty(list)) { PdPdRelOut dummy = new PdPdRelOut(); dummy.setPdCd(CPD01.DUMMY); List<PdPdRelOut> dummyList = new ArrayList<>(); dummyList.add(dummy); _getPdDataCacheManager().saveCache(DataCacheCoreConfig.PD_PD_RELATION_LIST_CACHE, uKey, dummyList); } else { _getPdDataCacheManager().saveCache(DataCacheCoreConfig.PD_PD_RELATION_LIST_CACHE, uKey, list); } } // Cache에 저장되어 �
TGT:
This Method inquire of products backward by product relatipn type distinction code. inquire all products that contain input product. if there is no relation product information distinction code, all products inquire
PRED:
This Method inquire products of relation between products backward. inquire all products that contain input product. if there is no relation product information distinction code, all products inquire
test 샘플별 bleu-4:  66.35
========================================================================================================================
SRC:
public List<CaCntrlCntrMngrSvcGetTreeO> getControlCenterTree(String instCd) throws BizApplicationException { List<CaCntrlCntrMngrSvcGetTreeO> outList = new ArrayList<CaCntrlCntrMngrSvcGetTreeO>(); // 부점별 제어센터 노드 조회 _addParentNode(instCd, outList, CaCntrlCntrTpEnum.BRNCH_UNIT.getValue()); _addParentNode(instCd, outList, CaCntrlCntrTpEnum.TRMNL_UNIT.getValue()); return outList; }
TGT:
Inquiry control center tree.
PRED:
Inquiry control center tree.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Arr getArr() { return arr; }
TGT:
This method inquire customer account arrangement using account number and child arrangement sequence number. Detail function description refers to {@link #getArr(ArrRealGetIn)}.
PRED:
This method inquires a arrangement object using the arrangement ID(arrId) of the transaction.
test 샘플별 bleu-4:  8.08
========================================================================================================================
SRC:
public static boolean isValid(String value) throws BizApplicationException { for (ClHrarcyCoreEnum item : ClHrarcyCoreEnum.values()) { if (value.equals(item.getValue())) { return true; } } return false; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getSubInfo(String xtnAtrbtNm, Integer arrSrvcBlckngSeqNbr, Integer seqNbr, ArrRealImpl arrRealImpl) throws BizApplicationException { IValueObject subInfo = _getSubInfoCache(arrRealImpl, arrSrvcBlckngSeqNbr, seqNbr); if (subInfo == null) { return null; } Object xtnAtrbtCntnt = subInfo.get(xtnAtrbtNm); if (xtnAtrbtCntnt == null) { return null; } return String.valueOf(xtnAtrbtCntnt); }
TGT:
Inquire a specific subsidiary information of the appraisal request.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  78.61
========================================================================================================================
SRC:
public Integer getListDataCntForConsistency() throws BizApplicationException { return _getDstbCnstncyCmCdInstDDso().selectListCntForConsistency(); }
TGT:
Validate Query Row Count for Distribution Validation
PRED:
Validate Query Row Count for Distribution Validation
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void doServiceAction(String arrSrvcTpCd,ArrCndActionRequiredValue arrCndActionRequiredValue) throws BizApplicationException { switch (arrSrvcTpCd) { case "Disbursement": _doDisbursementAction(arrSrvcTpCd, arrCndActionRequiredValue); break; case "Repayment" : _doRepaymentAction(arrSrvcTpCd, arrCndActionRequiredValue); break; case "ReduceLimit" : _doReduceLoanLimtAction(arrSrvcTpCd, arrCndActionRequiredValue); break; case "IncreaseLimit" : _doIncreaseLoanLimitAction(arrSrvcTpCd, arrCndActionRequiredValue); break; case "IncreaseTermExtension" : _doIncreaseLoanLimitAction(arrSrvcTpCd, arrCndActionRequiredValue); break; default: // there are no condition action for this condition ({0},{1}) on arrangement service ({2}) // 계약서비스 ({2})를 위한 조건 ({0},{1})의 행동은 유효하지 않습니다 throw new BizApplicationException("AAPARE0288" , new Object[]{this.getCndCd(),this.getCndCdNm(),arrSrvcTpCd}); } }
TGT:
Process the special condition related actions for input service according to product condition value or negotiated value. For example, the "Required document" condition has the product required document type for loan application service. The arrangement condition action validate the required document type is received (presented) or not. Another example is the deposit open service, "Interest capitalization YN" condition dose the action to make an interest capitalization arrangement plan on next planed date. This method performs the function of performing product condition management rule registered on system. Implementation of condition management rule : - The rules that should be processed in
PRED:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
test 샘플별 bleu-4:  15.44
========================================================================================================================
SRC:
public BfCndMltplVdlnOut getCndMltplVdln(BfCndMltplVdlnIn in) throws BizApplicationException { ValidateInputCndValIn validationIn = new ValidateInputCndValIn(); validationIn.setInstitutionId(getInstCd()); validationIn.setCndList(_convertToPdCndMultipleValidationCndListInList(in.getCndList())); validationIn.setPdCd(bf.getPdCd()); validationIn.setBaseDate(PdUtil.parseStringToDate(in.getAplyDt())); ValidateInputCndValOut validateOut = _bfCndApi().validateInputCndVal(validationIn); return _convertValidateInputCndValOutToPdCndMltplVdlnOut(validateOut); }
TGT:
This Method verify benefit condition Error code description 00: Normal 02: No such condition defined under benefit 03: Condition value is not correct 04: Composing condition value is not correct 05: k condition must be inputed(when the condition is a complex condition) 99: It's composing condition(temporary code)
PRED:
This Method verify benefit condition Error code description 00: Normal 02: No such condition defined under benefit 03: Condition value is not correct 04: Composing condition value is not correct 05: k condition must be inputed(when the condition is a complex condition) 99: It's composing condition(temporary code)
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getSubInfo(String atrbtNm, DeptImpl deptImpl) throws BizApplicationException { // 1. 보조명세 캐시 조회 AtDeptSIO subInfo = getSubInfoCache(deptImpl); // 2. 보조명세 캐시가 null인 경우, null 리턴 if (subInfo == null) { return null; } // 3. 보조명세 캐시에서 속성명을 기준으로 속성값 조회 Object atrbtVal = subInfo.get(atrbtNm); // Casting 시 Null 방지 if (atrbtVal == null) { return null; } return String.valueOf(atrbtVal); }
TGT:
This method provides to inquire the specific subsidiary information named 'xtnAtrbtNm'.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  22.45
========================================================================================================================
SRC:
public void doServiceAction(String arrSrvcTpCd, ArrCndActionRequiredValue arrCndActionRequiredValue) throws BizApplicationException { switch (arrSrvcTpCd) { case "ArrangementConditionTest": case "IncludeMiscellaneousRevenue": _doIncludeMiscellaneousRevenueAction(); return; default: // there are no condition action for this condition ({0},{1}) on arrangement service ({2}) // 계약서비스 ({2})를 위한 조건 ({0},{1})의 행동은 유효하지 않습니다 throw new BizApplicationException("AAPARE0288" , new Object[]{this.getCndCd(),this.getCndCdNm(),arrSrvcTpCd}); } }
TGT:
Process the special action to process "Service Process Rule" related to specific service type. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which implements {@link ArrCndAction}.
PRED:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
test 샘플별 bleu-4:  89.33
========================================================================================================================
SRC:
public void registerTxPassword(String pswd) throws BizApplicationException { _getArrPswdXtnBiz().registerArrPassword(pswd, this, ArrPswdTpEnum.TX_PASSWORD); }
TGT:
Register transaction password on membership arrangement. Password managed as extended attribute of arrangement, but cannot be registered/inquired/modified/deleted by general API managing extend attribute.
PRED:
Register transaction password.
test 샘플별 bleu-4:  0.09
========================================================================================================================
SRC:
public void doServiceAction(String arrSrvcTpCd,ArrCndActionRequiredValue arrCndActionRequiredValue) throws BizApplicationException { // switch (arrSrvcTpCd) { // // // case "Application": // case "ApplyMembership": // case "ApplyLinkingAccount": // case "OpenDeposit": // case "OpenLoan": // case "OpenMembership": // _doOpenAction(arrSrvcTpCd, arrCndActionRequiredValue); // return; // // // default: // // there are no condition action for this condition ({0},{1}) on arrangement service ({2}) // // 계약서비스 ({2})를 위한 조건 ({0},{1})의 행동은 유효하지 않습니다 // throw new BizApplicationException("AAPARE0288" , new Object[]{this.getCndCd(),this.getCndCdNm(),arrSrvcTpCd}); // } List<ArrRelDocInfoOut> arrRltdDocList = ((ArrRealImpl)getArrangementCore()).getListArrDocRelation(ArrDocRelEnum.RECEIVE.getValue(), null, null); if(logger.isDebugEnabled()){ logger.debug("## <AR> ArrCndRequireDocTpImpl > arrRltdDocList : {} ", arrRltdDocList ); logger.debug("## <AR> ArrCndRequireDocTpImpl > getListCdList : {} ", getListCdList() ); } List<String> requriedDocumentTpList = new ArrayList<String>(); for (String listCd : getListCdList()) { if (!_isReceivedRequiredDoc(listCd,arrRltdDocList)) requriedDocumentTpList.add(listCd); } if (!requriedDocumentTpList.isEmpty()){ if(logger.isDebugEnabled()){ logger.debug("## <AR> ArrCndRequireDocTpImpl > _doOpenAction : {} ", requriedDocumentTpList ); } //필요서
TGT:
Perform the condition action related to the specific service type. For example 1 , In case of loan installment disbursement possible condition ,the loan disbursement possible condition class' "doServiceAction" method dose the validation step like 1.investigates disbursed amount, 2.get product condition value whether installment disbursement is allowed, 3. make decision whether the service is permitted or not. The other example, the interest capitalization YN condition class do the action to make a interest capitalization arrangement plan on next planed date when arrangement open
PRED:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
test 샘플별 bleu-4:  4.31
========================================================================================================================
SRC:
public CaStaffChngSvcIndvIn clone(){ try{ CaStaffChngSvcIndvIn object= (CaStaffChngSvcIndvIn)super.clone(); if ( this.staffXtnInfoList== null ) object.staffXtnInfoList = null; else{ java.util.List<bankware.corebanking.configurationadmin.actor.service.dto.CaStaffChngSvcXtnInfoListIO> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.actor.service.dto.CaStaffChngSvcXtnInfoListIO>(staffXtnInfoList.size()); for( bankware.corebanking.configurationadmin.actor.service.dto.CaStaffChngSvcXtnInfoListIO item : staffXtnInfoList ){ clonedList.add( (bankware.corebanking.configurationadmin.actor.service.dto.CaStaffChngSvcXtnInfoListIO)item.clone()); } object.staffXtnInfoList = clonedList; } if ( this.staffCtcptIO==null ) object.staffCtcptIO = null; else object.staffCtcptIO = (bankware.corebanking.configurationadmin.actor.service.dto.CaStaffChngSvcCtcptIO)this.staffCtcptIO.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getCmpxCndYn(){ return cmpxCndYn; }
TGT:
This method inquire whether it is a complex condition.
PRED:
This method inquire whether it is a complex condition.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, AsmCore asm) { _getAsmSubInfoBiz().saveSubInfo(xtnAtrbtNm, xtnAtrbtCntnt, (AsmImpl)asm); }
TGT:
Save an security interest subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public int delete(AmAsmArrRIO amAsmArrRIO){ return _getAmAsmArrR().delete(amAsmArrRIO); }
TGT:
It changes the status of insurance to cancel status
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  15.45
========================================================================================================================
SRC:
public boolean checkCode(String cdNbr, Map<String, Object> supplInfoVal) throws BizApplicationException { // query data return !(_getDcDocMDso().select(DocStsEnum.NORMAL.getValue(), String.valueOf(supplInfoVal.get(CCM03.CD)), DocTypEnum.NOTICE_MSG.getValue()) == null); }
TGT:
It check code number & code value. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter
PRED:
It check code number & code value by cdDtlIO DTO. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter.
test 샘플별 bleu-4:  79.75
========================================================================================================================
SRC:
public int delete(CaSvInstScrnMIO svInstScrnMIO) { return _getSvInstScrnM().delete(svInstScrnMIO); }
TGT:
Delete all occurrences of the given substring.
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public StaffCashBxBalSvcCashCountDtlOut clone(){ try{ StaffCashBxBalSvcCashCountDtlOut object= (StaffCashBxBalSvcCashCountDtlOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<TaxRtIO> getListTaxRate(String isoNatCd, String taxRtCd, String taxTpCd, String aplyStartDt, String aplyEndDt) throws BizApplicationException { return _getListTaxRate(isoNatCd, taxRtCd, taxTpCd, aplyStartDt, aplyEndDt); }
TGT:
This method provide the tax rate by ISO country code, tax rate code, tax type, start date, and end date.
PRED:
This method provides a list of tax rate information by ISO country code, start/end date.
test 샘플별 bleu-4:  21.59
========================================================================================================================
SRC:
public void saveXtnInfo(ArrGrpXtnInfoEnum arrGrpXtnInfoEnum, String xtnAtrbtCntnt, String txDt, Integer txSeqNbr) throws BizApplicationException { super.saveXtnInfo(arrGrpXtnInfoEnum.getValue(), xtnAtrbtCntnt, txDt, txSeqNbr); }
TGT:
Save (create or change ) extend attribute.
PRED:
Save (create or change) extended attribute. If you want to erase the registered attribute value , set the extended attribute content into null.
test 샘플별 bleu-4:  10.41
========================================================================================================================
SRC:
public void saveSubInfo (String xtnAtrbtNm, String xtnAtrbtCntnt, StStlmntSIO stStlmntSIOIn) { logger.debug("##<ST-StlmntSubInfoBiz> saveSubInfo"); if(xtnAtrbtNm==null || xtnAtrbtNm.isEmpty()) { return; } // 1.create a new instance of I/F VO (불필요) // IValueObject subInfoIntrfcVO = new StlmntSubInfo(); // 2.create a new instance of DBIO VO StStlmntSIO stStlmntSIO = new StStlmntSIO(); // 3.set key to DBIO VO _setKey(stStlmntSIO, stStlmntSIOIn); // 4.set subsidiary detail to DBIO VO DtoUtils.setSubInfoIO(xtnAtrbtNm, xtnAtrbtCntnt, stStlmntSIO); // 5.insert subsidiary detail _insertSubInfo(stStlmntSIO); }
TGT:
This method save settlement subsidiary detail information using interface VO.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
static boolean isValid(String value){ for (TrmntnDscdEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public static boolean isValid(String value){ for (ArrCustRelStsChngRsnCoreEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaCmnCdSvcGetCdMListIn clone(){ try{ CaCmnCdSvcGetCdMListIn object= (CaCmnCdSvcGetCdMListIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArArrDeptRIO select(ArArrDeptRIO arArrDeptRIO) { return _getArArrDeptR().select(arArrDeptRIO); }
TGT:
It get a http header properties.
PRED:
It get a http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public LcNegtnSvcIn clone(){ try{ LcNegtnSvcIn object= (LcNegtnSvcIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value) { for (CaDtDscdEnum item : CaDtDscdEnum.values()) { if (value.equals(item.getValue())) { return "99".equalsIgnoreCase(value) ? false : true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public int delete(CaAmAsmItmMIO amAsmItmMIO){ return _getAmAsmItmM().delete(amAsmItmMIO); }
TGT:
Delete all occurrences of the given substring.
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(CustTxImpl custTxImpl, String xtnAtrbtNm, String xtnAtrbtCntnt) throws BizApplicationException { // 0. null check if (StringUtils.isEmpty(xtnAtrbtNm)) { return; } // 1. 보조명세 캐시 조회결과에 따라 insert/update 판단 AtCustTxSIO subInfoIO = getSubInfoCache(custTxImpl); if (subInfoIO == null) { // DBIO VO new instance subInfoIO = new AtCustTxSIO(); subInfoIO.setCustId(custTxImpl.getCustId()); subInfoIO.setTxDt(custTxImpl.getCustTxDt()); subInfoIO.setTxSeqNbr(custTxImpl.getCustTxSeqNbr()); // 입력된 속성명과 속성값을 DBIO VO에 set DtoUtils.setSubInfoIO(xtnAtrbtNm, xtnAtrbtCntnt, subInfoIO); // insert _getAtCustTxSDso().insert(subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(xtnAtrbtNm, xtnAtrbtCntnt, subInfoIO)) { return; } // 입력된 속성명/속성값을 DBIO VO에 set DtoUtils.setSubInfoIO(xtnAtrbtNm, xtnAtrbtCntnt, subInfoIO); // update _getAtCustTxSDso().update(subInfoIO); } // 2. 캐시 저장 custTxImpl.setSubInfoCache(subInfoIO); }
TGT:
Save an asset thing subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public void saveMapSubInfo(ActorCore actorCore, String ctcptId, int ctcptChngSeqNbr, Map<String, String> xtnInfoMap) throws BizApplicationException { _getActorCtcptSubInfoBiz().saveMapSubInfo((ActorImpl) actorCore, ctcptId, ctcptChngSeqNbr, xtnInfoMap); }
TGT:
This method save settlement subsidiary calculation detail information using subInfoMap
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public void modifyAssetRegionClassification(String instCd, CaAssetRegionClIO in) throws BizApplicationException { if(in.getAplyEndDt().equals(CCM01.MAX_DATE)) { CaAsAssetRegionClMIO asAssetRegionClMIO = _setInputData(instCd, in); _AsAssetRegionClMDso().update(asAssetRegionClMIO); } else { // TODO throws } }
TGT:
It modifies asset region classification information.
PRED:
It modifies asset region classification information.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Integer getListArrBasedOnStsHistoryCount(String deptId, ArrDeptRelEnum arrDeptRel, String bizDscd, String pdTpCd, String pdTmpltCd, ArrStsEnum curArrSts, ArrStsEnum arrSts, String inqryStartDt, String inqryEndDt) throws BizApplicationException { return _getArrDeptRelImpl().getArrListBasedOnArrStatusHistoryCount(deptId, bizDscd, pdTpCd, pdTmpltCd, null, arrDeptRel, curArrSts, arrSts, inqryStartDt, inqryEndDt, false); }
TGT:
Inquire total count of specific department own (as accounting department) arrangements of specific product hierarchy whose ] status changed into specific status within inquiry period and currently in another specific status. Inquire modification arrangement of inquired arrangement if hasVrtnArr is true.
PRED:
Inquire total count of specific department own (as accounting department) arrangements of specific product hierarchy whose ] status changed into specific status within inquiry period and currently in another specific status. Inquire modification arrangement of inquired arrangement if hasVrtnArr is true.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaCmRoleClRIO select(String instCd, String roleId, String clHrarcyId, String clId) { return _getCmRoleClR().select(instCd, roleId, clHrarcyId, clId); }
TGT:
It get a http header properties.
PRED:
It get a http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getPdTmpltCd() { return pdPdM.getPdTmpltCd(); }
TGT:
This Method inquire product template code
PRED:
Inquire product template code of product of arrangement
test 샘플별 bleu-4:  29.85
========================================================================================================================
SRC:
public Map<String, String> getMapAssetXtnInfoAsStr() throws BizApplicationException { return _getAssetXtnInfoBiz().getMapAssetXtnInfo(this); }
TGT:
Inquire all extended information of the asset as a map.
PRED:
Inquire all extended information of the asset as a map.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(ArrSrvcBlckngSubInfo arrSrvcBlckngSubInfo, Integer arrSrvcBlckngSeqNbr, Integer seqNbr, String txDt, Integer txSeqNbr, ArrRealImpl arrRealImpl) throws BizApplicationException { // null check if(arrSrvcBlckngSubInfo == null){ throw new BizApplicationException("AAPCME0006", new Object[] {ArrSrvcBlckngSubInfo.class.getSimpleName()}); } // 1. 기존 보조명세 캐시 조회결과에 따라 insert/update 판단 ArArrSrvcBlckngSIO subInfoCache = _getSubInfoCache(arrRealImpl, arrSrvcBlckngSeqNbr, seqNbr); if (subInfoCache == null) { // DBIO VO new instance subInfoCache = new ArArrSrvcBlckngSIO(); subInfoCache.setArrId(arrRealImpl.getArrId()); subInfoCache.setArrSrvcBlckngSeqNbr(arrSrvcBlckngSeqNbr); subInfoCache.setSeqNbr(seqNbr); // 빈 이력 생성 --> undo 시 확장속성 저장 이전으로 속성값을 원복시키기 위함 _saveArArrSrvcBlckngSubH(arrRealImpl, arrSrvcBlckngSeqNbr, seqNbr, subInfoCache, txDt, txSeqNbr); // 입력된 VO를 DBIO VO로 convert DtoUtils.setSubInfoIO(arrSrvcBlckngSubInfo, subInfoCache); // insert _getArArrSrvcBlckngSDso().insert(
TGT:
Save an appraisal thing subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public CaAsmItmMgmtSvcRegisterAsmItmOut registerAsmItm(CaAsmItmMgmtSvcRegisterAsmItmIn in) throws BizApplicationException { CaAsmItmMgmtSvcRegisterAsmItmOut out = new CaAsmItmMgmtSvcRegisterAsmItmOut(); if( logger.isDebugEnabled() ){ logger.debug("## <ASM> registerAsmItm : {}", in.toString()); } CaAsmItmIO asmItm = _getCaAsmItmMgnt().getAsmItm(in.getInstCd(), in.getAsmItmId()); // 기등록건이 있으면 수정 if (asmItm != null) { CaAsmItmIO caAsmItmIO = _updateAsmItm(asmItm, in); out.setAsmItmId(caAsmItmIO.getAsmItmId()); } // 기등록건이 없으면 등록 else { CaAsmItmIO caAsmItmIO = _insertAsmItm(in); out.setAsmItmId(caAsmItmIO.getAsmItmId()); } if( logger.isDebugEnabled() ){ logger.debug("## <ASM> CaAsmItmMgmtSvcRegisterAsmItmOut : {}", out.toString()); } return out; }
TGT:
It resgisters assessment item information.
PRED:
It registers assessment item information.
test 샘플별 bleu-4:  53.73
========================================================================================================================
SRC:
public ArrXtnSvcDeleteXtnList clone(){ try{ ArrXtnSvcDeleteXtnList object= (ArrXtnSvcDeleteXtnList)super.clone(); if ( this.tblList== null ) object.tblList = null; else{ java.util.List<bankware.corebanking.arrangementservice.amend.service.dto.ArrXtnSvcIn> clonedList = new java.util.ArrayList<bankware.corebanking.arrangementservice.amend.service.dto.ArrXtnSvcIn>(tblList.size()); for( bankware.corebanking.arrangementservice.amend.service.dto.ArrXtnSvcIn item : tblList ){ clonedList.add( (bankware.corebanking.arrangementservice.amend.service.dto.ArrXtnSvcIn)item.clone()); } object.tblList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void registerSettlement(StlmntDtlIO stlmntDtl) throws BizApplicationException { // 1.정산기본의 확장속성을 CTI방식과 EAV방식으로 분리 추출 // CTI방식은 subInfoMap으로 보관하며 마지막에 saveSubInfo통해 보조명세에 적재됨 // EAV방식은 stlmntDtl안의 xtninfoList에 남아 (only EAV속성만 잔존) 코어소스(registerSettlement)에서 적재됨 Map<String,String> stlmntSubInfoMap = new HashMap<String, String>(); stlmntSubInfoMap = _getStlmntSubInfoBiz().getMapSubInfoCrtn(stlmntDtl.getStlmntXtnInfoList()); // 2.정산계산근기의 확장속성을 CTI방식과 EAV방식으로 분리 추출 Map<String, Map<String, String>> stlmntCalcnSubInfoMap = new HashMap<String, Map<String, String>>(); Map<String,String> calcnSubInfoMap = null; if (stlmntDtl.getStlmntCalcnDList() != null) { int dtlSeqNbr = 0; for(StlmntCalcnDtlIO stlmntCalcnD : stlmntDtl.
TGT:
This method registers settlement. 1. Save settlement base information 2. Save settlement detail information (if input[stlmntDtlIO.stlmntCalcnDList] exists) 3. Save settlement extended information (if input[stlmntDtlIO.stlmntXtnInfoList] exists)
PRED:
This method registers settlement. 1. Save settlement base information 2. Save settlement detail information (if input[stlmntDtlIO.stlmntCalcnDList] exists) 3. Save settlement extended information (if input[stlmntDtlIO.stlmntXtnInfoList] exists)
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean check(String vldnTrgt) throws BizApplicationException { // Implement logic for validate Account Number // 계좌번호 검증 로직 구현 ArrRealGetIn arrRealGetIn = new ArrRealGetIn(); arrRealGetIn.setArrExtrnlIdNbrTpCd(ArrExtrnlIdNbrTpEnum.ACCOUNT_NUMBER.getValue()); arrRealGetIn.setArrIdNbr(vldnTrgt); arrRealGetIn.setNthNbr(CCM01.ZERO); if( _getArrMngr().getArrReal(arrRealGetIn)==null) throw new BizApplicationException("AAPARE0007", new String[]{vldnTrgt}); return true; }
TGT:
Validate the attribute value ( Complex Validation ) Implemented and used by each business component.
PRED:
Validate the attribute value ( Complex Validation ) Implemented and used by each business component.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public int updateJournalDeferredDfrdSeqNbr(JrnzPrcsAcctgItm jrnzPrcsAcctgItm) { return _getAcAcctgLDfrd().updateJournalDeferredDfrdSeqNbr(jrnzPrcsAcctgItm); }
TGT:
This class provides the functionality to update deferred log sequence number and deferred transaction number on accounting logs.
PRED:
This class provides the functionality to update deferred log sequence number and deferred transaction number on accounting logs.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public int delete(AmAsmCrdtChkRsltDIO amAsmCrdtChkRsltDIO){ return _getAmAsmCrdtChkRsltD().delete(amAsmCrdtChkRsltDIO); }
TGT:
Delete all occurrences of the given substring.
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<? extends IOmmObject> getListDataForConsistency(Integer pgNbr, Integer pgCnt) throws BizApplicationException { int pageOffSet = PaginationCoreUtils.getPgOffset(pgNbr, pgCnt); return _getDstbCnstncyCmRefAtrbtMDso().selectListForConsistency(pageOffSet, pgCnt); }
TGT:
Validate Query for Distribution Validation
PRED:
Validate Query for Distribution Validation
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public AsmBsicInfoIO changeAsmStatus(String asmId,String asmStsCoreEnum, String rjctdRsnCoreEnum, String rjctdRsnCntnt) throws BizApplicationException { //1.조회 AsmBsicInfoIO in = getBasicInformation(asmId); //2.변경. AmAsmMIO amAsmMIO = _setAmAsmMIO(in, asmStsCoreEnum, rjctdRsnCoreEnum, rjctdRsnCntnt); _getAmAsmMDso().updateTerminate(amAsmMIO); //3.상태이력등록 _insertStsHistory(amAsmMIO); return _getBasicInfomation(amAsmMIO); } /** * 심사기본 상태변경 * <pre> * </pre> * @param in : (required) 심사식별자 * @param asmStsCd : (required) 심사상태코드 * @return AsmBsicInfoIO : {@link AsmBsicInfoIO}
TGT:
change assessment status
PRED:
change assessment status
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public int delete(ArArrXtnInfoDIO arArrXtnInfoDIO) { _getCmnContextCore().setHeaderColumn(arArrXtnInfoDIO); return _getArArrXtnInfoD().delete(arArrXtnInfoDIO); }
TGT:
Delete the security interest.
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  20.56
========================================================================================================================
SRC:
public BigDecimal getTaxRate(String isoNatCd, String taxRtCd, String taxTpCd, String baseDt) throws BizApplicationException { return _getTaxRate(isoNatCd, taxRtCd, taxTpCd, baseDt); }
TGT:
This method provide the tax rate by ISO country code, tax rate code, tax type, and start date.
PRED:
This method provides a list of tax rate information by ISO country code, start/end date.
test 샘플별 bleu-4:  24.67
========================================================================================================================
SRC:
public DpstIntCalculatorOut calculateInterestTermination(Arr arr, int txSeqNbr, String paymentDate, String arrTrmntnDscd, Map<String, String> xtdInfo, boolean smltn) throws BizApplicationException { if( smltn == false ) { arr.setLockBasic(); } if( xtdInfo == null ) { xtdInfo = new HashMap<String, String>(); } xtdInfo.put(ArrTxXtnInfoEnum.TERMINATION_DSCD.getValue(), arrTrmntnDscd); return _calculateInt(arr, txSeqNbr, null, paymentDate, smltn, xtdInfo, InterestTransactionTypeEnum.TERMINATION); }
TGT:
This method calculates and pay interest for terminating the account. 1.Demand deposit product : calculate interest on the same plan as settlement case 2.Installment product : calculate early termination interest, maturity termination interest, or after maturity termination interest based on interest calculation end date 2-1)Regular Installment : Calculate maturity interest by (Monthly Payment Amount) (Contract Months) (Contract Months + 1) / 2 (interest rate) 2-2)Free Installment : Calculate maturity interest by (Number of months and days elapsed per deposit) (interest rate) 3.Term deposit product :
PRED:
This method calculates the termination interest of the arrangement. Required: arrangementTrmntnDscd, arrangementTrmntnDscd, xtnAtrbtNm, actvYn, dpstWhdrwlDscd, upAmt, upAmt
test 샘플별 bleu-4:  0.32
========================================================================================================================
SRC:
public CaNoticeMsgCdSvcGetListIn clone(){ try{ CaNoticeMsgCdSvcGetListIn object= (CaNoticeMsgCdSvcGetListIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void activate(ScrtyIntStsChngIn scrtyIntStsChngIn) throws BizApplicationException { throw new BizApplicationException("AAPASE0064",null); }
TGT:
Change status of arrangement activity into "Active".
PRED:
Change the status of arrangement status into "Active". Following additional arrangement information can be registered. 1) Account number 2) Whether if created mandatory condition automatically or not 3) A list of arrangement level condition 4) A list of arrangement relation information 5) A list of arrangement extended attribute
test 샘플별 bleu-4:  5.76
========================================================================================================================
SRC:
public CaDstbChrncDataRqstOut clone(){ try{ CaDstbChrncDataRqstOut object= (CaDstbChrncDataRqstOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CdMgmtSvcGetCdListByCdNbrListOut clone(){ try{ CdMgmtSvcGetCdListByCdNbrListOut object= (CdMgmtSvcGetCdListByCdNbrListOut)super.clone(); if ( this.tblNm== null ) object.tblNm = null; else{ java.util.List<bankware.corebanking.common.code.service.dto.CdMgmtSvcGetCdListByCdNbrListDtlOut> clonedList = new java.util.ArrayList<bankware.corebanking.common.code.service.dto.CdMgmtSvcGetCdListByCdNbrListDtlOut>(tblNm.size()); for( bankware.corebanking.common.code.service.dto.CdMgmtSvcGetCdListByCdNbrListDtlOut item : tblNm ){ clonedList.add( (bankware.corebanking.common.code.service.dto.CdMgmtSvcGetCdListByCdNbrListDtlOut)item.clone()); } object.tblNm = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void deleteArrIssmdaRXtnInfo(ArArrIssmdaRXtnInfoDIO arArrIssmdaRXtnInfoDIO, String txDt, Integer txSeqNbr) throws BizApplicationException { // 기존 확장속성 조회 ArArrIssmdaRXtnInfoDIO arArrIssmdaRXtnInfoOld = selectArrIssmdaRXtnInfo(arArrIssmdaRXtnInfoDIO); // 조회결과가 존재하지 않는 경우 에러처리 if (arArrIssmdaRXtnInfoOld == null) { throw new BizApplicationException("AAPARE0064", new Object[] { arArrIssmdaRXtnInfoDIO.getXtnAtrbtNm() }); } // 확장속성 update arArrIssmdaRXtnInfoOld.setXtnAtrbtCntnt(null); updateArrIssmdaRXtnInfo(arArrIssmdaRXtnInfoOld, txDt, txSeqNbr); }
TGT:
Remove one arrangement/issued media relation extended attribute of subsidiary information(CTI)
PRED:
Remove one arrangement/issued media relation extended attribute of subsidiary information(CTI)
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public BigDecimal getAccumulatedAmount(String startDt, String endDt) throws BizApplicationException { return getAccumulatedAmount(startDt, endDt, null, true, false).getAcmltdAmt(); }
TGT:
This method inquires the accumulated amount within the period you entered. If isMinusSkip is false, the negative amount is added the accumulated amount.
PRED:
This method inquires accumulated amount for each amount section(amtList) you entered. It returns the accumulated amount sliced by amount section from Start date to End date. The flow of this method is as follows. 1. Basic Input Data Validation 2. Check for avoid that (+) value and (-) value, both are exist. 2-1. Period section must increase or decrease in order Case1. If period section increase, first data in amount list should be Zero. Case2. If period section decrease, last data in amount list should be Zero. 3. Calculate accumulated amount 3-1. Accumulated amount
test 샘플별 bleu-4:  4.26
========================================================================================================================
SRC:
public DueDiligenceInqryTrgtSvcOut clone(){ try{ DueDiligenceInqryTrgtSvcOut object= (DueDiligenceInqryTrgtSvcOut)super.clone(); if ( this.eddTrgtList== null ) object.eddTrgtList = null; else{ java.util.List<bankware.corebanking.customer.kyc.service.dto.DueDiligenceInqryTrgtSvcListOut> clonedList = new java.util.ArrayList<bankware.corebanking.customer.kyc.service.dto.DueDiligenceInqryTrgtSvcListOut>(eddTrgtList.size()); for( bankware.corebanking.customer.kyc.service.dto.DueDiligenceInqryTrgtSvcListOut item : eddTrgtList ){ clonedList.add( (bankware.corebanking.customer.kyc.service.dto.DueDiligenceInqryTrgtSvcListOut)item.clone()); } object.eddTrgtList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaSrvcMgmtSvcSaveServiceInfoListIn clone(){ try{ CaSrvcMgmtSvcSaveServiceInfoListIn object= (CaSrvcMgmtSvcSaveServiceInfoListIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void terminate(InsrncStsChngIn in) throws BizApplicationException { InsrncStsCoreEnum afStstCd = InsrncStsCoreEnum.TERMINATED; // 1. 입력값 검증 _checkStsChnginput(in, afStstCd); // 2. 보증기본 설정상태 변경 ("해지"상태로 변경) _getInsrncBsicBiz().changeInsrnStatus(this, in, afStstCd.getValue()); } /** * <div class='en'> * @description * <pre> * t change the status of insurance to cancel status * </pre> * @seealso * @note {@link InsrncStsChngIn} : required fields - all of them * </div> * * <div class='ko'> * @description * <pre> * 보험의 상태를 취소상태로 변경한다. * </pre> * @seealso * @note {@link InsrncStsChngIn}
TGT:
Change status of arrangement issued media into "Terminated".
PRED:
Change status of arrangement group into "Terminated". Available next status is managed by ArrGrpMapStsChngDflt and it throws error if new status is not available.
test 샘플별 bleu-4:  16.22
========================================================================================================================
SRC:
public ArrInternal getInternalArr(String arrId) throws BizApplicationException { ArrRealImpl arrReal = (ArrRealImpl) super.getArrRealCore(arrId); return (ArrInternal) _checkArrObjectByKind( arrReal, ArrKndEnum.INTERNAL ); }
TGT:
This method inquire internal arrangement using account number and nth number. Detail function description refers to {@link #getInternalArrByAcctNbr(String)}.
PRED:
This method inquire internal arrangement using arrangement ID. Detail function description refers to {@link #getArr(ArrRealGetIn)}.
test 샘플별 bleu-4:  55.17
========================================================================================================================
SRC:
public List<ArrReal> getListArrBasedOnStsHistory(String deptId, ArrDeptRelEnum arrDeptRel, ArrStsEnum curArrSts, ArrStsEnum arrSts, String inqryStartDt, String inqryEndDt, int pgNbr, int pgCnt) throws BizApplicationException { return _getArrDeptRelImpl().getArrListBasedOnArrStatusHistory(deptId, null, null, null, null, arrDeptRel, curArrSts, arrSts, null, inqryStartDt, inqryEndDt, pgNbr, pgCnt, false); }
TGT:
Inquire specific customer own (as main contractor) arrangements whose status changed into specific status within inquiry period and currently in another specific status. Current Status / Base Status / Inquiry Period(Start Date / End Date) Approved / Applied / 1/1 ~ 3/1 : Get arrangement applied within 1/1 ~ 3/1 and approved currently. Arrangement whose status was changed into other status on 1/1 is not inquired. Active / Applied / 1/1 ~ 3/1 : Get arrangement applied within 1/1 ~ 3/1
PRED:
Inquire specific department own (as accounting department) arrangements of specific product hierarchy whose status changed into specific status within inquiry period and currently in another specific status. (Paging) Inquire modification arrangement of inquired arrangement if hasVrtnArr is true.
test 샘플별 bleu-4:  14.2
========================================================================================================================
SRC:
public CaDataVldtnMgmtSvcGetPrsntIn clone(){ try{ CaDataVldtnMgmtSvcGetPrsntIn object= (CaDataVldtnMgmtSvcGetPrsntIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getDstbTrgtScrnYn() { return dstbTrgtScrnYn; }
TGT:
Inquire distribution target screen yn.
PRED:
Inquire distribution target screen yn.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaDstbCtvdRsltErrSrchCndIn clone(){ try{ CaDstbCtvdRsltErrSrchCndIn object= (CaDstbCtvdRsltErrSrchCndIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public static boolean isValid(String value) throws BizApplicationException { if(!StringCoreUtils.isEmpty( value)) { for (ScrtyIntMAtrbtCoreEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } throw new BizApplicationException("AAPATE0028", new Object[] {value, "@ScrtyIntMAtrbt"});//({0}) is invalid {1}. } return true; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void doServiceAction(String arrSrvcTpCd,ArrCndActionRequiredValue arrCndActionRequiredValue) throws BizApplicationException { if( logger.isDebugEnabled() ) { logger.debug( "## <TWD> =ArrCndLoanInstallmentDisbursementPossibleYNImpl{}",arrSrvcTpCd); } switch (arrSrvcTpCd) { case "Disbursement": _doDisbursementAction(arrSrvcTpCd, arrCndActionRequiredValue); return; default: // there are no condition action for this condition ({0},{1}) on arrangement service ({2}) // 계약서비스 ({2})를 위한 조건 ({0},{1})의 행동은 유효하지 않습니다 throw new BizApplicationException("AAPARE0288" , new Object[]{this.getCndCd(),this.getCndCdNm(),arrSrvcTpCd}); } }
TGT:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
PRED:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<CaTblXtnAtrbtOut> getTableExtendAttribute(String instCd, String tblNm, CaXtnAtrbtVrtnCmpsEnum xtnAtrbtVrtnCmpsCd, Map<String, String> mapCnd) throws BizApplicationException { // Check input if (StringUtils.isEmpty(instCd)) { // {0} is mandatory input item. throw new BizApplicationException("AAPCME0006", new Object[] { "@instCd" }); } if (StringUtils.isEmpty(tblNm)) { // {0} is mandatory input item. throw new BizApplicationException("AAPCME0006", new Object[] { "@tblNm" }); } if (xtnAtrbtVrtnCmpsCd == null || StringUtils.isEmpty(xtnAtrbtVrtnCmpsCd.getValue())) { // {0} is mandatory input item. throw new BizApplicationException("AAPCME0006", new Object[] { "@xtnAtrbtVrtnCmpsCd" }); } if (!CaXtnAtrbtVrtnCmpsEnum.NA.equals(xtnAtrbtVrtnCmpsCd) && !CaXtnAtrbtVrtnCmpsEnum.ALL.equals(xtnAtrbtVrtnCmpsCd) && (mapCnd == null || mapCnd.isEmpty())) { // {0} is mandatory input item. throw new BizApplicationException("AAPCME0006", new Object[] { "@xtnAtrbtVrtnCmpsCd" }); } List<CaTblXtnAtrbtOut> out = new ArrayList<CaTblXtnAtrbtOut>(); List<String> itmList = new ArrayList<String>(); // Set condition if (CaXtnAtrbtVrtnCmpsEnum.ALL.equals(xtnAtrbtVrtnCmpsCd)) { // skip; } else if (CaXtnAtrbtVrtnCmpsEnum.NA.equals(xtnAtrbtVrtnCmpsCd)) { itmList.add(" "); } else if (CaXtnAtrbtVrtnCmpsEnum.PD_CD
TGT:
Query table extend attribute list by no condition(cmnContext institution) basic method reference : {@link TblXtnAtrbtCore getTableExtendAttribute(String, String, XtnAtrbtVrtnCmpsEnum, Map<String, String>)}
PRED:
Query table extend attribute list by no condition basic method reference : {@link CaTblXtnAtrbtMgmt getTableExtendAttribute(String, String, CaXtnAtrbtVrtnCmpsEnum, Map<String, String>)}
test 샘플별 bleu-4:  55.81
========================================================================================================================
SRC:
public void removeArrCndClass(CaArrCndClassIn in) throws BizApplicationException { _checkInput(in); CaArArrCndClassMIO arArrCndClassMIO = new CaArArrCndClassMIO(); arArrCndClassMIO.setInstCd(in.getInstCd()); arArrCndClassMIO.setCndCd(in.getCndCd()); arArrCndClassMIO.setCndClassNm(in.getCndClassNm()); arArrCndClassMIO.setBizDscd(StringUtils.isEmpty(in.getBizDscd()) ? CCM01.CHAR_AT : in.getBizDscd() ); arArrCndClassMIO.setPdTpCd(StringUtils.isEmpty(in.getPdTpCd()) ? CCM01.CHAR_AT : in.getPdTpCd() ); arArrCndClassMIO.setPdTmpltCd(StringUtils.isEmpty(in.getPdTmpltCd()) ? CCM01.CHAR_AT : in.getPdTmpltCd() ); arArrCndClassMIO.setPdCd(StringUtils.isEmpty(in.getPdCd()) ? CCM01.CHAR_AT : in.getPdCd() ); _getArArrCndClassMDso().delete(arArrCndClassMIO); List<CaArArrSrvcCndRIO> sqlOutList = _getArArrSrvcCndRDso().selectListByCndCd(CCM01.CHAR_AT, in.getCndCd()); for ( CaArArrSrvcCndRIO sqlOut : sqlOutList ) { _getCaCmnContext().setHeaderColumn(sqlOut); _getArArrSrvcCndRDso().delete(sqlOut); } }
TGT:
Delete arrangement condition mapped class ( condition variation class name )
PRED:
Delete arrangement condition mapped class ( condition variation class name )
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public PrtnrListQrySvcIn clone(){ try{ PrtnrListQrySvcIn object= (PrtnrListQrySvcIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(InsrncImpl insrnc){ Map<String, String> subInfoMap = new HashMap<String, String>(); // 1. 보험에 저장된 보조명세 캐시 조회 AsInsrncSIO subInfo = getSubInfoCache(insrnc); // 2. 보험에 저장된 보조명세 캐시가 null인 경우, 빈 Map 리턴 if (subInfo == null) { return subInfoMap; } // 3. 보험에 저장된 보조원장 캐시를 Map으로 convert for (Entry<String, Object> entry : subInfo.getFieldValues().entrySet()) { if(InsrncSubInfo.FIELDS.get(entry.getKey()) == null) { continue; } // Casting 시 Null 방지 if (entry.getValue() != null) { subInfoMap.put(entry.getKey(), String.valueOf(entry.getValue())); } } return subInfoMap; }
TGT:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public static boolean isValid(String value) { for (PdCndDetailTypeCoreEnum enumObject : values()) { if (enumObject.getValue().equals(value)) { return true; } } // Return Output return false; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getCrncyCd() { return crncyCd; }
TGT:
Inquire currency code of arrangement
PRED:
This method inquires the currency code.
test 샘플별 bleu-4:  22.09
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, AsmImpl asm) { //0. 저장하려는 속성값의 유효성 검증(코드관련 속성일 경우 유효한 코드값인지 검증한다.) _getAtrbtChk().checkStandardAttribute(xtnAtrbtNm, xtnAtrbtCntnt); //1. 심사보조명세 조회(캐시로부터) IValueObject oldCache = getSubInfoCache(asm); //2. DB 반영 if(oldCache == null) { // 2.1.1 DBIO VO 생성 oldCache = new AmAsmSIO(); // 2.1.2 set primary key oldCache.set("instCd",_getCmnContext().getInstCode()); oldCache.set("asmId",asm.getBasicInfo().getAsmId()); // 2.1.3 저장하려는 속성값을 DBIO VO에 반영 DtoUtils.setSubInfoIO(xtnAtrbtNm, xtnAtrbtCntnt, oldCache); // 2.1.4 insert _getAmAsmSDso().insert((AmAsmSIO)oldCache); asm.setAsmSubInfoCache(oldCache); }else { // 2.2.1 속성값 변경여부 검증 if (!DtoUtils.isValChanged(xtnAtrbtNm, xtnAtrbtCntnt, oldCache)) { return; } //
TGT:
Save an appraisal request subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public static boolean isValid(String value) throws BizApplicationException { if(!StringCoreUtils.isEmpty(value)) { for (ActiveStatusEnum item : ActiveStatusEnum.values()) { if (value.equals(item.getValue())) { return true; } } return false; } return false; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(ActorImpl actorImpl, String ctcptId, Integer ctcptChngSeqNbr, String xtnAtrbtNm, String xtnAtrbtCntnt) throws BizApplicationException { // 0. null check if (StringUtils.isEmpty(xtnAtrbtNm)) { return; } // 1. 보조명세 캐시 조회결과에 따라 insert/update 판단 // ** 연락처 보조명세는 변경이력을 관리하지 않는다. AtActorCtcptSIO subInfoIO = getSubInfoCache(actorImpl, ctcptId, ctcptChngSeqNbr); if (subInfoIO == null) { // DBIO VO new instance subInfoIO = new AtActorCtcptSIO(); subInfoIO.setActorId(actorImpl.getActorId()); subInfoIO.setActorCtcptId(ctcptId); subInfoIO.setActorCtcptChngSeqNbr(ctcptChngSeqNbr); // 입력된 속성명과 속성값을 DBIO VO에 set DtoUtils.setSubInfoIO(xtnAtrbtNm, xtnAtrbtCntnt, subInfoIO); // insert _getAtActorCtcptSDso().insert(subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(xtnAtrbtNm, xtnAtrbtCntnt, subInfoIO)) { return; } // 입력된 속성명/속성값을 DBIO VO�
TGT:
This method save settlement subsidiary calculation detail information using xtnAtrbtNm and xtnAtrbtCntnt
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public AssetOwnerList clone(){ try{ AssetOwnerList object= (AssetOwnerList)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public int delete(CaSvInstSrvcMIO svInstSrvcMIO) { return _getSvInstSrvcM().delete(svInstSrvcMIO); }
TGT:
Delete all occurrences of the given substring.
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaArrPdRuleMgmtTestSvcIn clone(){ try{ CaArrPdRuleMgmtTestSvcIn object= (CaArrPdRuleMgmtTestSvcIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getInstCd(){ return instCd; }
TGT:
This method inquire institution code
PRED:
This method get financial institution code by which the arrangement is created and managed.
test 샘플별 bleu-4:  14.63
========================================================================================================================
SRC:
public AssetLTVQrySvcIn clone(){ try{ AssetLTVQrySvcIn object= (AssetLTVQrySvcIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrRelArrInfoOut> getListArrArrHistoryAsMain(String arrArrRelCd, String rltdArrId) throws BizApplicationException { return _getArrArrRelBiz().getListArrArrHistoryAsMain(arrArrRelCd, rltdArrId, this); }
TGT:
Inquire list of arrangement/arrangement relation information as related arrangement id.
PRED:
Inquire list of arrangement/arrangement relation information as related arrangement id.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(CustCore custCore, String xtnAtrbtNm, String xtnAtrbtCntnt) throws BizApplicationException { _getCustSubInfoBiz().saveSubInfo(xtnAtrbtNm, xtnAtrbtCntnt, (CustImpl) custCore); }
TGT:
Save an asset subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public void saveSubInfo(IValueObject subInfo, ActorImpl actorImpl) throws BizApplicationException { // 1. 보조명세 종류 조회 ActorSubInfoKndEnum subInfoKnd = actorImpl.getSubInfoKnd(); // 2. 보조명세 캐시 조회결과에 따라 insert/update 판단 IValueObject subInfoIO = getSubInfoCache(actorImpl); if (subInfoIO == null) { // PK setting subInfoIO = _getNewSubInfoSqlIO(subInfoKnd); subInfoIO.set("actorId", actorImpl.getActorId()); // insert _insertSubInfo(subInfoKnd, subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(subInfo, subInfoIO)) { return; } // 변경전 이력 저장 _saveSubInfoHst(actorImpl, subInfoIO); // PK setting subInfoIO.set("actorId", actorImpl.getActorId()); // update _updateSubInfo(subInfoKnd, subInfoIO); } // 3. 캐시 저장 String cacheKey = XtnTableEnum.AT_ACTOR_M.getValue().concat(actorImpl.getActorId()); actorImpl.saveSubInfoCache(cacheKey, subInfoIO); }
TGT:
This method save settlement subsidiary detail information using interface VO.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public DateMngrCheckDateOut calculateDate(String baseDt) throws BizApplicationException { // Validate date _checkDate(baseDt); // New result object DateMngrCheckDateOut out = new DateMngrCheckDateOut(); // Next date out.setNxtDt(_getCalculationDate(baseDt, 1)); // Next next date out.setNxtNxtDt(_getCalculationDate(baseDt, 2)); // Before date out.setBfDt(_getCalculationDate(baseDt, -1)); // Before before date out.setBfBfDt(_getCalculationDate(baseDt, -2)); return out; }
TGT:
It calculates the date of the day. (±1~2 days)
PRED:
It calculates the date of the day. (base date + n(days/weeks/months/years))
test 샘플별 bleu-4:  61.32
========================================================================================================================
SRC:
public String getTxInpHms(){ return txInpHms; }
TGT:
This method inquires the input Hms of transaction.
PRED:
This method inquires the input Hms of transaction.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrReal> getListArrBasedOnStsHistory(String deptId, ArrDeptRelEnum arrDeptRel, String bizDscd, String pdTpCd, String pdTmpltCd, ArrStsEnum curArrSts, ArrStsEnum arrSts, String inqryStartDt, String inqryEndDt, int pgNbr, int pgCnt, boolean hasVrtnArr) throws BizApplicationException { return _getArrDeptRelImpl().getArrListBasedOnArrStatusHistory(deptId, bizDscd, pdTpCd, pdTmpltCd, null, arrDeptRel, curArrSts, arrSts, null, inqryStartDt, inqryEndDt, pgNbr, pgCnt, hasVrtnArr); }
TGT:
Inquire specific department own (as accounting department) arrangements whose status changed into specific status within inquiry period and currently in another specific status. Current Status / Base Status / Inquiry Period(Start Date / End Date) Approved / Applied / 1/1 ~ 3/1 : Inquire arrangement applied within 1/1 ~ 3/1 and approved currently. Arrangement whose status was changed into other status on 1/1 is not inquired. Active / Applied / 1/1 ~ 3/1 : Inquire arrangement applied within 1/1
PRED:
Inquire specific customer own (as main contractor) arrangements of specific product hierarchy whose status changed into specific status within inquiry period and currently in another specific status. Current Status / Base Status / Inquiry Period(Start Date / End Date) Approved / Applied / 1/1 ~ 3/1 : Get arrangement applied within 1/1 ~ 3/1 and approved currently. Arrangement whose status was changed into other status on 1/1 is not inquired. Active / Applied / 1/1 ~ 3/1 : Get arrangement applied within 1/1
test 샘플별 bleu-4:  81.27
========================================================================================================================
SRC:
public StlmntDataRcvDBatIO clone(){ try{ StlmntDataRcvDBatIO object= (StlmntDataRcvDBatIO)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public LnAgrmntOpenSvcPdCndIn clone(){ try{ LnAgrmntOpenSvcPdCndIn object= (LnAgrmntOpenSvcPdCndIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void undoSubInfo(ScrtyIntImpl scrtyInt, String txDt, Integer txSeqNbr) throws BizApplicationException { // 1. 설정에 저장된 보조명세이력 캐시 조회결과가 없는 경우 리턴 AsScrtyIntSubHIO hstSqlIO = _getSubInfoHstCache(scrtyInt, txDt, txSeqNbr); if(hstSqlIO == null){ return; } // 3. 보조명세이력의 취소여부를 'Y'로 갱신 hstSqlIO.setCnclYn(CCM01.YES); _getAsScrtyIntSubHDso().update(hstSqlIO); // 4. 보조명세이력 DBIO VO를 보조명세 DBIO VO로 convert AsScrtyIntSIO sqlIO = new AsScrtyIntSIO(); DtoUtils.setSubInfoIO(hstSqlIO, sqlIO); // set PK & business column // 5. 보조명세 값 원복 _getAsScrtyIntSDso().update(sqlIO); }
TGT:
Return the value of the subsidiary information to the previous value. However, this method is not invoked because no cancellation function is currently made in the asset area. If cancellation function is made in the asset area, this method should be called through the method {@link AssetThingSubInfoBiz #undoSubInfo}.
PRED:
Return the value of the subsidiary information to the previous value. However, this method is not invoked because no cancellation function is currently made in the asset area. If cancellation function is made in the asset area, this method should be called through the method {@link AssetThingSubInfoBiz #undoSubInfo}.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void validate(String arrSrvcCd,ArrRealCore arrReal, CustCore cust, Map<String, Object> vldtnRequiredValMap) throws BizApplicationException { List<Arr> arrList = _getArrCustMngr().getListCustOwnLoanArrActive(cust.getCustId()); if (arrList == null || arrList.isEmpty()) return; for (Arr custArr : arrList) { if (_getLnOvrduInfoProvider().isOverdue(custArr, ArrCmnUtil.getRckngDt(_getCmnContext()))){ //Customer Own Arrangement ({1}) is in overdue. This service ({0}) could not be finished properly //고객소유 계약({1})이 연체상태입니다. 본서비스({0}) 실행이 불가 합니다 //-TWD throw new BizApplicationException("APARE0304", new Object[]{dataMngr.getCmnCd(arrSrv.cdNbr,arrSrv.getValue()),arr.getAcctNbr()}); throw new BizApplicationException("AAPARE0304", new Object[]{_getCd().getCode(ArrSrvcEnum.cdNbr,arrSrvcCd),custArr.getAcctNbr()}); } } }
TGT:
Processing rules should be commonly performed according to the rules defined in the service processing rule, based on the representative service type registered to the specific service.
PRED:
It performs common service processing rules defined in the service processing rules and whether the contract-based service is available, based on the representative service type registered to the specific service. Whether contract services are available verifies: 1) Verification of service restriction based on product information of contract. 2) Verification of restriction related to the service set in the contract such as pledge setting. 3) Perform verification rules that should be performed in common as the requirement that dead customers should not become financial transactions.
test 샘플별 bleu-4:  19.66
========================================================================================================================
SRC:
public void saveSubInfo(Map<String, String> subInfoMap, ArrTxImpl arrTx) { // 1. 입력으로 받은 Map이 비여 있거나 null일 때 , null 체크하는 이유는 CTI, EAV분리하는 메소드에서 없으면 null return하고 있음. if(subInfoMap==null || subInfoMap.isEmpty()) { return; } // 속성값 검증 _getAtrbtChk().checkStandardAttributeMap(subInfoMap); // 2. 거래관련 보조명세 조회(캐시로부터) IValueObject oldCache = getSubInfoCache(arrTx); // 4. DB 반영 if(oldCache == null) { // 4.1.1 DBIO VO 인스턴스 생성 oldCache = _newSubInfoDBIO(arrTx); // 4.1.2 primary key 조립 _setKey(oldCache,arrTx); // 4.1.3 보조정보Map-> DBIO VO값 채우기 DtoUtils.setSubInfoIO(subInfoMap, oldCache); // 4.1.4 캐싱된 보조명세 정보가 없으면 최초 저장, 즉 insert _insertSubInfo(arrTx, oldCache); // 4.1.5 arrTx.set
TGT:
Store one extended attribute of subsidiary information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  81.37
========================================================================================================================
SRC:
public String getDayCloseWay() throws BizApplicationException { //FIXME: jungwooyung 160122 - 추후 시스템파라미터화 return DayCloseWayEnum.APPLICATION.getValue(); }
TGT:
It inquiries day closing way.
PRED:
It inquiries day closing way.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CustEtcReportSvcGetOut clone(){ try{ CustEtcReportSvcGetOut object= (CustEtcReportSvcGetOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrReal> getListArrBasedOnStsHistory(String deptId, ArrDeptRelEnum arrDeptRel, String pdCd, ArrStsEnum curArrSts, ArrStsEnum arrSts, String inqryStartDt, String inqryEndDt) throws BizApplicationException { return _getArrDeptRelImpl().getArrListBasedOnArrStatusHistory(deptId, null, null, null, pdCd, arrDeptRel, curArrSts, arrSts, null, inqryStartDt, inqryEndDt, 0, 0, false); }
TGT:
Inquire specific customer own (as main contractor) arrangements whose status changed into specific status within inquiry period and currently in another specific status. Current Status / Base Status / Inquiry Period(Start Date / End Date) Approved / Applied / 1/1 ~ 3/1 : Get arrangement applied within 1/1 ~ 3/1 and approved currently. Arrangement whose status was changed into other status on 1/1 is not inquired. Active / Applied / 1/1 ~ 3/1 : Get arrangement applied within 1/1 ~ 3/1
PRED:
Inquire specific department own (as accounting department) arrangements of specific product hierarchy whose status changed into specific status within inquiry period and currently in another specific status. (Paging) Inquire modification arrangement of inquired arrangement if hasVrtnArr is true.
test 샘플별 bleu-4:  14.2
========================================================================================================================
SRC:
public java.lang.String getIssueDt(){ return issueDt; }
TGT:
Inquire issue date of arrangement issued media.
PRED:
Inquire issue date of arrangement issued media.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getSubInfo(String atrbtNm, AssetImpl assetImpl) throws BizApplicationException { // 1. 보조명세 캐시 조회 IValueObject assetSubInfo = getSubInfoCache(assetImpl); // 2. 보조원장 캐시가 null인 경우, null 리턴 if (assetSubInfo == null) { return null; } // 3. 보조명세 캐시에서 속성명을 기준으로 속성값 조회 Object atrbtVal = assetSubInfo.get(atrbtNm); // 속성값이 null인경우 null리턴 if (atrbtVal == null) { return null; } return String.valueOf(atrbtVal); }
TGT:
This method provides to inquire the specific subsidiary information named 'xtnAtrbtNm'.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  22.45
========================================================================================================================
SRC:
public String getAttributeName() { return stdDtoClassAtrbt.getAttributeName(); }
TGT:
Query attribute name
PRED:
Query attribute name
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public TestBatchDIO clone(){ try{ TestBatchDIO object= (TestBatchDIO)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public LnAgrmntOpenSvcSmltnRsltIO clone(){ try{ LnAgrmntOpenSvcSmltnRsltIO object= (LnAgrmntOpenSvcSmltnRsltIO)super.clone(); if ( this.rpymntPlnList== null ) object.rpymntPlnList = null; else{ java.util.List<bankware.corebanking.loan.query.service.dto.ArrCashFlowScheduleSvcListOut> clonedList = new java.util.ArrayList<bankware.corebanking.loan.query.service.dto.ArrCashFlowScheduleSvcListOut>(rpymntPlnList.size()); for( bankware.corebanking.loan.query.service.dto.ArrCashFlowScheduleSvcListOut item : rpymntPlnList ){ clonedList.add( (bankware.corebanking.loan.query.service.dto.ArrCashFlowScheduleSvcListOut)item.clone()); } object.rpymntPlnList = clonedList; } if ( this.intRtList== null ) object.intRtList = null; else{ java.util.List<bankware.corebanking.loan.open.service.dto.LnAgrmntOpenSvc360IntRt> clonedList = new java.util.ArrayList<bankware.corebanking.loan.open.service.dto.LnAgrmntOpenSvc360IntRt>(intRtList.size()); for( bankware.corebanking.loan.open.service.dto.LnAgrmntOpenSvc360IntRt item : intRtList ){ clonedList.add( (bankware.corebanking.loan.open.service.dto.LnAgrmntOpenSvc360IntRt)item.clone()); } object.intRtList = clonedList; } if ( this.feeList== null ) object.feeList = null; else{ java.util.List<bankware.corebanking.deposit.simulation.service.dto.FeeSmltnSvcOutSub> clonedList = new java.util.ArrayList<bankware.corebanking.deposit.simulation.service.dto.
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Map<String, String> getMapXtnInfo() throws BizApplicationException { // 액터 확장정보 및 보조명세 조회 Map<String, String> xtnInfoMap = getActor().getMapXtnInfo(); // 고객 확장정보 조회 xtnInfoMap.putAll(super.getMapXtnInfoByEav()); // 고객 보조명세 조회 xtnInfoMap.putAll(_getCustSubInfoBiz().getMapSubInfo(this)); return xtnInfoMap; }
TGT:
Inquire the actor extended information map. Inquire extended information with normal extended attribute status code.
PRED:
Inquire the actor extended information map. Inquire extended information with normal extended attribute status code.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public SellTcSvcIn clone(){ try{ SellTcSvcIn object= (SellTcSvcIn)super.clone(); if ( this.sellList== null ) object.sellList = null; else{ java.util.List<bankware.corebanking.foreignexchange.currencyexchange.service.dto.SellTcInfoList> clonedList = new java.util.ArrayList<bankware.corebanking.foreignexchange.currencyexchange.service.dto.SellTcInfoList>(sellList.size()); for( bankware.corebanking.foreignexchange.currencyexchange.service.dto.SellTcInfoList item : sellList ){ clonedList.add( (bankware.corebanking.foreignexchange.currencyexchange.service.dto.SellTcInfoList)item.clone()); } object.sellList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getNumbering(String instCd, String nbrgAtrbtNm, Map<String, Object> inpParmMap, Boolean isReUseSameTxNbrg) throws BizApplicationException { // 기관코드와 채번속성명이 있는지 검증 한다. _checkNumberingInput(instCd, nbrgAtrbtNm); // Query numbering rule CaNumberingGetIn inParm = new CaNumberingGetIn(); inParm.setInstCd(instCd); inParm.setNbrgAtrbtNm(nbrgAtrbtNm); // 채번규칙 조회 CaNumberingGetListOut numbering02Out = this.getNumberingRule(inParm); CaCmNbrgRuleMIO cmNbrgRuleMIO = _setCommonNumberingRuleMasterParameter(numbering02Out); List<CaCmNbrgRuleCmpsDIO> listCmNbrgRuleCmpsDIO = new ArrayList<CaCmNbrgRuleCmpsDIO>(); for (CaNumberingGetOut numbering02OutSub1 : numbering02Out.getTblNm()) { listCmNbrgRuleCmpsDIO.add(_setNumberingRuleCompositionDetailParameter(numbering02OutSub1)); } // Assemble numbering layer value String jsonCntnt = ""; Map<String, Object> tierValMap = new LinkedHashMap<String, Object>(); for (CaCmNbrgRuleCmpsDIO cmNbrgRuleCmpsDIO : listCmNbrgRuleCmpsDIO) { // 채번계층여부가 Y 이면 채번계층값을 가져 온다. if (CCM01.YES.equals(cmNbrgRuleCmpsDIO.getNbrgTierYn())) { Entry
TGT:
It calculates next number.
PRED:
It calculates next number. Compared to the default method, the omitted 'instCd' value is replaced by instCd in Common Context. Compared to the default method, the omitted 'isReUseSameTxNbrg' value is replaced by false. Compared to the default method, the omitted 'inpParmMap' value is replaced by null.
test 샘플별 bleu-4:  7.28
========================================================================================================================
SRC:
public boolean check(String in) throws BizApplicationException { if (!StringUtils.isEmpty(in) && in.compareTo(_getCmnContext().getTxDate()) >= 0) { // {0} must be smaller than {1}. throw new BizApplicationException("AAPCME0007", new Object[] { "@txDt", "@rckngDt" }); } return true; }
TGT:
Validate the attribute value ( Simple Validation ) Implemented and used by each business component.
PRED:
Validate the attribute value ( Complex Validation ) Implemented and used by each business component.
test 샘플별 bleu-4:  81.54
========================================================================================================================
SRC:
public void modifyDoc(CaDocBsicIO modifyDocBsicIO) throws BizApplicationException { _getDocBsic().modify(modifyDocBsicIO); setDocBasic(modifyDocBsicIO); }
TGT:
It modifies document information.
PRED:
It modifies document information.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<StTxMIO> getListCounterpartArrTx(StTxMIO in) throws BizApplicationException { return _getStTxMByArrDso().selectCounterpartArrTxList(in); }
TGT:
This method inquires an {@link ArrTx} object that contains the entered transaction information as its counterpart transaction information.
PRED:
This method inquires the counterpart transaction list of the transaction.
test 샘플별 bleu-4:  13.03
========================================================================================================================
SRC:
public void modifyCndValue(String baseDt, List<ArrCndCrtn> ArrCndCrtnList, String txDt, Integer txSeqNbr) throws BizApplicationException { _getArrRealCoreFundamentalAgent().changeCndValue(baseDt, ArrCndCrtnList, txDt, txSeqNbr, this); }
TGT:
This method change the arrangement condition value to new one It terminate old condition on base date (effective end date), and create new condition
PRED:
Change condition value of arrangement level condition and create condition value change history. If there is condition value history, terminate it one and create new one. Update applied interest table if it is interest condition.
test 샘플별 bleu-4:  9.08
========================================================================================================================
SRC:
public String getSubInfo(ActorCore actorCore, String ctcptId, int ctcptChngSeqNbr, String xtnAtrbtNm) throws BizApplicationException { return _getActorCtcptSubInfoBiz().getSubInfo((ActorImpl) actorCore, ctcptId, ctcptChngSeqNbr, xtnAtrbtNm); }
TGT:
Inquire a specific subsidiary information of the appraisal thing.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  78.61
========================================================================================================================
SRC:
public CndVal getCndVal(List<ProvideCnd> prvdCndList) throws BizApplicationException { if (isComplexCnd()) { // Error if complex condition throw new BizApplicationException("AAPPDE0004", null); } CndVal cndVal = null; // Set input PdPdCndSimpleSearchIn inDao = new PdPdCndSimpleSearchIn(); inDao.setTntInstId(getInstCd()); inDao.setAplyStartDt(_getAplyStartDt()); inDao.setCndCd(getCndCd()); inDao.setCndGrpCd(getCndGrpCd()); inDao.setCndGrpTmpltCd(getCndGrpTmpltCd()); if (isListCnd()) { // 목록조건값 조회 cndVal = _getListCndValue(inDao); } else if (isRngCnd()) { // 범위조건값 조회 cndVal = _getRangeCndValue(inDao); } else if (isIntCnd()) { // 우대금리일 경우 제공조건에따른 규칙을 계산하여 아래 로직을 태울지말지 결정 if (isPreferentialInterestCnd() && !isPreferentialInterestProvideCndApplyRulePass(prvdCndList)) { return null; } // 금리조건값 조회 cndVal = _getInterestCndValue(inDao); } else if (isFeeCnd()) { // 수수료조건값 조회 cndVal = _getFeeCndValue(inDao); } //
TGT:
This method inquire privide condition value.
PRED:
This method get the arrangement condition value as string. For list type condition, return list code and the other type return the string number applied the scale 2
test 샘플별 bleu-4:  6.12
========================================================================================================================
SRC:
public void saveSubInfo(ActorCore actorCore, String xtnAtrbtNm, String xtnAtrbtCntnt) throws BizApplicationException { _getActorSubInfoBiz().saveSubInfo(xtnAtrbtNm, xtnAtrbtCntnt, (ActorImpl) actorCore); }
TGT:
Save an security interest subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public CaArrPsbkMsgMgmtSvcGetListPsbkMsgOut clone(){ try{ CaArrPsbkMsgMgmtSvcGetListPsbkMsgOut object= (CaArrPsbkMsgMgmtSvcGetListPsbkMsgOut)super.clone(); if ( this.psbkMsgList== null ) object.psbkMsgList = null; else{ java.util.List<bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrPsbkMsgMgmtSvcGetListPsbkMsg> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrPsbkMsgMgmtSvcGetListPsbkMsg>(psbkMsgList.size()); for( bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrPsbkMsgMgmtSvcGetListPsbkMsg item : psbkMsgList ){ clonedList.add( (bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrPsbkMsgMgmtSvcGetListPsbkMsg)item.clone()); } object.psbkMsgList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public IValueObject getSubInfo(StlmntCalcnSubInfoInqryIn stlmntCalcnSubInfoInqryIn) throws BizApplicationException { return _getStlmntCalcnSubInfoBiz().getSubInfo(_setStStlmntCalcnSIO(stlmntCalcnSubInfoInqryIn)); }
TGT:
Inquire a specific subsidiary information of the appraisal thing.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  78.61
========================================================================================================================
SRC:
public CustChngSvcDeleteLoginInfoIn clone(){ try{ CustChngSvcDeleteLoginInfoIn object= (CustChngSvcDeleteLoginInfoIn)super.clone(); if ( this.loinIdNbrList== null ) object.loinIdNbrList = null; else{ java.util.List<bankware.corebanking.customer.security.service.dto.CustChngSvcDeleteLoginInfoInSub> clonedList = new java.util.ArrayList<bankware.corebanking.customer.security.service.dto.CustChngSvcDeleteLoginInfoInSub>(loinIdNbrList.size()); for( bankware.corebanking.customer.security.service.dto.CustChngSvcDeleteLoginInfoInSub item : loinIdNbrList ){ clonedList.add( (bankware.corebanking.customer.security.service.dto.CustChngSvcDeleteLoginInfoInSub)item.clone()); } object.loinIdNbrList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArrCndChngDtlInqryOutList clone(){ try{ ArrCndChngDtlInqryOutList object= (ArrCndChngDtlInqryOutList)super.clone(); if ( this.dtlList== null ) object.dtlList = null; else{ java.util.List<bankware.corebanking.deposit.query.service.dto.ArrCndChngDtlInqryOut> clonedList = new java.util.ArrayList<bankware.corebanking.deposit.query.service.dto.ArrCndChngDtlInqryOut>(dtlList.size()); for( bankware.corebanking.deposit.query.service.dto.ArrCndChngDtlInqryOut item : dtlList ){ clonedList.add( (bankware.corebanking.deposit.query.service.dto.ArrCndChngDtlInqryOut)item.clone()); } object.dtlList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
private BfCndTestSvcOut getPrfIntRtAplyTmCd(BfCndTestSvcIn in) throws BizApplicationException { // Set input BfIn bfIn = new BfIn(); bfIn.setBfCd(in.getPdCd()); bfIn.setAplyDt(in.getAplyDt()); // BF 객체생성 Bf bf = _getBfMngr().getBf(bfIn); // 조건객체 생성 BfCnd bfCnd = bf.getCnd(in.getCndCd()); String output = bfCnd.getPrfIntRtAplyTmCd(); BfCndTestSvcOut out = new BfCndTestSvcOut(); if (StringUtils.isEmpty(output)) { out.setChkYn(false); } else { out.setChkYn(true); out.setCntnt(output.toString()); } return out; }
TGT:
This method inquire preference interest rate apply term code.
PRED:
This method inquire preference interest rate apply term code.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CmAprvlMIO select(CmAprvlMIO cmApprvMIO) { return _getCmAprvlM().select(cmApprvMIO); }
TGT:
It get a http header properties.
PRED:
It get a http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void doServiceAction(String arrSrvcTpCd,ArrCndActionRequiredValue arrCndActionRequiredValue) throws BizApplicationException { if (!this.getArrangementCore().isReal()) return; // if( !super.isIntRtRegisterTarget(arrSrvc)) return; // // super.registerArrIntRt(arrSrvc, this.getArr().getArrOpnDt(), arrCndActionRequiredValue.getTxDt(), arrCndActionRequiredValue.getTxSeqNbr() ); }
TGT:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
PRED:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CndVal getListCndValueWithName(List<CmpsCnd> cmpsCndList) throws BizApplicationException { if (!isListCnd()) { // 목록코드가 아니면 오류 throw new BizApplicationException("AAPPDE0042", null); } if (isComplexCnd()) { if (CollectionCoreUtils.isEmpty(cmpsCndList)) { // 복합조건인 경우 구성조건이 없으면 오류 throw new BizApplicationException("AAPPDE0007", null); } PdComplexCndStructureInfoOut outDao = getComplexCndStructureInfo(cmpsCndList); PdPdCndUnitComplexSearchIn inDao = new PdPdCndUnitComplexSearchIn(); inDao.setTntInstId(getInstCd()); inDao.setAplyStartDt(_getAplyStartDt()); inDao.setCndCd(getCndCd()); inDao.setCndGrpCd(getCndGrpCd()); inDao.setCmpxStrctrId(getCmpxStrctrId()); inDao.setCndGrpTmpltCd(getCndGrpTmpltCd()); inDao.setTierNbr(outDao.getTierNbr()); // Return Output return _getComplexListCndValueWithName(inDao); } else { // Set input PdPdCndSimpleSearchIn inDao = new PdPdCndSimpleSearchIn(); inDao.setTntInstId(getInstCd()); inDao.setAplyStartDt(_getAplyStartDt()); inDao.setCndCd(getCndCd()); inDao.setCndGrpCd(getCndGrpCd()); inDao.setCndGrpTmpltCd(getCndGrpTmpltCd()); // Return Output return _getListCndValueWithName(inDao); } }
TGT:
This method inquire list condition value. with inquire list code name.
PRED:
This method inquire list condition value. with inquire list code name.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getSubInfo(String xtnAtrbtNm, ArrIssmdaCore arrIssmda) throws BizApplicationException { return _getArrIssmdaSubInfoBiz().getSubInfo(xtnAtrbtNm, (ArrIssmdaImpl) arrIssmda); }
TGT:
Inquire a specific subsidiary information of the security interest.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  67.87
========================================================================================================================
SRC:
public boolean isTableAttributeValid(String xtnTblNm, String xtnAtrbtNm, String atrbtCntnt, AtrbtCheckPdInfo pd) throws BizApplicationException { if(!_checkAttributeBase(xtnTblNm, xtnAtrbtNm, atrbtCntnt)) { return false; } CmTblXtnAtrVrtnCmpsDIO cmTblXtnAtrVrtnCmpsDIO = _getCmTblXtnAtrVrtnCmpsDDso().selectXtnAtrbtVrtnCmpsCd(_getCmnContextCore().getInstCode(), xtnTblNm, xtnAtrbtNm); if(cmTblXtnAtrVrtnCmpsDIO == null || "".equals(cmTblXtnAtrVrtnCmpsDIO.getXtnAtrbtVrtnCmpsCd())) { // 기관에 데이터가 없을시 STDA 기관으로 재조회 하여 검증 한다. cmTblXtnAtrVrtnCmpsDIO = new CmTblXtnAtrVrtnCmpsDIO(); cmTblXtnAtrVrtnCmpsDIO = _getCmTblXtnAtrVrtnCmpsDDso().selectXtnAtrbtVrtnCmpsCd(_getCmnContextCore().getStandardInstCode(), xtnTblNm, xtnAtrbtNm); if(cmTblXtnAtrVrtnCmpsDIO != null && XtnAtrbtVrtnCmpsEnum.NA.getValue().equals(cmTblXtnAtrVrtnCmpsDIO.getXtnAtrbtVrtnCmpsCd())) { return true; } } else if(XtnAtrbtVrtnCmpsEnum.NA.getValue().equals(cmTblXtnAtrVrtnCmpsDIO.getXtnA
TGT:
Validate extend attribute validation Not product.
PRED:
Validate extend attribute validation Not product.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean checkCode(CdNbrInfoIO in, String cd) throws BizApplicationException { String xtnCdClassNm = in.getXtnCdClassNm(); String lngCd = in.getLngCd(); if (StringCoreUtils.isEmpty(xtnCdClassNm)) { throw new BizApplicationException("AAPCME0006", new Object[] { "@xtnCdClassNm" }); } // 해당 클래스의 빈명 추출 해야 된다. CbbClass cbpClass = _getCbpClass().getClassInfo(xtnCdClassNm); String beanName = cbpClass.getBeanName(); if(logger.isDebugEnabled()) { logger.debug("lyj beanName : {}", beanName); } if(!CCM01.CHAR_AT.equals(beanName)) { xtnCdClassNm = beanName; } if (StringCoreUtils.isEmpty(lngCd)) { lngCd = _getCmnContextCore().getLanguageCode(); } String cdNbr = in.getCdNbr(); String instCd = in.getInstCd(); if(StringCoreUtils.isEmpty(in.getInstCd())) { instCd = _getCmnContextCore().getInstCode(); } // Get the login user's language code name Map<String, Object> supplInfoVal = new HashMap<String, Object>(); supplInfoVal.put(InstParamEnum.LANGUAGE_CODE.getValue(), lngCd); supplInfoVal.put(InstParamEnum.INSTITUTION_CODE.getValue(), instCd); supplInfoVal.put(CCM03.CD, cd); XtnCdCore xtdCd = (XtnCdCore) CbbApplicationContext.getBean(xtnCdClassNm); return xtdCd.checkCode(cdNbr, supplInfoVal); }
TGT:
This method check the code number. If code is exist return true, else return false.
PRED:
It check code number & code value by cdDtlIO DTO. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter.
test 샘플별 bleu-4:  4.82
========================================================================================================================
SRC:
public CustCmphInqrySvcGetCustIdIn clone(){ try{ CustCmphInqrySvcGetCustIdIn object= (CustCmphInqrySvcGetCustIdIn)super.clone(); if ( this.xtnInfoList== null ) object.xtnInfoList = null; else{ java.util.List<bankware.corebanking.customer.query.service.dto.CustCmphInqrySvcGetCustXtnInfoListIn> clonedList = new java.util.ArrayList<bankware.corebanking.customer.query.service.dto.CustCmphInqrySvcGetCustXtnInfoListIn>(xtnInfoList.size()); for( bankware.corebanking.customer.query.service.dto.CustCmphInqrySvcGetCustXtnInfoListIn item : xtnInfoList ){ clonedList.add( (bankware.corebanking.customer.query.service.dto.CustCmphInqrySvcGetCustXtnInfoListIn)item.clone()); } object.xtnInfoList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public TxHstQrySvcInquiryLinkTransactionOut clone(){ try{ TxHstQrySvcInquiryLinkTransactionOut object= (TxHstQrySvcInquiryLinkTransactionOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Integer getAcctgLogCount(String guid, String deptId, String acctgPrcsngDt) throws BizApplicationException{ // 변경 Integer result = 0; List<JrnzPrcsAcctgItm> jrnzPrcsAcctgItmList = null; // guid 목록을 선 조회후 coa 에서 각주계정 제외하여 조회 한다. jrnzPrcsAcctgItmList = _getAcAcctgLDso().selectListByGuid(guid, _getCmnContextCore().getInstCode(), deptId, acctgPrcsngDt); for(JrnzPrcsAcctgItm jrnzPrcsAcctgItm : jrnzPrcsAcctgItmList) { result += _getAcCoaMDso().selectListDistr(jrnzPrcsAcctgItm.getInstCd(), null, jrnzPrcsAcctgItm.getAcctgItmCd(), null, TitlAcctgClcdEnum.FOOT_NOTE.getValue(), CCM01.NO).size(); } if(logger.isDebugEnabled()) { logger.debug(" ################### getAcctgLogCount result: {}", result); } return result; }
TGT:
It inquires the total number of accounting log generated through one financial transaction. It returns the total counts of accounting log with the entered GUID, accounting processing date.
PRED:
It inquires the total number of accounting log generated through one financial transaction in distributed environment. It returns the total counts of accounting log with the entered GUID.
test 샘플별 bleu-4:  75.99
========================================================================================================================
SRC:
public List<CaRoleScrnRIO> getListRoleScrennRelation(String instCd) throws BizApplicationException { _checkStringValue(instCd, CCM03.INST_CD); List<CaCmRoleScrnRIO> cmRoleScrnList = _getCmRoleScrnRDso().selectListForRoleId(instCd); List<CaRoleScrnRIO> roleScrnList = new ArrayList<CaRoleScrnRIO>(); for(CaCmRoleScrnRIO cmRoleScrnRIO : cmRoleScrnList) { roleScrnList.add(_getRoleScrnRIO(cmRoleScrnRIO)); } return roleScrnList; }
TGT:
It inquires role screen relation list for role identification
PRED:
It inquires role screen relation list for role identification
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String checkPassword(StaffBsicInfoIO staffBsicInfo, String pswd) throws BizApplicationException { String securityCheckRsltTpCd = null; if (staffBsicInfo == null) { return SecurityCheckRsltTpEnum.FAIL_NO_SCRTY_DATA.getValue(); } if (staffBsicInfo.getPswd() == null) { securityCheckRsltTpCd = SecurityCheckRsltTpEnum.FAIL_NO_SCRTY_DATA.getValue(); } else { if (staffBsicInfo.getPswd().equals(pswd)) { securityCheckRsltTpCd = SecurityCheckRsltTpEnum.SUCCESS.getValue(); } else { securityCheckRsltTpCd = SecurityCheckRsltTpEnum.FAIL_DIFF_SCRTY_DATA.getValue(); } } return securityCheckRsltTpCd; }
TGT:
It checks if the input password equals with the registered password of the input login information.
PRED:
It checks if the input password equals the registered password of the main login information.
test 샘플별 bleu-4:  66.78
========================================================================================================================
SRC:
public List<CaInstScrnInfoIO> getListInstScreen(String instCd) throws BizApplicationException { CaSvInstScrnMIO svInstScrnMIO = new CaSvInstScrnMIO(); List<CaInstScrnInfoIO> out = new ArrayList<CaInstScrnInfoIO>(); CaInstScrnInfoIO scrnInfoIO = null; svInstScrnMIO.setInstCd(instCd); List<CaSvInstScrnMIO> outDaoList = _getSvInstScrnMDso().selectList(svInstScrnMIO); for( CaSvInstScrnMIO outDao: outDaoList ){ scrnInfoIO = new CaInstScrnInfoIO(); // Generated by code generator [[ scrnInfoIO.setScrnId(outDao.getScrnId());// set [Screen id] scrnInfoIO.setAplyStartDt(outDao.getAplyStartDt()); scrnInfoIO.setInstCd(outDao.getInstCd()); scrnInfoIO.setScrnUrlAddr(outDao.getScrnUrlAddr());// set [Screen URL address] // Generated by code generator ]] out.add(scrnInfoIO); } return out; }
TGT:
Inquiry institution screen list by institution code.
PRED:
Inquiry institution screen list.
test 샘플별 bleu-4:  31.59
========================================================================================================================
SRC:
public int delete(CmNbrgRuleMIO cmNbrgRuleMIO) { super.clearCache(DataCacheCoreConfig.COMMON_NUMBER_RULE_SELECT_CACHE); return _getCmNbrgRuleM().delete(cmNbrgRuleMIO); }
TGT:
Delete the security interest.
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  20.56
========================================================================================================================
SRC:
public RlsttCltrlMgmtSvcDelIn clone(){ try{ RlsttCltrlMgmtSvcDelIn object= (RlsttCltrlMgmtSvcDelIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public DepoBnkArrMgmtSvcClsOut clone(){ try{ DepoBnkArrMgmtSvcClsOut object= (DepoBnkArrMgmtSvcClsOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getInstCd() { String tntInstId = null; if (pdPdCndM == null) { tntInstId = this.instCd; if (StringCoreUtils.isEmpty(tntInstId)) { return null; } } else { tntInstId = pdPdCndM.getInstCd(); } // Return 기관코드 return tntInstId; }
TGT:
It inquires institution code where the teller belongs to.
PRED:
This method get financial institution code by which the arrangement is created and managed.
test 샘플별 bleu-4:  12.5
========================================================================================================================
SRC:
public List<CaCmnCdCheckOut> getListCode(String cdNbr) throws BizApplicationException { // Check the code number _checkCodeNumber(cdNbr); List<CaCmnCdCheckOut> out = new ArrayList<CaCmnCdCheckOut>(); // Get the code master information CaCdNbrInfoIO cdMstOut = _getCodeMasterInformation(cdNbr); // Get the code detail information List<CaCdDtlIO> cdDtlOutList = _getCdDtl().getCodeDetail(cdMstOut); for (CaCdDtlIO cdDtlIO : cdDtlOutList) { CaCmnCdCheckOut cmnCdCheckOut = _setCodeCheckOut(cdDtlIO, cdMstOut.getCdNbrTpCd()); out.add(cmnCdCheckOut); } return out; }
TGT:
It gets the customer agreement code list registered in the input institution.
PRED:
It make the combo-box of Code that meet the search condition. Combo-box is consisted of CmnCdCheckOut. (cdNbr, cd, cdNm, delYn, cdAbrvtnNm)
test 샘플별 bleu-4:  6.91
========================================================================================================================
SRC:
public AplyDstbTgtDtlIO clone(){ try{ AplyDstbTgtDtlIO object= (AplyDstbTgtDtlIO)super.clone(); object.lastChngTmstmp = (bxm.omm.format.wrapper.DateFormattedWrapper)this.lastChngTmstmp.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CustRgstSvcCntctPntListIn clone(){ try{ CustRgstSvcCntctPntListIn object= (CustRgstSvcCntctPntListIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public PswdVldtnSvcCheckPswdOut clone(){ try{ PswdVldtnSvcCheckPswdOut object= (PswdVldtnSvcCheckPswdOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArrBsicQrySvcGetChildrenArrItmOut clone(){ try{ ArrBsicQrySvcGetChildrenArrItmOut object= (ArrBsicQrySvcGetChildrenArrItmOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getApplyDateString(String applyDate) throws BizApplicationException { String out = ""; if (StringCoreUtils.isEmpty(applyDate)) { throw new BizApplicationException("AAPATE0067", new String[] { "Apply Date" }); } else if (applyDate.length() > 8) { out = applyDate.replace("-", ""); // YYYY-MM-DD -> YYYYMMDD } else if (applyDate.length() == 8) { out = applyDate; } if (out.length() > 8 || out.isEmpty()) { throw new BizApplicationException("AAPCME0006", new Object[]{"@aplyStartDt"}); } // Return output return out; }
TGT:
Methods to convert the date format - YYYY-MM-DD -> YYYYMMDD
PRED:
This Method inquire apply date string. It is the date input value for benefit information inquiry.
test 샘플별 bleu-4:  10.12
========================================================================================================================
SRC:
public WorkflowVariableSvcIO clone(){ try{ WorkflowVariableSvcIO object= (WorkflowVariableSvcIO)super.clone(); object.lastChngTmstmp = (bxm.omm.format.wrapper.DateFormattedWrapper)this.lastChngTmstmp.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<CmpsCnd> getCmpsCnd() throws BizApplicationException { if (!isComplexCnd()) { throw new BizApplicationException("AAPPDE0003", null); // 단순조건 simple condition } // Return output return getCmpsCnd(getCmpxStrctrId()); }
TGT:
This method inquire all composing condition list in input value complex structure identity. if simple condition, throws Exception. DataCache has been applied.
PRED:
This method inquire all composing condition list in input value complex structure identity. if simple condition, throws Exception. DataCache has been applied.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public int delete(CaArArrCndClassMIO CaArArrCndClassMIO) { int cnt = _getArArrCndClassM().delete(CaArArrCndClassMIO); _getArDataCacheManager().clearInstanceCache(DataCacheCoreConfig.ARR_CND_CLASS_NAME_CACHE, null); return cnt; }
TGT:
Delete all occurrences of the given substring.
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public GrntCltrlMgmtSvcSaveOut clone(){ try{ GrntCltrlMgmtSvcSaveOut object= (GrntCltrlMgmtSvcSaveOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void updateArrDocRXtnInfo(ArArrDocRXtnInfoDIO arArrDocRXtnInfoDIO, String txDt, Integer txSeqNbr) throws BizApplicationException { // 속성값변경이력 저장 if(!StringCoreUtils.isEmpty(txDt) && txSeqNbr != null) { _saveArrRelAtrbtValChangeHistory(arArrDocRXtnInfoDIO.getArrId(), ArrRelKndCoreEnum.DOCUMENT.getValue(), arArrDocRXtnInfoDIO.getArrDocRelCd(), arArrDocRXtnInfoDIO.getDocIssueId(), CCM01.ZERO, arArrDocRXtnInfoDIO.getXtnAtrbtNm(),arArrDocRXtnInfoDIO.getXtnAtrbtCntnt(), txDt, txSeqNbr); } // 확장속성 update _getCmnContextCore().setHeaderColumn(arArrDocRXtnInfoDIO); _getArArrDocRXtnInfoDDso().update(arArrDocRXtnInfoDIO); }
TGT:
Modify one arrangement/document relation extended attribute of subsidiary information(CTI)
PRED:
Modify one arrangement/document relation extended attribute of subsidiary information(CTI)
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, String txDt, Integer txSeqNbr, ScrtyIntImpl scrtyIntImpl) { // 0. null check if (StringUtils.isEmpty(xtnAtrbtNm)){ return; } // 1. 표준속성에 등록된 검증규칙을 통해 입력받은 확장속성내용 검증 _getAtrbtChk().checkStandardAttribute(xtnAtrbtNm, xtnAtrbtCntnt); // 2. 보조원장 캐시 조회결과에 따라 insert/update 판단 AsScrtyIntSIO subInfoCache = getSubInfoCache(scrtyIntImpl); if(subInfoCache == null){ // DBIO VO new instance subInfoCache = new AsScrtyIntSIO(); subInfoCache.setScrtyIntId(scrtyIntImpl.getScrtyIntBasicCache().getScrtyIntId()); // PK setting // 빈 이력 생성 --> undo 시 확장속성 저장 이전으로 속성값을 원복시키기 위함 _saveSubInfoHst(scrtyIntImpl, subInfoCache, txDt, txSeqNbr); // 입력된 확장속성명과 확장속성내용을 DBIO VO에 setting DtoUtils.
TGT:
Save an appraisal thing subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public CaAtrbtVldtnWayEnum getAttributeValidationWayCode() { return (isValidationTailored)? atrbtVldtnWayCd: CaAtrbtVldtnWayEnum.getEnum(stdDtoClassAtrbt.getAtrbtVldtnWayCd()); }
TGT:
Get attribute validation way code
PRED:
Get attribute validation way code
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaRoleMgmtSvcSaveRoleServiceRelationListIn clone(){ try{ CaRoleMgmtSvcSaveRoleServiceRelationListIn object= (CaRoleMgmtSvcSaveRoleServiceRelationListIn)super.clone(); if ( this.tblNm== null ) object.tblNm = null; else{ java.util.List<bankware.corebanking.configurationadmin.role.service.dto.CaRoleMgmtSvcSaveRoleServiceRelationIn> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.role.service.dto.CaRoleMgmtSvcSaveRoleServiceRelationIn>(tblNm.size()); for( bankware.corebanking.configurationadmin.role.service.dto.CaRoleMgmtSvcSaveRoleServiceRelationIn item : tblNm ){ clonedList.add( (bankware.corebanking.configurationadmin.role.service.dto.CaRoleMgmtSvcSaveRoleServiceRelationIn)item.clone()); } object.tblNm = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public DateMngrCalDayHmsOut calculateDateByDayHourMinuteSecond(String endTmstmp) throws BizApplicationException { String startTmstmp = _getCmnContext().getTxDate()+_getCmnContext().getTxTime(); // 현재시간 if (!DateCoreUtils.isValidDate(startTmstmp, DATE_FORMAT_YYYYMMDD.concat(TIME_FORMAT_HHMMSS))) { throw new BizApplicationException("AAPCME0001", new Object[] { startTmstmp, "" }); } if (!DateCoreUtils.isValidDate(endTmstmp, DATE_FORMAT_YYYYMMDD.concat(TIME_FORMAT_HHMMSS))) { throw new BizApplicationException("AAPCME0001", new Object[] { endTmstmp, "" }); } return _calculateDateByDayHourMinuteSecond(startTmstmp, endTmstmp); }
TGT:
It calculates the remaining time(in hours, minutes, seconds) from a specific start date to a specific end date. If the start date is greater than the end date, it is an error.
PRED:
It calculates the remaining period from the current day to the specific end date (hour, minute, second). End date must be greater than current time.
test 샘플별 bleu-4:  14.89
========================================================================================================================
SRC:
public void terminate(ArrActvtyChngIn arrActvtyChngIn) throws BizApplicationException { super.changeStatus(ArrActvtyStsEnum.TERMINATED.getValue(), arrActvtyChngIn); }
TGT:
Change status of arrangement issued media into "Terminated".
PRED:
Change status of arrangement group into "Terminated". Available next status is managed by ArrGrpMapStsChngDflt and it throws error if new status is not available.
test 샘플별 bleu-4:  16.22
========================================================================================================================
SRC:
public String getSubInfo(String xtnAtrbtNm, Integer arrSrvcBlckngSeqNbr, Integer seqNbr, ArrRealImpl arrRealImpl) throws BizApplicationException { IValueObject subInfo = _getSubInfoCache(arrRealImpl, arrSrvcBlckngSeqNbr, seqNbr); if (subInfo == null) { return null; } Object xtnAtrbtCntnt = subInfo.get(xtnAtrbtNm); if (xtnAtrbtCntnt == null) { return null; } return String.valueOf(xtnAtrbtCntnt); }
TGT:
This method provide settlement subsidiary calculation detail information.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  12.61
========================================================================================================================
SRC:
public void modifyArrPrtnrRelation(ArrPrtnrRelChngIn in) throws BizApplicationException { _getArrPrtnrRelBiz().modifyArrPrtnrRelation(in, this); }
TGT:
Change arrangement-partner relation.
PRED:
Change arrangement-partner relation.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public PrtnrRgstSvcIn clone(){ try{ PrtnrRgstSvcIn object= (PrtnrRgstSvcIn)super.clone(); if ( this.xtnInfoList== null ) object.xtnInfoList = null; else{ java.util.List<bankware.corebanking.partner.open.service.dto.PrtnrRgstSvcXtnInfoIn> clonedList = new java.util.ArrayList<bankware.corebanking.partner.open.service.dto.PrtnrRgstSvcXtnInfoIn>(xtnInfoList.size()); for( bankware.corebanking.partner.open.service.dto.PrtnrRgstSvcXtnInfoIn item : xtnInfoList ){ clonedList.add( (bankware.corebanking.partner.open.service.dto.PrtnrRgstSvcXtnInfoIn)item.clone()); } object.xtnInfoList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaErrMsgMgmtSvcGetErrMsgListOut clone(){ try{ CaErrMsgMgmtSvcGetErrMsgListOut object= (CaErrMsgMgmtSvcGetErrMsgListOut)super.clone(); if ( this.errMsgList== null ) object.errMsgList = null; else{ java.util.List<bankware.corebanking.configurationadmin.applicationcommon.service.dto.CaErrMsgMgmtSvcGetErrMsgOut> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.applicationcommon.service.dto.CaErrMsgMgmtSvcGetErrMsgOut>(errMsgList.size()); for( bankware.corebanking.configurationadmin.applicationcommon.service.dto.CaErrMsgMgmtSvcGetErrMsgOut item : errMsgList ){ clonedList.add( (bankware.corebanking.configurationadmin.applicationcommon.service.dto.CaErrMsgMgmtSvcGetErrMsgOut)item.clone()); } object.errMsgList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isTableAttributeValid(String xtnTblNm, String xtnAtrbtNm, String xtnAtrbtCntnt, AtrbtCheckPdInfo pd) throws BizApplicationException { return _getAtrbt().isTableAttributeValid(xtnTblNm, xtnAtrbtNm, xtnAtrbtCntnt, pd); }
TGT:
Validate extend attribute validation.
PRED:
Validate extend attribute validation Not product.
test 샘플별 bleu-4:  41.11
========================================================================================================================
SRC:
public void modifyBasicInformation(InsrncCoreImpl insrncImpl, InsrncBsicMdfctnIn mdfctnIn) throws BizApplicationException { // 0. 속성값 변경이력 저장 if(StringCoreUtils.isEmpty(mdfctnIn.getMgmtDeptId())) { mdfctnIn.setMgmtDeptId(_getCmnContextCore().getDeptId()); } _insertInsrncAtrbtChngHst(insrncImpl.getInsrncBasicCache(), mdfctnIn); // 1. 캐시 반영 AsInsrncMIO asInsrncMIO = insrncImpl.getInsrncBasicCache(); DtoCoreUtils.setSubInfoIO(mdfctnIn, asInsrncMIO); // 2. 보험 기본 update _getAsInsrncMDso().update(asInsrncMIO); } /** * 보험기본정보 등록 * <pre> * 자산식별자를 생성한다. * 입력된 정보로 자산정보를 등록한다. * 자산의 상태이력을 등록한다. * 자산의 속성이력을 등록한다. * </pre> * @param in : {@link InsrncBsicInfoIO} 보험기본정보 * @param chngTxDt : (required) 변경
TGT:
It modifies the insurance information.
PRED:
It modifies the insurance information.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaCntrlCntrMgmtSvcGetCntrlCntrDtlIn clone(){ try{ CaCntrlCntrMgmtSvcGetCntrlCntrDtlIn object= (CaCntrlCntrMgmtSvcGetCntrlCntrDtlIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<CaStdAtrbtIO> getListPrflAttributeName(String prflDscd) throws BizApplicationException { if( StringUtils.isEmpty(prflDscd) ){ throw new BizApplicationException("AAPCME0441", new Object[] {}); } List<CaCmStdAtrMIO> outCmStdAtrList = _getCmStdAtrMDso().selectListPrflAtrbtNmByPrflDscd(prflDscd); return _setStdAtrbtIO(outCmStdAtrList); }
TGT:
Query profile attribute name list.
PRED:
Get list of the profile attribute using profile distinction code.
test 샘플별 bleu-4:  16.59
========================================================================================================================
SRC:
public String getSubInfo(String atrbtNm, ArrTxImpl arrTx) throws BizApplicationException { // 1. 캐시기준으로 거래관련 보조명세 조회(캐싱 되지 않았으면 DB조회 후 캐싱 & return) IValueObject subInfo = getSubInfoCache(arrTx); // 2. 보조명세 정보가 없으면 return null if (subInfo == null) { return null; } // 3. 조회된 보조명세에서 특정보조명세 값 조회, 있으면 string값 return, 없으면 return null. Object atrbtVal = subInfo.get(atrbtNm); if (atrbtVal == null) { return null; } return String.valueOf(atrbtVal); }
TGT:
This method provides to inquire the specific subsidiary information named 'xtnAtrbtNm'.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  22.45
========================================================================================================================
SRC:
public java.lang.String getAssetId(){ return assetId; }
TGT:
Inquire the asset identification of this asset transaction.
PRED:
Inquire the asset id.
test 샘플별 bleu-4:  24.6
========================================================================================================================
SRC:
public String calculateMaturityDate(ArrangementCore arr, ArrCndRngCore contractTerm) throws BizApplicationException { String arrMtrtyDt = calculateMaturityDate(arr, arr.getArrOpnDt(), contractTerm); return adjustMtrtyDt( arr, arrMtrtyDt ); } /** * <div class='en'> * @description * <pre> * Calculation of the expiration date from the new date to the contract period * </pre> * @seealso {@link #calculateMaturityDate(ArrangementCore, String)} : Calculate maturity date with contract term * </div> * * <div class='ko'> * @description * <pre> * 신규일로 부터 계약기간 해당일까지의 만기일 산출 * </pre> * @seealso {@link #calculateMaturityDate(ArrangementCore, String)}
TGT:
Calculate maturity date with contract term from accepted date.
PRED:
This method calculate maturity date with contract term from accepted date.
test 샘플별 bleu-4:  71.03
========================================================================================================================
SRC:
public void saveSubInfo(IValueObject subInfo , StStlmntSIO stStlmntSIOIn) { logger.debug("##<ST-StlmntSubInfoBiz> saveSubInfo"); // null check if(subInfo == null){ throw new BizApplicationException("AAPCME0006", new Object[] {this.getClass().getSimpleName()}); } logger.debug("##<ST-StlmntSubInfoBiz> saveSubInfo null check ok"); // 1.create a new instance of DB IO IValueObject subInfoDBIO = new StStlmntSIO(); // 2.set primary key _setKey(subInfoDBIO, stStlmntSIOIn); // 3.convert IvalueObject to DBIO VO DtoUtils.setSubInfoIO(subInfo, subInfoDBIO); // 4.save subsidiary detail(보조명세) _insertSubInfo(subInfoDBIO); /* * settlement는 속성을 대부분 insert 하는 경우이므로 아래 로직을 막음 */ // IValueObject sqlOut = getSubInfo(stlmnt); // // // 해당 거래관련 보조명세 데이터가 없을 때 // if(sqlOut == null) { // _insertSubInfo(subInfoDBIO); // // 맴버변수 VO 값 설정 // Stlmnt.setStlmntSubInfo(subInfo); // // }else { // // 기 조회 된 값에 update되어할 필드 설정 // DtoUtils.setSubInfoIO(subInfo, sqlOut); // // DBIO IO에
TGT:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value) { for (DtDscdEnum item : DtDscdEnum.values()) { if (value.equals(item.getValue())) { return "99".equalsIgnoreCase(value) ? false : true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<CmpsCndOut> getAllCmpsCndValueList(String cmpxStrctrId) throws BizApplicationException { // Return output return getListCmpsCndValue(null, cmpxStrctrId); }
TGT:
This method inquire the composing condition value of all tiers of the complex condition. DataCache has been applied.
PRED:
This method inquire the composing condition value of all tiers of the inputed complex structure id. DataCache has been applied.
test 샘플별 bleu-4:  72.0
========================================================================================================================
SRC:
public List<CrIntCalDtrmnCndOut> getListInterestCalculationDetermineCondition(String instCd) throws BizApplicationException { // 필수 입력 값 체크 _getCrCalculatorUtil().checkInputStringData("AAPCME0006", instCd, "instCd"); CrIntCalDtrmnCndMIO in = new CrIntCalDtrmnCndMIO(); in.setTntInstId(instCd); return _getCrIntCalDtrmnCndMDso().selectListCondition(in); }
TGT:
Methods to query interest calculation determine condition - All interest calculation determine condition history for each institution are inquired
PRED:
Methods to query interest calculation determine conditions - All interest calculation determine condition history for each institution are inquired
test 샘플별 bleu-4:  85.79
========================================================================================================================
SRC:
public void registerAprvRsltRslt(List<AmAsmAprvRsltIO> amAsmAprvRsltIO) throws BizApplicationException{ _getAsmAprvRsltBiz().registerAprvRsltRslt(amAsmAprvRsltIO); }
TGT:
It registers detail information of credit approval result.
PRED:
It registers detail information of credit approval result.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
protected void register(StaffImpl staffImpl, StaffStsIO staffStsIO) throws BizApplicationException { if(staffStsIO != null) { AtStaffStsDXtnIO atStaffStsDIO = new AtStaffStsDXtnIO(); _getCmnContext().setHeaderColumn(atStaffStsDIO); atStaffStsDIO.setInstCd(staffImpl.getInstCd()); atStaffStsDIO.setStaffId(staffImpl.getStaffId()); atStaffStsDIO.setStaffStsCd(staffStsIO.getStaffStsCd()); atStaffStsDIO.setStaffStsChngRsnCd(staffStsIO.getStaffStsChngRsnCd()); atStaffStsDIO.setStaffStsChngRsnCntnt(staffStsIO.getStaffStsChngRsnCntnt()); atStaffStsDIO.setEfctvEndDt(staffStsIO.getEfctvEndDt() == null ? CCM01.MAX_DATE : staffStsIO.getEfctvEndDt()); atStaffStsDIO.setEfctvStartDt(staffStsIO.getEfctvStartDt() == null ? _getCmnContext().getTxDate() : staffStsIO.getEfctvStartDt()); // 2020.03.09 직원상태명세 테이블에 상태변경년월일/상태변경시분초 컬럼 추가 atStaffStsDIO.setStsChngDt(_getCmnContext().getTxDate()); atStaffStsDIO.setStsChngHms(_getCmnContext().getTxTime()); AtStaffStsDXtnIO lastAtStaffStsDIO = _getAtStaffStsDXtnDso().select(atStaffSts
TGT:
It registers the document notice relation information. Needs caution as the registered information performs the update transaction.
PRED:
It registers the self authentication code information. Needs caution as the registered information performs the update transaction. It gets the first institution code in the list and query the entire contents.
test 샘플별 bleu-4:  38.67
========================================================================================================================
SRC:
public StlmntGlQuerySvcItemOut clone(){ try{ StlmntGlQuerySvcItemOut object= (StlmntGlQuerySvcItemOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public LnArr360Cnd clone(){ try{ LnArr360Cnd object= (LnArr360Cnd)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void validateTxPassword(ArrMbrshp arrMbrshp, String txPswd) throws BizApplicationException { if(null == txPswd || txPswd.isEmpty()) { throw new BizApplicationException("AAPDPE0029", null); } /* * Get customer's membership arrangement * */ if(arrMbrshp == null) { throw new BizApplicationException("AAPDPE0028", null); } arrMbrshp.validateTxPassword(txPswd); }
TGT:
Validate input value by comparing to transaction password registered on membership arrangement. Password managed as extended attribute of arrangement, but cannot be registered/inquired/modified/deleted by general API managing extend attribute.
PRED:
Validate input value by comparing to transaction password registered on membership arrangement. Password managed as extended attribute of arrangement, but cannot be registered/inquired/modified/deleted by general API managing extend attribute.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CndVal getComplexCndValue(int tierNbr) throws BizApplicationException { // If isCmpxCnd is false if (!isComplexCnd()) { // Simple condition throw new BizApplicationException("AAPPDE0003", null); } // Set Input PdPdCndUnitComplexSearchIn inDao = _setPdPdCndUnitComplexSearchIn(tierNbr); if (isListCnd()) { return _getComplexListCndValue(inDao); } else if (isRngCnd()) { return _getComplexRangeCndValue(inDao); } /*else if (isIntCnd()) { return _getComplexInterestCndValue(inDao); } else if (isFeeCnd()) { return _getComplexFeeCndValue(inDao); }*/ else { return null; } }
TGT:
This method inquire complex condition value.
PRED:
This method inquire preferential interest rate complex condition value by the value of the composing condition and the value of the provide condition.
test 샘플별 bleu-4:  11.71
========================================================================================================================
SRC:
public StlmntRsltVal calculateInterestProvisionalSettlement(ArrReal arr, String crncyCd, String paymentDate, Integer arrTxSeqNbr, String intPymntDt, String acProcDt, Boolean isAccrual, String accrualBasisYn, String lnRpymntTpCd) throws BizApplicationException { // TODO Auto-generated method stub return null; } // /** // * Calculate Interest covering "balance-based Interest calculation" // * 2016.03.28 대출잔액에 대한 이자계산(가결산용) // * // * @param arr // * - (required)arrangement interface // * @param crncyCd // * - (required)currency code // * @param paymentDate // * - (required)transaction date // * @return StlmntRsltVal - Settlement Result Value 정산 결과값 // * @throws BizApplicationException // */ // @Override // @BxmCategory(logicalName = "Calculate Interest about balance-based for ProvisionalSettlement") // public StlmntRsltVal calculateInterestProvisionalSettlement(ArrReal arr, String crncyCd, String paymentDate, Integer arrTxSeqNbr, String intPymntDt, String acProcDt, Boolean isAccrual) throws BizApplicationException { // // StlmntRsltVal stlmntRsltVal = (StlmntRsltVal)super.calculateInterestProvisionalSettlement((ArrRealCore)arr, crncyCd, paymentDate, arrTxSeqNbr, intPymntDt, acProcDt, isAccrual); // // return stlmntRsltVal; // } // @Override // @BxmCategory(logicalName = "Calculate Interest about balance-based for ProvisionalSettlement") // public StlmntRsltVal calculateInterestProvisionalSettlement(ArrReal arr, String crncyCd, String paymentDate, Integer arrTxSeqNbr, String intPymntDt, String acProcDt, Boolean isAccrual, String accrualBas
TGT:
This method calculates the provisional interest settlement. The way of interest calculation by product is as follows. 1.Demand deposit product : calculate interest on the same plan as settlement case 2.Installment product : calculate maturity interest for each deposit 3.Term deposit product : calculate maturity interest on the deposit
PRED:
This method calculates the provisional interest settlement. The way of interest calculation by product is as follows. 1.Demand deposit product : calculate interest on the same plan as settlement case 2.Installment product : calculate maturity interest for each deposit 3.Term deposit product : calculate maturity interest on the deposit
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> assetTxSubInfoMap, AssetTxCore assetTx) throws BizApplicationException { _getAssetTxSubInfoBiz().saveMapSubInfo(assetTxSubInfoMap, (AssetTxImpl) assetTx); }
TGT:
Save the asset thing subsidiary information using map.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  6.11
========================================================================================================================
SRC:
public java.lang.String getAssetStsCd(){ return assetStsCd; }
TGT:
Inquire the asset status code.
PRED:
Inquire the asset status code.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getUpAcctgItmNm(CaCoaDtlIO in) throws BizApplicationException { CaCoaDtlIO coaDtlIO = getCoa(in.getInstCd(),in.getAcctgDscd(),in.getAcctgItmCd()); if (!StringUtils.isEmpty(coaDtlIO.getUpAcctgItmCd())){ CaAcCoaMIO acCoaMIO = _getAcCoaMDso().select(_getAcCoaMIO(coaDtlIO.getInstCd(),coaDtlIO.getAcctgDscd(),coaDtlIO.getUpAcctgItmCd())); if (acCoaMIO == null){ return null; }else{ return acCoaMIO.getAcctgTitlAcctgAbrvtnNm(); } }else{ return null; } }
TGT:
This method is for getting upper accounting item name of accounting item code.
PRED:
This method is for getting upper accounting item name of accounting item code.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArrCndSvcQryIn clone(){ try{ ArrCndSvcQryIn object= (ArrCndSvcQryIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getSubInfo(String xtnAtrbtNm, AprslCore aprslCore, Integer prfClaimSeqNbr) throws BizApplicationException { return _getAprslPrfClaimSubInfoBiz().getSubInfo(xtnAtrbtNm, (AprslImpl)aprslCore, prfClaimSeqNbr); }
TGT:
Inquire a specific subsidiary information of the appraisal request.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  78.61
========================================================================================================================
SRC:
public String getSubInfo(String atrbtNm, ActorImpl actorImpl) throws BizApplicationException { // 1. 보조명세 캐시 조회 IValueObject subInfo = getSubInfoCache(actorImpl); // 2. 보조명세 캐시가 null인 경우, null 리턴 if (subInfo == null) { return null; } // 3. 보조명세 캐시에서 속성명 기준으로 속성값 조회 Object atrbtVal = subInfo.get(atrbtNm); // Casting 시 Null 방지 if (atrbtVal == null) { return null; } return String.valueOf(atrbtVal); }
TGT:
This method inquires settlement subsidiary detail information list (inquire all subsidiary detail information of a given settlement master by using the key value other than the detail sequence number).
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  2.95
========================================================================================================================
SRC:
public Map<AssetXtnInfoEnum, String> getMapAssetXtnInfo() throws BizApplicationException { Map<AssetXtnInfoEnum, String> xtnInfoHash = new HashMap<AssetXtnInfoEnum, String>(); // 확장정보명세 Map<String, String> xtnInfoStrMap = super.getMapAssetXtnInfoAsStrByEav(); for(Entry<String, String> entry : xtnInfoStrMap.entrySet()){ xtnInfoHash.put(AssetXtnInfoEnum.getEnum(entry.getKey()), entry.getValue()); } // 보조명세 Map<String, String> subInfoMap = _getAssetSubInfoBiz().getMapSubInfo(this); for(Entry<String, String> entry : subInfoMap.entrySet()){ xtnInfoHash.put(AssetXtnInfoEnum.getEnum(entry.getKey()), entry.getValue()); } return xtnInfoHash; }
TGT:
Inquire all extended information of the asset as a map.
PRED:
Inquire all extended information of the asset as a map.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getNextRebuildDate(String arg0, String arg1) throws BizApplicationException { return "20220215"; }
TGT:
Get the next scheduled date of interest rate rebuild related to this condition.
PRED:
Inquire next rebuild date in rebuild condition.
test 샘플별 bleu-4:  9.91
========================================================================================================================
SRC:
public CustDocOvrvwInqrySvcGetIn clone(){ try{ CustDocOvrvwInqrySvcGetIn object= (CustDocOvrvwInqrySvcGetIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public BigDecimal getRoleLImitMax(String instCd, String crncyCd, List<String> roleList) throws BizApplicationException { instCd = StringUtils.isEmpty(instCd) ? _getCmnContext().getInstCode() : instCd; _checkStringValue(crncyCd, CCM03.CRNCY_CD); if(roleList == null || roleList.isEmpty()) { throw new BizApplicationException("AAPCME0006", new Object[] { "@".concat("roleList") }); } return _getCmRoleMDso().selectRoleLimitMax(instCd, crncyCd, roleList); }
TGT:
It inquires the maximum limit for each currency in the role list.
PRED:
It inquires the maximum limit for each currency in the role list.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<PdLstCtMOut> getListListConditionInfo(String instId, String cndCd) throws BizApplicationException { String mTntInstId = _getInstitution().getMotherInstitutionId(instId); // 조건기본 조회 CndTmpltIn inCnd = new CndTmpltIn(); inCnd.setInstCd(instId); inCnd.setCndCd(cndCd); CndTmpltOut cndTmpltOut = this.getCndTmpltInfo(inCnd); if (cndTmpltOut == null) { return new ArrayList<PdLstCtMOut>(); } List<PdLstCtMIO> outIOList = new ArrayList<PdLstCtMIO>(); // listRefTpCd null이면 목록코드로 본다. if (StringCoreUtils.isEmpty(cndTmpltOut.getListRefTpCd()) || ListReferenceTypeCoreEnum.LIST_CD.getValue().equals(cndTmpltOut.getListRefTpCd())) { /** * DataCache START */ // Make unique key String uKey = PdUtil.concatenateKeys(Arrays.asList(mTntInstId, cndCd)); // 목록조건정보 목록조회 // Get cache data outIOList = _getPdDataCacheManager().getCacheData(DataCacheCoreConfig.PD_LIST_CND_LIST_CACHE, uKey); if (outIOList == null) { // 목록조건정보 목록조회 outIOList = _convertToPdLstCtMOutList(_getTemplate().getListListCndTemplateBase(instId, cndCd)); // Put cache data _getPdDataCacheManager().saveCache(DataCacheCoreConfig.PD_LIST_CND_LIST_CACHE, uKey, outIOList); } /** * DataCache END
TGT:
Methods for querying list condition information (List by institution)
PRED:
Methods for querying list condition information (return list)
test 샘플별 bleu-4:  64.07
========================================================================================================================
SRC:
public PdCalculationJudgmentCndDetailInqryListCdSvcOut clone(){ try{ PdCalculationJudgmentCndDetailInqryListCdSvcOut object= (PdCalculationJudgmentCndDetailInqryListCdSvcOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isArrKindStandingOrder() { return super.getArrKindCd().equals(ArrKndEnum.STANDING_ORDER.getValue()); }
TGT:
Check if kind of arrangement is "Standing order" arrangement.
PRED:
Check if kind of arrangement is "Standing Order" arrangement.
test 샘플별 bleu-4:  78.25
========================================================================================================================
SRC:
public List<AssetCore> getListAssetCore(String assetCustRelCd, String custId, String actvStsCd) throws BizApplicationException { List<AssetCore> assetList = new ArrayList<AssetCore>(); List<String> assetIdList = new ArrayList<String>(); switch (AssetCustRelCoreEnum.getEnum(assetCustRelCd)) { case DEBTOR : assetIdList = _getAssetBasicBiz().getListAssetByDebtorId(custId, actvStsCd); break; case OWNER : assetIdList = _getAssetBasicBiz().getListAssetByOwnerId(custId, actvStsCd); break; case ISSUER : assetIdList = _getAssetBasicBiz().getListAssetByIssuerId(custId, actvStsCd); break; default: throw new BizApplicationException("AAPCME0006", new Object[] {"@assetCustRelCd"}); } for(String assetId : assetIdList){ AssetCore asset = getAssetCore(assetId); assetList.add(asset); } return assetList; }
TGT:
It is inquires asset object with customer identification and status, and asset customer relationship.
PRED:
It is inquires asset object with an department identification.
test 샘플별 bleu-4:  36.66
========================================================================================================================
SRC:
public int delete(CaDcDocRefAtrbtMIO dcDocRefAtrbtMIO) { return _getDcDocRefAtrbtM().delete(dcDocRefAtrbtMIO); }
TGT:
It changes the status of insurance to cancel status
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  15.45
========================================================================================================================
SRC:
static boolean isValid(String value){ for (ArrSyncKndEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrPlanIO> getArrPlans(String arrSrvcCd,String exctnPlnDt,String arrPlnStsCd, ArrRealCoreImpl arrReal) throws BizApplicationException { // 계약 계획 주제영역 미사용 시 skip if (!_getArrCustom().isSubDmnUsed(ArrSubDmnEnum.PLAN)) { return new ArrayList<ArrPlanIO>(); } _checkInput(arrSrvcCd,exctnPlnDt,arrReal); List<ArrPlanIO> arrPlanIOList = new ArrayList<ArrPlanIO>(); for (ArArrPlnMIO arArrPlnMIO :_selectListPlan(arrSrvcCd, exctnPlnDt, arrPlnStsCd, arrReal)) { arrPlanIOList.add(_buildArrPlanIO(arArrPlnMIO)); } return arrPlanIOList; }
TGT:
Inquire arrangement active plans on specified date with arrangement service type code It inquire that only the status is 'Active'.
PRED:
Inquire arrangement plans which are currently in specific status with arrangement service type ENUM, plan execution date, and plan status code.
test 샘플별 bleu-4:  19.8
========================================================================================================================
SRC:
public String getPntStsCd() { return pdPdM.getPdStsCd(); }
TGT:
This Method inquire point status code
PRED:
This Method inquire point status code
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<CaInstSrvcIO> getListInstService(String instCd, String cmpntCd, String baseDt) throws BizApplicationException { String sInstCd = instCd; if (StringUtils.isEmpty(instCd)) sInstCd = _getCaCmnContext().getInstCode(); List<CaSvInstSrvcMIO> svInstSrvcMIOList; List<CaInstSrvcIO> instSrvcList = new ArrayList<CaInstSrvcIO>(); if (baseDt == null) baseDt = CCM01.MIN_DATE; if (StringUtils.isEmpty(cmpntCd)) { svInstSrvcMIOList = _getSvInstSrvcMDso().selectListByInstCdAndBaseDt(sInstCd, baseDt); } else { CaSvInstSrvcMIO svInstSrvcMIO = new CaSvInstSrvcMIO(); svInstSrvcMIO.setInstCd(sInstCd); svInstSrvcMIO.setCmpntCd(cmpntCd); svInstSrvcMIO.setAplyStartDt(baseDt); svInstSrvcMIOList = _getSvInstSrvcMDso().selectListByCmpntCd(svInstSrvcMIO); } for (CaSvInstSrvcMIO svInstSrvcMIO : svInstSrvcMIOList) { CaInstSrvcIO instSrvc = _setInstitutionService(svInstSrvcMIO); instSrvcList.add(instSrvc); } return instSrvcList; }
TGT:
inquiry institution service list by institution code and component code basic method reference : {@link #getListInstService(String, String, String)}
PRED:
inquiry institution service list by institution code of cmnContext (all service list) basic method reference : {@link #getListInstService(String, String, String)}
test 샘플별 bleu-4:  65.77
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, ArrIssmdaCore arrIssmda, String txDt, Integer txSeqNbr) throws BizApplicationException { _getArrIssmdaSubInfoBiz().saveSubInfo(xtnAtrbtNm, xtnAtrbtCntnt, (ArrIssmdaImpl) arrIssmda, txDt, txSeqNbr); }
TGT:
This method save settlement subsidiary detail information using interface VO.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public LnIntSmltnSvcCndValListIn clone(){ try{ LnIntSmltnSvcCndValListIn object= (LnIntSmltnSvcCndValListIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public java.lang.String getArrLastAgrmntHms(){ return arrLastAgrmntHms; }
TGT:
Inquire the time when the arrangement agreed for the last.
PRED:
Inquire arrangement last agreement time Caution : - Inquire time based on the last agreement date if the arrangement has been re-agreed many times
test 샘플별 bleu-4:  7.93
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> subInfoMap, StStlmntCalcnSIO stStlmntCalcnSIOIn) { logger.debug("##<ST-StlmntCalcnSubInfoBiz> saveMapSubInfo"); if(subInfoMap==null || subInfoMap.isEmpty()) { return; } // 1.create a new instance of I/F VO //IValueObject subInfoIfVo = new StlmntCalcnSubInfo(); // 2.create a new instance of DBIO VO StStlmntCalcnSIO stStlmntCalcnSIO = new StStlmntCalcnSIO(); // 3.set primary key _setKey(stStlmntCalcnSIO, stStlmntCalcnSIOIn); // 4.convert map to DBIO VO DtoUtils.setSubInfoIO(subInfoMap, stStlmntCalcnSIO); // 5.insert subsidiary detail _insertSubInfo(stStlmntCalcnSIO); }
TGT:
Save the appraisal preferential claim subsidiary information using map.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  6.11
========================================================================================================================
SRC:
public CaCrdtrtgMgmtSvcGetCrdtrtg clone(){ try{ CaCrdtrtgMgmtSvcGetCrdtrtg object= (CaCrdtrtgMgmtSvcGetCrdtrtg)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<InterestCalculationSection> apply(ApplyInterestCalculationSectionExceptionIn in, List<InterestCalculationSection> intCalIntervals) throws BizApplicationException { String partialRepymntTxDt = in.getPartialRepymntTxDt(); // 일부상환거래일 BigDecimal partialRepymntTotalPrncpl = in.getPartialRepymntTotalPrncpl(); // 일부상환 원금 합계 // 신규 계산구간 (회분계산구분 = 4-일부상환 미수이자 정리) InterestCalculationSection interval = new InterestCalculationSection(); interval.setPymntNth(in.getDesiredPymntNth()); interval.setNthCalTgtDscd(NthCalculationTargetDscdEnum.PARTIAL_REPAYMENT_NOT_LEVY_INTEREST.getCode()); // 계산유형 추가 173-일부상환미수이자, 최종이수일 ~ 일부상환거래일, 일부상환원금합계 CalculationType type = new CalculationType(); type.setInstCd(in.getInstCd()); type.setIntCalTpCd("173"); type.setCalTgtAmt(partialRepymntTotalPrncpl); type.setCalStartDt(in.getLastPymntDt()); type.setCalEndDt(partialRepymntTxDt); type.setCalBaseTrmCnt(365); type.setIntCalTgt(false); interval.setCalTps(Arrays.asList(new CalculationType[] { type })); // �
TGT:
This method Applies the initiated arrangement, and change the arrangement status to applied.
PRED:
Change the status of arrangement into "Applied", while change product of arrangement based on product code input. Following additional arrangement information can be registered. 1) Account number 2) Whether if created mandatory condition automatically or not 3) A list of arrangement level condition 4) A list of arrangement relation information 5) A list of arrangement extended attribute
test 샘플별 bleu-4:  2.65
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(StaffCore staffCore) throws BizApplicationException { return _getStaffSubInfoBiz().getMapSubInfo((StaffImpl)staffCore); }
TGT:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<SvCntrlCntrBrnchDIO> selectList(String instCd, String cntrlCntrId, String txDt) { return _getSvCntrlCntrBrnchD().selectList(instCd, cntrlCntrId, txDt); }
TGT:
It gets list of http header properties.
PRED:
It gets list of http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void validate() throws BizApplicationException { // 해당 메소드는 ({0}) 클래스의 인스턴스로 사용할 수 없습니다. 계약담당자에게 문의바랍니다. // This method cannot be used by instance of ({0}) class. throw new BizApplicationException("AAPARE0678",new Object[]{this.getClass().getName()}); }
TGT:
It performs common service processing rules defined in the service processing rules and whether the contract-based service is available, based on the service type input. Whether contract services are available verifies: 1) Verification of service restriction based on product information of contract. 2) Verification of restriction related to the service set in the contract such as pledge setting. 3) Perform verification rules that should be performed in common as the requirement that dead customers should not become financial transactions.
PRED:
It performs common service processing rules defined in the service processing rules and whether the contract-based service is available, based on the representative service type registered to the specific service. Whether contract services are available verifies: 1) Verification of service restriction based on product information of contract. 2) Verification of restriction related to the service set in the contract such as pledge setting. 3) Perform verification rules that should be performed in common as the requirement that dead customers should not become financial transactions.
test 샘플별 bleu-4:  89.46
========================================================================================================================
SRC:
public List<CustCrtfctAplctnIO> getListCertificateApplicationFromTo(CustCrtfctAplctnInqryIn custCrtfctAplctnInqryIn) throws BizApplicationException { if (custCrtfctAplctnInqryIn == null) { return null; } //check required inputs if (StringUtils.isEmpty(custCrtfctAplctnInqryIn.getInqryStartDt())) { throw new BizApplicationException("AAPCME0006", new String[] {"@inqryStartDt"}); } else if (StringUtils.isEmpty(custCrtfctAplctnInqryIn.getInqryEndDt())) { throw new BizApplicationException("AAPCME0006", new String[] {"@inqryEndDt"}); } return _getCustCrtfctAplctnXtn().getListCertificateApplication(custCrtfctAplctnInqryIn); }
TGT:
Inquire customer certificate application information list between inquiry start and end date.
PRED:
Inquire a list of certificate application information from the input date to the input date.
test 샘플별 bleu-4:  17.61
========================================================================================================================
SRC:
public void modifyExtrnlInstMsgMetaInfo(CaExtrnlIntrfcMsgMgmtIn in) throws BizApplicationException { /** * check required items */ _checkParam(in); /** * 수정하려는 매타정보가 존재하는 지 검증 */ CaXpExtrnlIntrfcMsgMIO xpExtrnlIntrfcMsgMIO = _getXpExtrnlMsgMDso().select(_setSelectIn(in)); if(xpExtrnlIntrfcMsgMIO == null) { throw new BizApplicationException("CAPXPE0010"); } CaXpExtrnlMsgMIn xpExtrnlIntrfcMsgMIn = new CaXpExtrnlMsgMIn(); _getCaCmnContext().setColumn(xpExtrnlIntrfcMsgMIn); xpExtrnlIntrfcMsgMIn.setInstCd(xpExtrnlIntrfcMsgMIO.getInstCd()); xpExtrnlIntrfcMsgMIn.setExtrnlInstCd(xpExtrnlIntrfcMsgMIO.getExtrnlInstCd()); xpExtrnlIntrfcMsgMIn.setExtrnlInstTxDscd(xpExtrnlIntrfcMsgMIO.getExtrnlInstTxDscd()); /** * set modifiable items */ xpExtrnlIntrfcMsgMIn.setExtrnlMsgFormatDscd(in.getExtrnlMsgFormatDscd());// set [대외전문형식구분코드] xpExtrnlIntrfcMsgMIn.setBizSrvcCd(in.getBizSrvcCd());// set [업무서비스코드] xpExtrnlIntrfcMsgMIn.setRsltRcvSrvcCd(in.getRsltRcvSrvcCd());// set [결과수신서비스코드] xpExtrnlIntrfcMsgMIn.
TGT:
It modifies information about communication registered.
PRED:
It modifies information of communication for external transaction.
test 샘플별 bleu-4:  31.56
========================================================================================================================
SRC:
public boolean check(String vldnTrgt) throws BizApplicationException { return Pattern.matches("^[a-zA-Z0-9\\@\\.]*$", vldnTrgt); }
TGT:
Validate the attribute value ( Simple Validation ) Implemented and used by each business component.
PRED:
Validate the attribute value ( Complex Validation ) Implemented and used by each business component.
test 샘플별 bleu-4:  81.54
========================================================================================================================
SRC:
public String getSubInfo(String xtnAtrbtNm, ArrTxCore arrTx) { return _getArrTxSubInfoBiz().getSubInfo(xtnAtrbtNm,(ArrTxImpl)arrTx); }
TGT:
Get a extended information of Subsidiary Information(CTI)
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  17.83
========================================================================================================================
SRC:
public CustTotalInqrySvcGetCustOvrvwOut clone(){ try{ CustTotalInqrySvcGetCustOvrvwOut object= (CustTotalInqrySvcGetCustOvrvwOut)super.clone(); if ( this.xtnInfoList== null ) object.xtnInfoList = null; else{ java.util.List<bankware.corebanking.customer.query.service.dto.CustTotalInqrySvcGetCustXtnInfoOut> clonedList = new java.util.ArrayList<bankware.corebanking.customer.query.service.dto.CustTotalInqrySvcGetCustXtnInfoOut>(xtnInfoList.size()); for( bankware.corebanking.customer.query.service.dto.CustTotalInqrySvcGetCustXtnInfoOut item : xtnInfoList ){ clonedList.add( (bankware.corebanking.customer.query.service.dto.CustTotalInqrySvcGetCustXtnInfoOut)item.clone()); } object.xtnInfoList = clonedList; } if ( this.ctcptList== null ) object.ctcptList = null; else{ java.util.List<bankware.corebanking.customer.query.service.dto.CustTotalInqrySvcGetCustCntctPntOut> clonedList = new java.util.ArrayList<bankware.corebanking.customer.query.service.dto.CustTotalInqrySvcGetCustCntctPntOut>(ctcptList.size()); for( bankware.corebanking.customer.query.service.dto.CustTotalInqrySvcGetCustCntctPntOut item : ctcptList ){ clonedList.add( (bankware.corebanking.customer.query.service.dto.CustTotalInqrySvcGetCustCntctPntOut)item.clone()); } object.ctcptList = clonedList; } if ( this.unqNbrList== null ) object.unqNbrList = null; else{ java.util.List<bankware.corebanking.customer.query.service.dto.CustTotalInqry
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public PdBaseIntRtInqrySvcBaseRt clone(){ try{ PdBaseIntRtInqrySvcBaseRt object= (PdBaseIntRtInqrySvcBaseRt)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(ActorImpl actorImpl, String ctcptId, Integer ctcptChngSeqNbr, String xtnAtrbtNm, String xtnAtrbtCntnt) throws BizApplicationException { // 0. null check if (StringUtils.isEmpty(xtnAtrbtNm)) { return; } // 1. 보조명세 캐시 조회결과에 따라 insert/update 판단 // ** 연락처 보조명세는 변경이력을 관리하지 않는다. AtActorCtcptSIO subInfoIO = getSubInfoCache(actorImpl, ctcptId, ctcptChngSeqNbr); if (subInfoIO == null) { // DBIO VO new instance subInfoIO = new AtActorCtcptSIO(); subInfoIO.setActorId(actorImpl.getActorId()); subInfoIO.setActorCtcptId(ctcptId); subInfoIO.setActorCtcptChngSeqNbr(ctcptChngSeqNbr); // 입력된 속성명과 속성값을 DBIO VO에 set DtoUtils.setSubInfoIO(xtnAtrbtNm, xtnAtrbtCntnt, subInfoIO); // insert _getAtActorCtcptSDso().insert(subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(xtnAtrbtNm, xtnAtrbtCntnt, subInfoIO)) { return; } // 입력된 속성명/속성값을 DBIO VO�
TGT:
Save an asset thing subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public void delete(CaArArrSrvcBlckngRgstPIO CaArArrSrvcBlckngRgstPIO) { _getArArrSrvcBlckngRgstP().delete(CaArArrSrvcBlckngRgstPIO); }
TGT:
Delete the security interest.
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  20.56
========================================================================================================================
SRC:
public void modifyCndValue(String baseDt, String cndVal, String txDt, int txSeqNbr) throws BizApplicationException { _isInstallmentDateChange(); _changePlan(); }
TGT:
Change arrangement condition value 1)Change arrangement level condition value 2)If it is not registered, create new condition value 3)If is is interest condition change also change interest related tables 4)If it is same with before condition value and after condition value then exception
PRED:
Change condition value of arrangement level condition and create condition value change history. If there is condition value history, terminate it one and create new one. Update applied interest table if it is interest condition.
test 샘플별 bleu-4:  10.17
========================================================================================================================
SRC:
public Integer getFrctnAplyCnt() throws BizApplicationException{ if (isComplexAndTierIsNotDecided()) { return null; } if (isComplex()) { return _getCmpxIntCndValSub1().getFrctnAplyCnt(); } return _getSmplIntCndVal().getFrctnAplyCnt(); }
TGT:
This method inquire product interest rate structure Fraction Apply Count
PRED:
This method inquire product interest rate structure Fraction Apply Count
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaSrvcBlckngInfoMgmtSvcGetSrvcBlckngInfoIn clone(){ try{ CaSrvcBlckngInfoMgmtSvcGetSrvcBlckngInfoIn object= (CaSrvcBlckngInfoMgmtSvcGetSrvcBlckngInfoIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(AsmCore asm){ return _getAsmSubInfoBiz().getMapSubInfo((AsmImpl)asm); }
TGT:
Inquire all subsidiary information of the asset thing as a map.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  17.06
========================================================================================================================
SRC:
public boolean isExtendAttribute() { return stdDtoClassAtrbt.isXtnAtrbtYn(); }
TGT:
Check whether extend attribute
PRED:
Check whether extend attribute
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getSubInfo(ActorImpl actorImpl, String ctcptId, Integer ctcptChngSeqNbr, String atrbtNm) throws BizApplicationException { // 1. 보조명세 캐시 조회 AtActorCtcptSIO subInfo = getSubInfoCache(actorImpl, ctcptId, ctcptChngSeqNbr); // 2. 보조명세 캐시가 null인 경우, null 리턴 if (subInfo == null) { return null; } // 3. 보조명세 캐시에서 속성명 기준으로 속성값 조회 Object atrbtVal = subInfo.get(atrbtNm); // Casting 시 Null 방지 if (atrbtVal == null) { return null; } return String.valueOf(atrbtVal); }
TGT:
Inquire a specific subsidiary information of the appraisal.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  67.87
========================================================================================================================
SRC:
public List<CaClTreeIO> getListClassification(CaClTreeIO in) throws BizApplicationException { List<CaClTreeIO> out = new ArrayList<CaClTreeIO>(); CaCmClTreeDIO inDao = _getInputClassification(in); inDao.setActvStsCd(CaActiveStatusEnum.ACTIVE.getValue()); List<CaCmClTreeDIO> daoOtList = _getCmClTreeDDso().selectList(inDao); for (CaCmClTreeDIO daoOut : daoOtList) { CaClTreeIO sub = _getOutputClassificationTree(daoOut); out.add(sub); } return out; }
TGT:
It inquiries classification tree.
PRED:
It inquiries classification tree.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getTransferLanguage(String trnsfrKnd, String trnsfrKeyVal, String lngCd) throws BizApplicationException { if(StringCoreUtils.isEmpty(trnsfrKnd)) { throw new BizApplicationException("AAPCME0006", new Object[] { "@trnsfrKnd" }); } if(StringCoreUtils.isEmpty(trnsfrKeyVal)) { throw new BizApplicationException("AAPCME0006", new Object[] { "@trnsfrKeyVal" }); } if(StringCoreUtils.isEmpty(lngCd)) { throw new BizApplicationException("AAPCME0006", new Object[] { "@lngCd" }); } return _getCmMltLngTrnsltnDDso().getTransferLanguage(trnsfrKnd, trnsfrKeyVal, lngCd); }
TGT:
Offering terminology that fit with the language code. basic method reference : {@link #getTransferLanguage(String, String, String)}
PRED:
Offering terminology that fit with the language code. basic method reference : {@link #getTransferLanguage(String, String, String)}
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isTerminated() { return this.arrGrpStsCd.equals(ArrGrpStsCoreEnum.TERMINATED.getValue()); }
TGT:
Check if the status of arrangement activity is "Terminated".
PRED:
Check whether if the status of arrangement is "TERMINATED". Detail function descripation refers to {@link #isActive()}.
test 샘플별 bleu-4:  30.28
========================================================================================================================
SRC:
public String getNumbering(String nbrgAtrbtNm,Map<String, Object> inpParmMap) throws BizApplicationException { return getNumbering(_getCmnContext().getInstCode(), nbrgAtrbtNm, inpParmMap, false); }
TGT:
It calculates next number. Compared to the default method, the omitted 'instCd' value is replaced by instCd in Common Context. Compared to the default method, the omitted 'isReUseSameTxNbrg' value is replaced by false. Compared to the default method, the omitted 'inpParmMap' value is replaced by null.
PRED:
It calculates next number. Compared to the default method, the omitted 'instCd' value is replaced by instCd in Common Context. Compared to the default method, the omitted 'isReUseSameTxNbrg' value is replaced by false. Compared to the default method, the omitted 'inpParmMap' value is replaced by null.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CustCheckPwdOut login(String loinIdNbr, String pswd, String loinTpCd) throws BizApplicationException, ParseException { //check required inputs if (StringUtils.isEmpty(pswd)) { throw new BizApplicationException("AAPCME0006", new Object[] {"@pswd"}); } //check input code _getCd().validateCode(ActorBaseCdNbrCoreEnum.LOIN_TP_CD.getValue(), loinTpCd); if (StringUtils.isEmpty(loinIdNbr)) { return _getCustLoinInfoBiz().login(this, getCustLoinInfoCache(getLoginIdNbr()), pswd, loinTpCd); } else { return _getCustLoinInfoBiz().login(this, getCustLoinInfoCache(loinIdNbr), pswd, loinTpCd); } }
TGT:
It executes login process of the customer related person by the main login identification number. It considers password error count, error allowance count exceeded YN, lock time and password update cycle. It leaves login attempt history. Exception must be handled separately at the service level according to the login result.
PRED:
It executes login process of the customer related person by the main login identification number. It considers password error count, error allowance count exceeded YN, lock time and password update cycle. It leaves login attempt history. Exception must be handled separately at the service level according to the login result.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public PrtnrshpArrOpnSvcArrIn clone(){ try{ PrtnrshpArrOpnSvcArrIn object= (PrtnrshpArrOpnSvcArrIn)super.clone(); if ( this.cndList== null ) object.cndList = null; else{ java.util.List<bankware.corebanking.partner.open.service.dto.PrtnrshpArrOpnSvcArrCndIn> clonedList = new java.util.ArrayList<bankware.corebanking.partner.open.service.dto.PrtnrshpArrOpnSvcArrCndIn>(cndList.size()); for( bankware.corebanking.partner.open.service.dto.PrtnrshpArrOpnSvcArrCndIn item : cndList ){ clonedList.add( (bankware.corebanking.partner.open.service.dto.PrtnrshpArrOpnSvcArrCndIn)item.clone()); } object.cndList = clonedList; } if ( this.xtnList== null ) object.xtnList = null; else{ java.util.List<bankware.corebanking.partner.open.service.dto.PrtnrshpArrOpnSvcArrXtnIn> clonedList = new java.util.ArrayList<bankware.corebanking.partner.open.service.dto.PrtnrshpArrOpnSvcArrXtnIn>(xtnList.size()); for( bankware.corebanking.partner.open.service.dto.PrtnrshpArrOpnSvcArrXtnIn item : xtnList ){ clonedList.add( (bankware.corebanking.partner.open.service.dto.PrtnrshpArrOpnSvcArrXtnIn)item.clone()); } object.xtnList = clonedList; } if ( this.relList== null ) object.relList = null; else{ java.util.List<bankware.corebanking.partner.open.service.dto.PrtnrshpArrOpnSvcArrRelIn> clonedList = new java.util.ArrayList<bankware.corebanking.partner.open.service.dto.
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public java.math.BigDecimal getLastBal(){ return lastBal; }
TGT:
This method inquires the last balance.
PRED:
This method inquires the last balance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isCancelled() { return this.getArrSts().equals(ArrStsEnum.CANCELED); }
TGT:
Check if arrangement group is in "Canceled" status.
PRED:
Check if the status of arrangement activity is "Cancelled".
test 샘플별 bleu-4:  21.11
========================================================================================================================
SRC:
public AcManualEntryTxDIO select(AcManualEntryTxDIO acManualEntryTxDIO) { acManualEntryTxD = (AcManualEntryTxD) CbbApplicationContext.getBean(AcManualEntryTxD.class, acManualEntryTxD); return acManualEntryTxD.select(acManualEntryTxDIO); }
TGT:
It get a http header properties.
PRED:
It get a http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public LnAgrmntOpenCcutTrgtIO clone(){ try{ LnAgrmntOpenCcutTrgtIO object= (LnAgrmntOpenCcutTrgtIO)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Pd getPd(String instCd,String arrCrtnDt,String arrCrtnTm, String pdCd) throws BizApplicationException { PdIn pdIn = new PdIn(); pdIn.setInstCd(instCd); // Product Code pdIn.setPdCd(pdCd); // Product Code pdIn.setAplyDt(arrCrtnDt); // Apply Date pdIn.setAplyTm(arrCrtnTm); // Product Code Pd pd = _getPdMngr().getPd(pdIn); if (pd == null || !pd.isAvailable() ) { throw new BizApplicationException("AAPARE0000", new Object[]{instCd+":"+pdCd+":"+arrCrtnDt+":"+arrCrtnTm}); } return pd; }
TGT:
Methods to create a product object Product information initialization. Use inputed product code, apply date to create a product object and return it if the product does not exist, return null
PRED:
Methods to create a product object Product information initialization. Use inputed product code, apply date to create a product object and return it if the product does not exist, return null
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public TlrClsMgmtSvcSaveTlrClsIn clone(){ try{ TlrClsMgmtSvcSaveTlrClsIn object= (TlrClsMgmtSvcSaveTlrClsIn)super.clone(); if ( this.tblNm== null ) object.tblNm = null; else{ java.util.List<bankware.corebanking.accounting.cashaccounting.service.dto.BillCtgryCashMgmtSvcBillCtgryIn> clonedList = new java.util.ArrayList<bankware.corebanking.accounting.cashaccounting.service.dto.BillCtgryCashMgmtSvcBillCtgryIn>(tblNm.size()); for( bankware.corebanking.accounting.cashaccounting.service.dto.BillCtgryCashMgmtSvcBillCtgryIn item : tblNm ){ clonedList.add( (bankware.corebanking.accounting.cashaccounting.service.dto.BillCtgryCashMgmtSvcBillCtgryIn)item.clone()); } object.tblNm = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaExtrnlInfoMgmtSvcRemoveMsgMapInfoIn clone(){ try{ CaExtrnlInfoMgmtSvcRemoveMsgMapInfoIn object= (CaExtrnlInfoMgmtSvcRemoveMsgMapInfoIn)super.clone(); if ( this.msgMapInfoList== null ) object.msgMapInfoList = null; else{ java.util.List<bankware.corebanking.configurationadmin.externalproxy.service.dto.ExtrnlIntrfcMsgMapInfoOut> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.externalproxy.service.dto.ExtrnlIntrfcMsgMapInfoOut>(msgMapInfoList.size()); for( bankware.corebanking.configurationadmin.externalproxy.service.dto.ExtrnlIntrfcMsgMapInfoOut item : msgMapInfoList ){ clonedList.add( (bankware.corebanking.configurationadmin.externalproxy.service.dto.ExtrnlIntrfcMsgMapInfoOut)item.clone()); } object.msgMapInfoList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArrReal getArr() { return (ArrReal) super.getArrCore(); }
TGT:
Inquire customer account arrangement using arrangement id (internal use) or business key like account number, application number , mobile number so on..
PRED:
This method inquires a arrangement object using the arrangement ID(arrId) of the transaction.
test 샘플별 bleu-4:  5.68
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> assetSubInfoMap, AssetCore asset, String txDt, Integer txSeqNbr) throws BizApplicationException { _getAssetSubInfoBiz().saveMapSubInfo(assetSubInfoMap, txDt, txSeqNbr, (AssetImpl) asset); }
TGT:
This method save settlement subsidiary detail information using subInfoMap.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public CaSelfAuthCdSvcGetOut clone(){ try{ CaSelfAuthCdSvcGetOut object= (CaSelfAuthCdSvcGetOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> subInfoMap, ActorImpl actorImpl) throws BizApplicationException { // 0. null check if (subInfoMap == null || subInfoMap.isEmpty()) { return; } // 1. 보조명세 종류 조회 ActorSubInfoKndEnum subInfoKnd = actorImpl.getSubInfoKnd(); // 2. 보조명세 캐시 조회결과에 따라 insert/update 판단 IValueObject subInfoIO = getSubInfoCache(actorImpl); if (subInfoIO == null) { // DBIO VO new instance subInfoIO = _getNewSubInfoSqlIO(subInfoKnd); subInfoIO.set("actorId", actorImpl.getActorId()); // 입력된 Map을 DBIO VO에 반영 DtoUtils.setSubInfoIO(subInfoMap, subInfoIO); // insert _insertSubInfo(subInfoKnd, subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(subInfoMap, subInfoIO)) { return; } // 변경전 이력 저장 _saveSubInfoHst(actorImpl, subInfoIO); // 입력된 Map을 DBIO VO에 반영 DtoUtils.setSubInfoIO(subInfoMap, subInfoIO); // update _updateSubInfo(subInfoKnd, subInfoIO); } // 3. 캐시 저장 String cacheKey = XtnTableEnum.AT_ACTOR_M.getValue().concat(actorImpl.getActorId()); actorImpl.saveSubInfoCache(cacheKey, subInfoIO); }
TGT:
This method save settlement subsidiary detail information using subInfoMap.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
static boolean isValid(String value) throws BizApplicationException { if(!StringUtils.isEmpty(value)) { for (CaDstbCtvdRsltCdEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } throw new BizApplicationException("AAPATE0028", new Object[] {value, "@answerTrgtTpCd"}); } return true; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void validateTxProcess() throws BizApplicationException { // Validate only in case of triggering transaction Integer callDepth = CbbApplicationContext.getCurrentServiceCallDepth(); if(callDepth != 0) return; List<StTxMIO> stTxMIOList = _restoreTxInfo(); if(stTxMIOList == null) return; if(stTxMIOList.size() > 0){ for(StTxMIO stTxMIO : stTxMIOList) { ArrRealCore arr = _getArrMngr().getArrRealCore(stTxMIO.getArrId()); StTxMIO out = _getArrTxBiz().getArrTx(stTxMIO, arr); // if(out == null) out = _getArrTxBiz().getAccrualTx(stTxMIO, arr); if(out == null) throw new BizApplicationException("AAPSTE0020", new Object[] {stTxMIO.getTxDt(), stTxMIO.getTxSeqNbr()}); if(logger.isDebugEnabled()) { logger.debug("HHH StTxMIO: {} ", out); } // Transaction history is not registered. if(TxStsCoreEnum.NUMBERED.getValue().equals(out.getTxStsCd())) throw new BizApplicationException("AAPACE3016", new Object[] {out.getArrId()}); if (logger.isDebugEnabled()){ logger.debug("ArrTx linked transaction logging"); logger.debug(out.toString()); } } } } /** * <div class='en'> * @description * <pre> * This method validates the transaction sequence number and verifies that the transaction was created. * Occurs an error if the transaction is not inserted or the transaction status is NUMBERED. * It is called from distributed, so it accepts and processes the base list of transactions instead of the value loaded in memory. * </pre> * * @seealso {@link #validateTxProcess(List)} : validates the transaction sequence number and * verifies that the transaction was created with list of basic transaction infomation. * * @note The last valid transaction date can not be greater than the date of the transaction you want to create. * </div> * * <div class='ko'> * @description * <pre> * 이 메소�
TGT:
This method validates the transaction sequence number and verifies that the transaction was created. Occurs an error if the transaction is not inserted or the transaction status is NUMBERED. It is called from distributed, so it accepts and processes the base list of transactions instead of the value loaded in memory.
PRED:
This method validates the transaction sequence number and verifies that the transaction was created. Occurs an error if the transaction is not inserted or the transaction status is NUMBERED.
test 샘플별 bleu-4:  46.83
========================================================================================================================
SRC:
public String getDocId() throws BizApplicationException { if(docIssueIO != null) return docIssueIO.getDocId(); return null; }
TGT:
It provides document id.
PRED:
It inquiries document id.
test 샘플별 bleu-4:  50.81
========================================================================================================================
SRC:
public String getSaleStartTime() { return PdUtil.parseDateToHHMMSS(bf.getSaleStartDt()); }
TGT:
This Method inquire sale start time of product
PRED:
This Method inquire sale start time of point
test 샘플별 bleu-4:  86.33
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, AprslRqstCore aprslRqstCore) throws BizApplicationException { _getAprslRqstSubInfoBiz().saveSubInfo(xtnAtrbtNm, xtnAtrbtCntnt, (AprslRqstImpl) aprslRqstCore); }
TGT:
Save an appraisal subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public String getSaleEndDt() { if (pdPdM == null) { return CPD01.END_DT; } // Return output return (pdPdM.getSaleEndDt() == null) ? CPD01.END_DT : PdUtil.parseDateToYYYYMMDD(pdPdM.getSaleEndDt()); }
TGT:
This Method inquire sale end date of benefit
PRED:
This Method inquire sale end date of product
test 샘플별 bleu-4:  86.33
========================================================================================================================
SRC:
public TxJrnlSvcGetTxJrnlOut clone(){ try{ TxJrnlSvcGetTxJrnlOut object= (TxJrnlSvcGetTxJrnlOut)super.clone(); object.lastChngTmstmp = (bxm.omm.format.wrapper.DateFormattedWrapper)this.lastChngTmstmp.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaStdAbrvtnMgmtSvcRegisterStdAbrvtnIn clone(){ try{ CaStdAbrvtnMgmtSvcRegisterStdAbrvtnIn object= (CaStdAbrvtnMgmtSvcRegisterStdAbrvtnIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<? extends IOmmObject> getListDataForConsistency(Integer pgNbr, Integer pgCnt) throws BizApplicationException { int pageOffSet = PaginationCoreUtils.getPgOffset(pgNbr, pgCnt); return _getDstbCnstncyStAmtTpMDso().selectListForConsistency(pageOffSet, pgCnt); }
TGT:
Validate Query for Distribution Validation
PRED:
Validate Query for Distribution Validation
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> assetSubInfoMap, AssetCore asset, String txDt, Integer txSeqNbr) throws BizApplicationException { _getAssetSubInfoBiz().saveMapSubInfo(assetSubInfoMap, txDt, txSeqNbr, (AssetImpl) asset); }
TGT:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value) { for (ExclsvDscdEnum enumObject : values()) { if (enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CmClTreeDIO select(String clId, String clHrarcyId) { return _getCmClTreeD().select(clId, clHrarcyId); }
TGT:
It get a http header properties.
PRED:
It get a http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getCndNm() throws BizApplicationException { String cndName = _getTrnsfrLng().getTransferLanguage(CCM01.TRANS_PDCND, cndCd); if (StringCoreUtils.isEmpty(cndName) || cndCd.equals(cndName)) { String dbCndName = BfCndCoreImpl.getInstance().getCndName(motherInstCd, cndCd); if (StringUtils.isNotBlank(dbCndName)) { cndName = dbCndName; } } // Return Output return cndName; }
TGT:
This method inquire condition name.
PRED:
This method inquire condition name.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaDstbCtvdSrchRsltListOut clone(){ try{ CaDstbCtvdSrchRsltListOut object= (CaDstbCtvdSrchRsltListOut)super.clone(); if ( this.srchOutList== null ) object.srchOutList = null; else{ java.util.List<bankware.corebanking.configurationadmin.distribution.service.dto.CaDstbCtvdSrchOut> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.distribution.service.dto.CaDstbCtvdSrchOut>(srchOutList.size()); for( bankware.corebanking.configurationadmin.distribution.service.dto.CaDstbCtvdSrchOut item : srchOutList ){ clonedList.add( (bankware.corebanking.configurationadmin.distribution.service.dto.CaDstbCtvdSrchOut)item.clone()); } object.srchOutList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaAsmItmMgmtSvcGetAsmItmListIn clone(){ try{ CaAsmItmMgmtSvcGetAsmItmListIn object= (CaAsmItmMgmtSvcGetAsmItmListIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<CashSndRcvPrdDtlIO> getListCashSndRcvPrd(String inqryStartDt,String inqryEndDt, String rltvStaffId, String sndRcvTrgtDscd) throws BizApplicationException { CashSndRcvPrdDtlIO cashSndRcvPrdDtlIO = new CashSndRcvPrdDtlIO(); cashSndRcvPrdDtlIO.setInstCd(getInstCd()); cashSndRcvPrdDtlIO.setDeptId(getDeptId()); cashSndRcvPrdDtlIO.setStaffId(getStaffId()); cashSndRcvPrdDtlIO.setInqryStartDt(inqryStartDt); cashSndRcvPrdDtlIO.setInqryEndDt(inqryEndDt); cashSndRcvPrdDtlIO.setRltdStaffId(rltvStaffId); cashSndRcvPrdDtlIO.setSndRcvTrgtDscd(sndRcvTrgtDscd); return _getCashSndRcv().getListCashSndRcvPrd(cashSndRcvPrdDtlIO); }
TGT:
It the history of cash acquisition and delivery between teller by date . It inquires the history of cash acquisition and delivery between teller from inquiry start date to inquiry end date. You can inquire the history of cash acquisition and delivery by cash send receive target distinction code. (1 : cash, 2 : other check, 3 : transfer)
PRED:
It inquires the teller's cash acquisition and delivery transaction history between teller and related teller. It inquires the teller's all cash acquisition and delivery history of a specific teller.
test 샘플별 bleu-4:  9.9
========================================================================================================================
SRC:
public String getSubInfo(String atrbtNm, AprslImpl aprslImpl, Integer aprslThingSeqNbr) throws BizApplicationException { // 1. 보조명세 캐시 조회 IValueObject aprslThingSubInfo = getSubInfoCache(aprslImpl, aprslThingSeqNbr); // 2. 보조원장 캐시가 null인 경우, null 리턴 if (aprslThingSubInfo == null) { return null; } // 3. 보조명세 캐시에서 속성명을 기준으로 속성값 조회 Object atrbtVal = aprslThingSubInfo.get(atrbtNm); // 속성값이 null인경우 null리턴 if (atrbtVal == null) { return null; } return String.valueOf(atrbtVal); }
TGT:
Inquire a specific subsidiary information of the insurance.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  67.87
========================================================================================================================
SRC:
public CaRoleMgmtSvcGetRoleServiceRelationListOut clone(){ try{ CaRoleMgmtSvcGetRoleServiceRelationListOut object= (CaRoleMgmtSvcGetRoleServiceRelationListOut)super.clone(); if ( this.tblNm== null ) object.tblNm = null; else{ java.util.List<bankware.corebanking.configurationadmin.role.service.dto.CaRoleMgmtSvcGetRoleServiceRelationOut> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.role.service.dto.CaRoleMgmtSvcGetRoleServiceRelationOut>(tblNm.size()); for( bankware.corebanking.configurationadmin.role.service.dto.CaRoleMgmtSvcGetRoleServiceRelationOut item : tblNm ){ clonedList.add( (bankware.corebanking.configurationadmin.role.service.dto.CaRoleMgmtSvcGetRoleServiceRelationOut)item.clone()); } object.tblNm = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaArrIssmdaTmpltMgmtSvcGetRelatedPsbkMsgListOut clone(){ try{ CaArrIssmdaTmpltMgmtSvcGetRelatedPsbkMsgListOut object= (CaArrIssmdaTmpltMgmtSvcGetRelatedPsbkMsgListOut)super.clone(); if ( this.psbkMsgList== null ) object.psbkMsgList = null; else{ java.util.List<bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrPsbkMsgInfoList> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrPsbkMsgInfoList>(psbkMsgList.size()); for( bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrPsbkMsgInfoList item : psbkMsgList ){ clonedList.add( (bankware.corebanking.configurationadmin.arrangement.service.dto.CaArrPsbkMsgInfoList)item.clone()); } object.psbkMsgList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaStaffChngSvcAddrListIO clone(){ try{ CaStaffChngSvcAddrListIO object= (CaStaffChngSvcAddrListIO)super.clone(); if ( this.ctcptXtnInfoList== null ) object.ctcptXtnInfoList = null; else{ java.util.List<bankware.corebanking.configurationadmin.actor.service.dto.CaStaffChngSvcCtcptXtnListIO> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.actor.service.dto.CaStaffChngSvcCtcptXtnListIO>(ctcptXtnInfoList.size()); for( bankware.corebanking.configurationadmin.actor.service.dto.CaStaffChngSvcCtcptXtnListIO item : ctcptXtnInfoList ){ clonedList.add( (bankware.corebanking.configurationadmin.actor.service.dto.CaStaffChngSvcCtcptXtnListIO)item.clone()); } object.ctcptXtnInfoList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean check(String vldnTrgt) throws BizApplicationException { boolean outMsg; if(logger.isDebugEnabled()){ logger.debug("CustIdVldtnImpl vldnTrgt : {} ", vldnTrgt); } // Query customer by customer id Cust cust = _getCustMngr().getCust(vldnTrgt); if (cust == null) { throw new BizApplicationException("AAPATE0008", new String[]{ "@custId", vldnTrgt }); } else { outMsg = true; } return outMsg; }
TGT:
Validate the attribute value ( Complex Validation ) Implemented and used by each business component.
PRED:
Validate the attribute value ( Complex Validation ) Implemented and used by each business component.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(AtCustSIO subInfoIO, CustImpl custImpl) throws BizApplicationException { // 1. 보조명세 캐시 조회결과에 따라 insert/update 판단 AtCustSIO oldSubInfoIO = getSubInfoCache(custImpl); if (oldSubInfoIO == null) { // PK setting subInfoIO.setCustId(custImpl.getCustId()); // insert _getAtCustSDso().insert(subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(subInfoIO, oldSubInfoIO)) { return; } // 변경전 이력 저장 _saveSubInfoHst(custImpl, oldSubInfoIO); // PK setting subInfoIO.setCustId(custImpl.getCustId()); // update _getAtCustSDso().update(subInfoIO); } // 2. 캐시 저장 custImpl.setSubInfoCache(subInfoIO); }
TGT:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public LnStsQuerySvcGetLnStsListBrnchIn clone(){ try{ LnStsQuerySvcGetLnStsListBrnchIn object= (LnStsQuerySvcGetLnStsListBrnchIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CashTransitSvcIn clone(){ try{ CashTransitSvcIn object= (CashTransitSvcIn)super.clone(); if ( this.tblNm== null ) object.tblNm = null; else{ java.util.List<bankware.corebanking.accounting.cashaccounting.service.dto.CashTransitSvcDtlIn> clonedList = new java.util.ArrayList<bankware.corebanking.accounting.cashaccounting.service.dto.CashTransitSvcDtlIn>(tblNm.size()); for( bankware.corebanking.accounting.cashaccounting.service.dto.CashTransitSvcDtlIn item : tblNm ){ clonedList.add( (bankware.corebanking.accounting.cashaccounting.service.dto.CashTransitSvcDtlIn)item.clone()); } object.tblNm = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value) { for (RpymntWayDscdEnum enumObject : values()) { if (enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrReal> getListArrRealByArrStsList(String custId, List<ArrStsEnum> arrStsEnumList, String arrCustRelCd, String bizDscd,String pdTpCd, String pdTmpltCd, String pdCd) throws BizApplicationException { return _getArrCustRelQryBizImpl().getListArrRealByArrStsList(custId, arrStsEnumList, arrCustRelCd, bizDscd, pdTpCd, pdTmpltCd, pdCd, 0, 0, false); }
TGT:
Inquire a list of arrangements of specific product currently in specific status lise related to customer with specific arrangement-customer relation type.
PRED:
Inquire a list of arrangements of specific product currently in specific status list related to customer with specific arrangement-customer relation type.
test 샘플별 bleu-4:  87.25
========================================================================================================================
SRC:
public List<ArrReal> getListArrBasedOnStsHistory(String deptId, ArrDeptRelEnum arrDeptRel, String pdCd, ArrStsEnum curArrSts, ArrStsEnum arrSts, String inqryStartDt, String inqryEndDt, int pgNbr, int pgCnt) throws BizApplicationException { return _getArrDeptRelImpl().getArrListBasedOnArrStatusHistory(deptId, null, null, null, pdCd, arrDeptRel, curArrSts, arrSts, null, inqryStartDt, inqryEndDt, pgNbr, pgCnt, false); }
TGT:
Inquire specific department own (as accounting department) arrangements which status changed into specific status within inquiry period and currently in another specific status. (Paging)
PRED:
Inquire specific department own (as accounting department) arrangements of specific product hierarchy whose status changed into specific status within inquiry period and currently in another specific status. (Paging) Inquire modification arrangement of inquired arrangement if hasVrtnArr is true.
test 샘플별 bleu-4:  55.71
========================================================================================================================
SRC:
public void doServiceAction(String arrSrvcTpCd,ArrCndActionRequiredValue arrCndActionRequiredValue) throws BizApplicationException { if (!this.getArrangementCore().isReal()) return; switch (arrSrvcTpCd) { case "OpenStandingOrder": _buildInitialPlan( arrSrvcTpCd,arrCndActionRequiredValue); return; default: // there are no condition action for this condition ({0},{1}) on arrangement service ({2}) // 계약서비스 ({2})를 위한 조건 ({0},{1})의 행동은 유효하지 않습니다 throw new BizApplicationException("AAPARE0288" , new Object[]{this.getCndCd(),this.getCndCdNm(),arrSrvcTpCd}); } }
TGT:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
PRED:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void undoSubInfo(ArrIssmdaImpl arrIssmdaImpl, String txDt, Integer txSeqNbr) throws BizApplicationException { ArArrIssmdaSubHIO in = new ArArrIssmdaSubHIO(); in.setArrIssmdaTpCd(arrIssmdaImpl.getArrIssmdaTpCd()); in.setArrIssmdaInhrncId(arrIssmdaImpl.getArrIssmdaInhrncId()); in.setIssueArrId(arrIssmdaImpl.getIssueArrId()); in.setTxDt(txDt); in.setTxSeqNbr(txSeqNbr); in.setCnclYn(CCM01.NO); // 보조명세 이력 조회결과가 없는 경우 리턴 ArArrIssmdaSubHIO arArrIssmdaSubHIO = (ArArrIssmdaSubHIO) _getSubInfoHstCache(arrIssmdaImpl, txDt, txSeqNbr); if(arArrIssmdaSubHIO == null){ return; } // 취소여부를 'Y'로 갱신 arArrIssmdaSubHIO.setCnclYn(CCM01.YES); _getArArrIssmdaSubHDso().update(arArrIssmdaSubHIO); // 보조명세 원복 ArArrIssmdaSIO arArrIssmdaSIO = new ArArrIssmdaSIO(); DtoUtils.setSubInfoIO(arArrIssmdaSubHIO, arArrIssmdaSIO); _getArArrIssmdaSDso().update(arArrIssmdaSIO); }
TGT:
Restore extended information of subsidiary information(CTI)
PRED:
Return the value of the subsidiary information to the previous value. However, this method is not invoked because no cancellation function is currently made in the asset area. If cancellation function is made in the asset area, this method should be called through the method {@link AssetThingSubInfoBiz #undoSubInfo}.
test 샘플별 bleu-4:  2.98
========================================================================================================================
SRC:
public AssetMtrtyAdventSubInfoOut clone(){ try{ AssetMtrtyAdventSubInfoOut object= (AssetMtrtyAdventSubInfoOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getAttributeDtoClassName() { return stdDtoClassAtrbt.getAttributeDtoClassName(); }
TGT:
Get attribute DTO class
PRED:
Get attribute DTO class
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public AtrbtVldtnWayEnum getAttributeValidationWayCode() { return (isValidationTailored)? atrbtVldtnWayCd:stdDtoClassAtrbt.getAttributeValidationWayCode(); }
TGT:
Get attribute validation way code
PRED:
Get attribute validation way code
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public MbrshpArrStsChngHstInqrySvcListOut clone(){ try{ MbrshpArrStsChngHstInqrySvcListOut object= (MbrshpArrStsChngHstInqrySvcListOut)super.clone(); if ( this.mbrshpArrStsHst== null ) object.mbrshpArrStsHst = null; else{ java.util.List<bankware.corebanking.customer.query.service.dto.MbrshpArrStsChngHstInqrySvcOut> clonedList = new java.util.ArrayList<bankware.corebanking.customer.query.service.dto.MbrshpArrStsChngHstInqrySvcOut>(mbrshpArrStsHst.size()); for( bankware.corebanking.customer.query.service.dto.MbrshpArrStsChngHstInqrySvcOut item : mbrshpArrStsHst ){ clonedList.add( (bankware.corebanking.customer.query.service.dto.MbrshpArrStsChngHstInqrySvcOut)item.clone()); } object.mbrshpArrStsHst = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public RepeatStatus execute(StepContribution arg0, ChunkContext arg1) throws Exception { // String procKindCd = (String)arg1.getStepContext().getJobExecutionContext().get("procKindCd"); // 20180423 kjp arg 받는 방법이 바뀌었음 String procKindCd = BatchApplicationContext.getJobParameters().getString("procKindCd"); if(logger.isDebugEnabled()) { logger.debug("DistributionApply procKindCd : {}", procKindCd); } //예약배포 실행 if(PROC_KIND_CD_APPLY.equals(procKindCd)){ _excuteForApply(); } return RepeatStatus.FINISHED; }
TGT:
Data is generated for new institutions in each area.
PRED:
Data is generated for new institutions in each area.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public InsrncRltdCustOut getRelatedCust(InsrncCustRelEnum insrncCustRelCd) throws BizApplicationException { return super.getRelatedCust(insrncCustRelCd.getValue()); }
TGT:
It inquires customer information related with insurance.
PRED:
It inquires customer information related with insurance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void checkPassword(PswdVldtnIO in) throws BizApplicationException { //TODO 기관파라미터ENUM 으로 변경 String pswdRuleStr = _getInstParmProvider().getInstParm( InstParamEnum.APPLY_PASSWORD_VALIDATION_RULE_CONTENT.getValue()); if (pswdRuleStr == null) { throw new BizApplicationException("AAPCME0175", new Object[] {}); } String pswdRuleArr[] = pswdRuleStr.split(";"); for(int i = 0; i < pswdRuleArr.length; i++) { String pswdRule[] = pswdRuleArr[i].split(":"); if (pswdRule.length != 2) { throw new BizApplicationException("AAAAAAAAA", new Object[] {}); } String vldtnTp = pswdRule[0]; String regexNm = pswdRule[1]; CmnCdCheckIn inCdDao = new CmnCdCheckIn(); inCdDao.setCdNbr(CCM01.REGEX_TP_DSCD); inCdDao.setCd(regexNm); if (CCM03.REGT.equals(vldtnTp)) { DataCheckUtils.isValidPassword(_getCd().getCode(inCdDao).getCdNm(), in.getPswd()); } } }
TGT:
It checks password.
PRED:
It checks if the input password equals the registered password of the main login information.
test 샘플별 bleu-4:  10.83
========================================================================================================================
SRC:
public SimpleDpstAcctInqrySvcOut clone(){ try{ SimpleDpstAcctInqrySvcOut object= (SimpleDpstAcctInqrySvcOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaStaffInqrySvcGetStaffRoleListOut clone(){ try{ CaStaffInqrySvcGetStaffRoleListOut object= (CaStaffInqrySvcGetStaffRoleListOut)super.clone(); if ( this.staffRoleList== null ) object.staffRoleList = null; else{ java.util.List<bankware.corebanking.configurationadmin.actor.service.dto.CaStaffInqrySvcGetStaffRoleOut> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.actor.service.dto.CaStaffInqrySvcGetStaffRoleOut>(staffRoleList.size()); for( bankware.corebanking.configurationadmin.actor.service.dto.CaStaffInqrySvcGetStaffRoleOut item : staffRoleList ){ clonedList.add( (bankware.corebanking.configurationadmin.actor.service.dto.CaStaffInqrySvcGetStaffRoleOut)item.clone()); } object.staffRoleList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public StaffLoginHstSrchSvcIn clone(){ try{ StaffLoginHstSrchSvcIn object= (StaffLoginHstSrchSvcIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public AprvlRgstSvcGetIn clone(){ try{ AprvlRgstSvcGetIn object= (AprvlRgstSvcGetIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<CaTblXtnAtrbtOut> getTableExtendAttribute(String tblNm) throws BizApplicationException { return this.getTableExtendAttribute(_getCaCmnContext().getInstCode(), tblNm, CaXtnAtrbtVrtnCmpsEnum.NA, null); }
TGT:
Query table extend attribute list by input condition
PRED:
Query table extend attribute list by no condition basic method reference : {@link TblXtnAtrbtCore getTableExtendAttribute(String, String, XtnAtrbtVrtnCmpsEnum, Map<String, String>)}
test 샘플별 bleu-4:  30.14
========================================================================================================================
SRC:
public void saveSubInfo(IValueObject subInfo, ActorImpl actorImpl) throws BizApplicationException { // 1. 보조명세 종류 조회 ActorSubInfoKndEnum subInfoKnd = actorImpl.getSubInfoKnd(); // 2. 보조명세 캐시 조회결과에 따라 insert/update 판단 IValueObject subInfoIO = getSubInfoCache(actorImpl); if (subInfoIO == null) { // PK setting subInfoIO = _getNewSubInfoSqlIO(subInfoKnd); subInfoIO.set("actorId", actorImpl.getActorId()); // insert _insertSubInfo(subInfoKnd, subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(subInfo, subInfoIO)) { return; } // 변경전 이력 저장 _saveSubInfoHst(actorImpl, subInfoIO); // PK setting subInfoIO.set("actorId", actorImpl.getActorId()); // update _updateSubInfo(subInfoKnd, subInfoIO); } // 3. 캐시 저장 String cacheKey = XtnTableEnum.AT_ACTOR_M.getValue().concat(actorImpl.getActorId()); actorImpl.saveSubInfoCache(cacheKey, subInfoIO); }
TGT:
This method save settlement subsidiary calculation detail information using interface VO
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public String getValAsString(Integer seqNbr) throws BizApplicationException { ArArrCndDIO arArrCndDIO = new ArArrCndDIO(); arArrCndDIO.setInstCd(_getCmnContextCore().getInstCode()); arArrCndDIO.setArrId(this.getArrangementCore().getArrId()); // ArrangementCore Id arArrCndDIO.setCndCd(this.getCndCd()); // Condition Code arArrCndDIO.setSeqNbr(seqNbr); // Sequence Number ArrRealCore arrReal = (ArrRealCore)this.getArrangementCore(); //거래계약분리처리 if (ArrKndCoreEnum.TEMPORARY.getValue().equals(arrReal.getArrKindCd())) { arArrCndDIO = _getArArrTmpryCndDDso().select(arArrCndDIO); } else { arArrCndDIO = _getArArrCndDDso().select(arArrCndDIO); } if (arArrCndDIO == null) { return null; } return this._getValueAsString(arArrCndDIO); }
TGT:
This method get condition value using the sequence number.
PRED:
This method get the value as string. for list type condition, return list code and the other type return the string number applied the scale 2.
test 샘플별 bleu-4:  9.62
========================================================================================================================
SRC:
public static boolean isValid(String value) throws BizApplicationException { if(!StringUtils.isEmpty(value)) { for (NoticeSrchCrtrEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } throw new BizApplicationException("AAPATE0028", new Object[] { value, "@noticeSrchCrtrCd" }); } return true; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value){ for (ClsgPrsntStsInqryEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isPossibleByTransactionType(String intTxTp) throws BizApplicationException { switch (InterestTransactionTypeEnum.getEnum(intTxTp)) { case SETTLEMENT : case PROVISIONAL_SETTLEMENT : case TERMINATION : case DEPOSITOR_INFO_EXTRACTION : case DAILY_ACCRUAL : return true; default: /* * The transaction type of interest was not allowed. transaction type : {0} */ throw new BizApplicationException("AAPSTE0100", new Object[] { intTxTp }); } }
TGT:
This method provides the function for checking if transaction is possible by input transaction type.
PRED:
This method provides the function for checking if transaction is possible by input transaction type.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean checkCode(String cdNbr, Map<String, Object> supplInfoVal) throws BizApplicationException { // query data return !(_getDcDocMDso().select(DocStsEnum.NORMAL.getValue(), String.valueOf(supplInfoVal.get(CCM03.CD)), DocTypEnum.NOTICE_MSG.getValue()) == null); }
TGT:
It check code number & code value by cdDtlIO DTO. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter.
PRED:
It check code number & code value by cdDtlIO DTO. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public IntRtCmptnSvcGetOut clone(){ try{ IntRtCmptnSvcGetOut object= (IntRtCmptnSvcGetOut)super.clone(); if ( this.intRtCmptnSvcGetsub== null ) object.intRtCmptnSvcGetsub = null; else{ java.util.List<bankware.corebanking.underexamination.application.service.dto.IntRtCmptnSvcGetsub> clonedList = new java.util.ArrayList<bankware.corebanking.underexamination.application.service.dto.IntRtCmptnSvcGetsub>(intRtCmptnSvcGetsub.size()); for( bankware.corebanking.underexamination.application.service.dto.IntRtCmptnSvcGetsub item : intRtCmptnSvcGetsub ){ clonedList.add( (bankware.corebanking.underexamination.application.service.dto.IntRtCmptnSvcGetsub)item.clone()); } object.intRtCmptnSvcGetsub = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean check(String vldnTrgt) throws BizApplicationException { boolean isOk; if(_getCmnContext().getTxDate().compareTo(vldnTrgt) < 0 ) { throw new BizApplicationException("AAPCME0606", new String[]{vldnTrgt}); } else { isOk = true; } return isOk; }
TGT:
Validate the attribute value ( Simple Validation ) Implemented and used by each business component.
PRED:
Validate the attribute value ( Complex Validation ) Implemented and used by each business component.
test 샘플별 bleu-4:  81.54
========================================================================================================================
SRC:
public java.lang.String getMthrArrId(){ return mthrArrId; }
TGT:
This method inquires a mother arrangement identification of the transaction.
PRED:
This method inquires a mother arrangement identification of the transaction.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isValidType(AtrbtTpEnum atrbtTp, Integer dcmlPntLen, String atrbtCntnt) throws BizApplicationException { if (logger.isDebugEnabled()) { logger.debug("atrbtTpCd={}", atrbtTp); logger.debug("atrbtCntnt={}", atrbtCntnt); } if (atrbtTp == null) { throw new BizApplicationException("AAPCME0037", new Object[] { atrbtTp }); } // Validate attribute type switch (atrbtTp) { case TEXT: // text return (StringCoreUtils.isEmpty(atrbtCntnt)) ? false : true; case TEXT_DATE: // date return DateCoreUtils.isValidDate(atrbtCntnt); case TEXT_NUMBER: // number return DataCheckCoreUtils.isNumeric(atrbtCntnt); case NUMBER: // number boolean chkNbr = DataCheckCoreUtils.isNumeric(atrbtCntnt); if(logger.isDebugEnabled()) { logger.debug(" ########### isValidType NUMBER chkNbr : {}", chkNbr); } if(chkNbr) { // 소수점자리수 검증 return _isValidDecimalPoint(dcmlPntLen, atrbtCntnt); } else { return chkNbr; } case TEXT_ALPHA_NUMERIC: // Alpha-Number return DataCheckCoreUtils.isAlphaNumeric(atrbtCntnt); case YES_OR_NO: // yes or no return (CCM01.YES.equals(atrbtCntnt) || CCM01.NO.equals(atrbtCntnt)) ? true : false; case PASSWORD: // Password return DataCheckCoreUtils.isValidPassword(atrbtCntnt); case TIMESTAMP: // timestamp return true; case JSON: // json return DataCheckCoreUtils.isJson(atrbtCntnt); case EMPTY: return true; default: throw new BizApplicationException("AAPCME0037", new Object[] { atrbtTp }); } }
TGT:
Validate that the value of the input attribute matches the type of the attribute.
PRED:
Validate that the value of the input attribute matches the type of the attribute.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getCndValDefault() throws BizApplicationException { if (getRngVal() != null) { return getRngVal().setScale(_setScale()).toPlainString(); } if (getMinVal() != null && getMinVal().compareTo(getMaxVal()) == 0 && getMinVal().compareTo(getBsicVal()) == 0) { return getBsicVal().setScale(_setScale()).toPlainString(); } return null; }
TGT:
This method get the arrangement condition value as string. For list type condition, return list code. If level of negotiation is arrangement return arrangement list code or range value. If level of negotiation is product and size of list code is one, return product list code or default value. Others return null
PRED:
This method get the arrangement condition value as string. for list type condition, return list code. If level of negotiation is arrangement return arrangement list code or range value. If level of negotiation is product and size of list code is one, return product list code or default value Others return null
test 샘플별 bleu-4:  90.08
========================================================================================================================
SRC:
public List<ArrIntRt> generateArrDepositInterestRate(Arrangement arr,String txDt,Integer txSeqNbr) throws BizApplicationException{ return generateArrDepositInterestRate(arr, null, null, txDt, txSeqNbr); }
TGT:
Generate deposit normal interest rate.
PRED:
Generate deposit normal interest rate.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isChannelArs(String chnlDscd) throws BizApplicationException { return ChannelEnum.PHONE_BANKING_ARS.getValue().equals(chnlDscd) ? true : false; }
TGT:
Inquiry whether it is a channel phone banking/ARS
PRED:
It checks phone banking/ARS channel.
test 샘플별 bleu-4:  19.72
========================================================================================================================
SRC:
public boolean isSalable(String aplyDt, String aplyTm) { if (pdPdM == null || aplyDt == null) { return false; } Date baseDt = PdUtil.parseYyyyMMddHHmmssToDate(aplyDt, _getAplyTmString(aplyTm)); if (baseDt.after(pdPdM.getSaleStartDt()) && baseDt.before(pdPdM.getSaleEndDt())) { return true; } return false; }
TGT:
This Method inquire whether or not it is a sallable point on the input date and time.
PRED:
This Method inquire whether it is a salable benefit It is judged whether or not the benefit can be salable on the basis of the date for benefit information inquiry.
test 샘플별 bleu-4:  19.84
========================================================================================================================
SRC:
public void saveSubInfo(IValueObject subInfo, String txDt, Integer txSeqNbr, AssetImpl assetImpl) throws BizApplicationException{ // 0. null check if(subInfo == null){ throw new BizApplicationException("AAPCME0006", new Object[] {_getNewSubInfo(assetImpl.getAssetSubInfoKnd()).getClass().getSimpleName()}); } logger.debug("## <AS> saveSubInfo -> subInfo = {} :: ", subInfo.getFieldValues()); // 1. 자산보조명세의 종류 조회 AssetSubInfoKndEnum subInfoKnd = assetImpl.getAssetSubInfoKnd(); // 2. 표준속성에 등록된 검증규칙을 통해 입력받은 확장속성내용 검증 for(Entry<String, Object> entry : subInfo.getFieldValues().entrySet()) { if(entry.getValue() != null) { _getAtrbtChk().checkStandardAttribute(entry.getKey(), String.valueOf(entry.getValue())); } } // 2. 보조원장 캐시 조회결과에 따라 insert/update 판단 IValueObject subInfoCache = getSubInfoCache(assetImpl); if(subInfoCache == null){ // DBIO VO new instance subInfoCache = _getNewSubInfoSqlIO(subInfoKnd); subInfoCache.set("assetId", assetImpl.getAssetBasicCache().getAssetId()); //PK setting // 빈 이력 생성 --> undo 시 확장속성 저장 이전으로
TGT:
Save an appraisal thing subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
static boolean isValid(String value) { for (PdClassificationStructureDistinctionCodeEnum enumObject : values()) { if (enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public java.lang.String getArrOpnDt(){ return arrOpnDt; }
TGT:
Inquire the date of original arrangement status changed into "Active". ( It is override method of Arrangement.getArrOpnDt() )
PRED:
Inquire the date the arrangement status changed into "Active". Caution : - Get status start date of the last "Active" state if there are many "Active" status in status history - Return null if the arrangement has never been in "Active" status yet
test 샘플별 bleu-4:  13.85
========================================================================================================================
SRC:
public void saveSubInfo(ActorCore actorCore, String xtnAtrbtNm, String xtnAtrbtCntnt) throws BizApplicationException { _getActorSubInfoBiz().saveSubInfo(xtnAtrbtNm, xtnAtrbtCntnt, (ActorImpl) actorCore); }
TGT:
Save an appraisal subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public ArrBalCore getArrPrincipalBalCore(ArrRealCore arr, String crncyCd) throws BizApplicationException { return getArrBalCore(arr, AmtTpCoreEnum.PRNCPL.getValue(),BalTpCoreEnum.CURRENT.getValue(), crncyCd); }
TGT:
This method inquires a list of balances belonging to the arrangement that matches the entered currency code where the amount type is the principal and the balance type is the current balance.
PRED:
This method inquires an object of principal current balance by currency code.
test 샘플별 bleu-4:  4.47
========================================================================================================================
SRC:
public void doServiceAction(String arrSrvcTpCd,ArrCndActionRequiredValue arrCndActionRequiredValue) throws BizApplicationException { logger.debug("====== Do Service Action Test ======"); switch (arrSrvcTpCd) { case "IntraRealTmTrnsfr": case "InterRealTmTrnsfrOut": _doMoneyTransferAction(arrSrvcTpCd,arrCndActionRequiredValue); break; default: // there are no condition action for this condition ({0},{1}) on arrangement service ({2}) // 계약서비스 ({2})를 위한 조건 ({0},{1})의 행동은 유효하지 않습니다 throw new BizApplicationException("AAPARE0288" , new Object[]{this.getCndCd(),this.getCndCdNm(),arrSrvcTpCd}); } }
TGT:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
PRED:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void registerStampTax(StStampTaxBsicIO stStampTaxBsicIO) throws BizApplicationException { _checkInputValue(stStampTaxBsicIO.getArrId(), "arrId"); _checkInputValue(stStampTaxBsicIO.getTxDt(), "txDt"); _checkInputValue(stStampTaxBsicIO.getTxSeqNbr(), "txSeqNbr"); _getCmnContext().setHeaderColumn(stStampTaxBsicIO); StStampTaxMIO in = _getStampTaxIn(stStampTaxBsicIO); in.setCnclYn(CCM01.NO); in.setDtsRcvryYn(CCM01.NO); if(StringUtils.isEmpty(stStampTaxBsicIO.getBaseDt())){ in.setBaseDt(stStampTaxBsicIO.getTxDt()); } _getStStampTaxMDso().insert(in); }
TGT:
This method registers stamp tax information.
PRED:
This method registers stamp tax information.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value) { for (LevyBaseAmountCoreEnum enumObject : values()) { if (enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaSrvcPrflMgmtSvcGetInstSrvcBsicDtlOut clone(){ try{ CaSrvcPrflMgmtSvcGetInstSrvcBsicDtlOut object= (CaSrvcPrflMgmtSvcGetInstSrvcBsicDtlOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public UnmaskSvcGetListHistoryOut clone(){ try{ UnmaskSvcGetListHistoryOut object= (UnmaskSvcGetListHistoryOut)super.clone(); if ( this.list== null ) object.list = null; else{ java.util.List<bankware.corebanking.common.mask.service.dto.UnmaskSvcGetHistoryOut> clonedList = new java.util.ArrayList<bankware.corebanking.common.mask.service.dto.UnmaskSvcGetHistoryOut>(list.size()); for( bankware.corebanking.common.mask.service.dto.UnmaskSvcGetHistoryOut item : list ){ clonedList.add( (bankware.corebanking.common.mask.service.dto.UnmaskSvcGetHistoryOut)item.clone()); } object.list = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public AtNoticeDIO select(String instCd, String noticeId) { return _getAtNoticeD().select(instCd, noticeId); }
TGT:
It get a http header properties.
PRED:
It get a http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveMapSubInfo(ActorImpl actorImpl, String ctcptId, Integer ctcptChngSeqNbr, Map<String, String> subInfoMap) throws BizApplicationException { // 0. null check if (subInfoMap == null || subInfoMap.isEmpty()) { return; } // 1. 보조명세 캐시 조회결과에 따라 insert/update 판단 // ** 연락처 보조명세는 변경이력을 관리하지 않는다. AtActorCtcptSIO subInfoIO = getSubInfoCache(actorImpl, ctcptId, ctcptChngSeqNbr); if (subInfoIO == null) { // DBIO VO new instance subInfoIO = new AtActorCtcptSIO(); subInfoIO.setActorId(actorImpl.getActorId()); subInfoIO.setActorCtcptId(ctcptId); subInfoIO.setActorCtcptChngSeqNbr(ctcptChngSeqNbr); // 입력된 Map을 DBIO VO에 반영 DtoUtils.setSubInfoIO(subInfoMap, subInfoIO); // insert _getAtActorCtcptSDso().insert(subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(subInfoMap, subInfoIO)) { return; } // 입력된 Map을 DBIO VO에 반영 DtoUtils.setSubInfoIO(subInfoMap, subInfoIO); // update _getAtActorCtcptSDso().update(subInfoIO); } // 2. 캐시 저장 _
TGT:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public int register(DstbCtvdRgstIn dstbCtvdRgstIn) throws BizApplicationException{ // 1. get data and seq String dstbCtvdDt = _getCmnContextCore().getTxDate(); int dstbCtvdSeqNbr = _getCaDstbCtvdMDso().selectNextSeqNbr(_getCmnContextCore().getTxDate()); // 2. register Main data _registerBsic(dstbCtvdDt, dstbCtvdSeqNbr, dstbCtvdRgstIn.getDstbRqstId(), dstbCtvdRgstIn.getDstbCtvdRqstDt()); // 3. register Detail data _registerDetail(dstbCtvdDt, dstbCtvdSeqNbr, dstbCtvdRgstIn.getDstbCtvdRgstInList()); return dstbCtvdSeqNbr; }
TGT:
It registers the self authentication code information. Needs caution as the registered information performs the update transaction. It gets the first institution code in the list and query the entire contents.
PRED:
It registers the actor role parameter information list. If there is registered actor role parameter information by the same institution, throws exception.
test 샘플별 bleu-4:  7.88
========================================================================================================================
SRC:
public DeptRoleTmpltBsicInfoIO getDeptRoleTemplateInfo( String instCd, String roleTmpltId) throws BizApplicationException { return super.getDeptRoleTemplateInfo(instCd, roleTmpltId); }
TGT:
Inquire the role template's detail information by the input institution code and role template identification. It inquires the role list of the template that are not deleted.
PRED:
It gets the role template's detail information by the input institution code and role template identification.
test 샘플별 bleu-4:  44.47
========================================================================================================================
SRC:
public CustCtcptChngSvcGetIn clone(){ try{ CustCtcptChngSvcGetIn object= (CustCtcptChngSvcGetIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value) throws BizApplicationException { if(!StringCoreUtils.isEmpty( value)) { for (AprslUnitClCoreEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } throw new BizApplicationException("AAPATE0028", new Object[] {value, "@AssetXtnAtrbtNm"});//({0}) is invalid {1}. } return true; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public BigDecimal getLogSeqNbr() throws BizApplicationException{ return BigDecimal.ZERO; }
TGT:
This method provides the ability to numbering log serial numbers for AC_ACCTG_L Table (accounting log).
PRED:
This method creates general ledger log sequence number. It depends on the requirements of the site, the log sequence number numbering method of the General ledger may be applied differently.
test 샘플별 bleu-4:  6.31
========================================================================================================================
SRC:
public CaStaffRgstSvcCtcptIO clone(){ try{ CaStaffRgstSvcCtcptIO object= (CaStaffRgstSvcCtcptIO)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean checkCode(CaCdNbrInfoIO in, String cd) throws BizApplicationException { CaCmCdInstDIO daoIn = new CaCmCdInstDIO(); daoIn.setInstCd(in.getInstCd()); daoIn.setCdNbr(in.getCdNbr()); daoIn.setCd(cd); daoIn.setActvStsCd(CaActiveStatusEnum.ACTIVE.getValue()); List<CaCmCdInstDIO> daoOutList = _getCmCdInstDDso().selectListByCondition(daoIn); if(daoOutList == null || daoOutList.isEmpty()) { return false; } return true; }
TGT:
It check code number & code value. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter
PRED:
It check code number & code value by cdDtlIO DTO. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter.
test 샘플별 bleu-4:  79.75
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, String txDt, Integer txSeqNbr, AssetImpl assetImpl, Integer assetThingSeqNbr) { // 0. null check if (StringUtils.isEmpty(xtnAtrbtNm)){ return; } // 1. 자산물건보조명세의 종류 조회 AssetThingSubInfoKndEnum subInfoKnd = assetImpl.getAssetThingSubInfoKnd(assetThingSeqNbr); // 2. 표준속성에 등록된 검증규칙을 통해 입력받은 확장속성내용 검증 _getAtrbtChk().checkStandardAttribute(xtnAtrbtNm, xtnAtrbtCntnt); // 3. 보조원장 캐시 조회결과에 따라 insert/update 판단 IValueObject subInfoCache = getSubInfoCache(assetImpl, assetThingSeqNbr); if(subInfoCache == null){ // DBIO VO new instance subInfoCache = _getNewSubInfoSqlIO(subInfoKnd); subInfoCache.set("assetId", assetImpl.getAssetBasicCache().getAssetId()); // PK setting subInfoCache.set("assetThingSeqNbr", assetThingSeqNbr); // PK setting // 빈 이력 생성 --> undo 시 확장속성 저장 이전으로 속성값을 원복시키기 위함 _
TGT:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<TblXtnAtrbtOut> getTableExtendAttribute(String tblNm) throws BizApplicationException { return this.getTableExtendAttribute(_getCmnContextCore().getInstCode(), tblNm, XtnAtrbtVrtnCmpsEnum.NA, null); }
TGT:
Query table extend attribute list by input condition
PRED:
Query table extend attribute list by no condition basic method reference : {@link TblXtnAtrbtCore getTableExtendAttribute(String, String, XtnAtrbtVrtnCmpsEnum, Map<String, String>)}
test 샘플별 bleu-4:  30.14
========================================================================================================================
SRC:
public String getSubInfo(ActorImpl actorImpl, String dueDlgncDscd, Integer dueDlgncSeqNbr, String atrbtNm) throws BizApplicationException { // 1. 보조명세 캐시 조회 IValueObject subInfo = getSubInfoCache(actorImpl, dueDlgncDscd, dueDlgncSeqNbr); // 2. 보조명세 캐시가 null인 경우, null 리턴 if (subInfo == null) { return null; } // 3. 보조명세 캐시에서 속성명 기준으로 속성값 조회 Object atrbtVal = subInfo.get(atrbtNm); // Casting 시 Null 방지 if (atrbtVal == null) { return null; } return String.valueOf(atrbtVal); }
TGT:
Inquire a extended information of Subsidiary Information(CTI).
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  20.86
========================================================================================================================
SRC:
public ArrRealCore getArrRealCore(ArrRealGetIn arrRealGetIn) throws BizApplicationException { return _getArrCoreMngrAgent().getArrRealCore(arrRealGetIn); }
TGT:
Inquire real arrangement using arrangement id (internal use) or business key like account number, application number , mobile number and so on. If 'arrExtrnlIdNbrTp'(arrangement external identification number type) is null, then arrIdNbr is arrangement identification. If you want to get the child arrangements directly, passes account number and the nthNbr for child sequence number.
PRED:
Contract inquiry Returns all types of contracts as a top-level contract.
test 샘플별 bleu-4:  0.19
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> xtnInfo, AsmCore asm) { _getAsmSubInfoBiz().saveSubInfo(xtnInfo, (AsmImpl)asm); }
TGT:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CmAtchmntFileDIO clone(){ try{ CmAtchmntFileDIO object= (CmAtchmntFileDIO)super.clone(); object.lastChngTmstmp = (bxm.omm.format.wrapper.DateFormattedWrapper)this.lastChngTmstmp.clone(); object.atchmntFileCntnt = java.util.Arrays.copyOf(this.atchmntFileCntnt, this.atchmntFileCntnt.length); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void doServiceAction(String arrSrvcTpCd,ArrCndActionRequiredValue arrCndActionRequiredValue) throws BizApplicationException { if (!ArrConditionErrorTypeEnum.NoError.equals(isValidCndValue(getListCd()))){ String inputStr = this._getCdLstNm(getListCd()); String pdListStr = this._buildPdList(); //This product purchase is not allowed to customer type ({0},{1}) //본상품의 판매는 고객유형 ({0},{1})에게 허용되지 않습니다 throw new BizApplicationException("AAPARE0274" , new Object[]{pdListStr,inputStr}); } }
TGT:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
PRED:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(CustRprsnCore custRprsnCore, String xtnAtrbtNm, String xtnAtrbtCntnt) throws BizApplicationException { _getCustRprsnSubInfoBiz().saveSubInfo(xtnAtrbtNm, xtnAtrbtCntnt, (CustRprsnImpl) custRprsnCore); }
TGT:
This method save settlement subsidiary calculation detail information using interface VO
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public IpctMgmtSvcGetIpctTxEntryListIn clone(){ try{ IpctMgmtSvcGetIpctTxEntryListIn object= (IpctMgmtSvcGetIpctTxEntryListIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(PrtnrCore prtnrCore) throws BizApplicationException { return _getPrtnrSubInfoBiz().getMapSubInfo((PrtnrImpl) prtnrCore); }
TGT:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CustCheckPwdOut checkPassword(String pswd) throws BizApplicationException { //check required inputs if (StringUtils.isEmpty(pswd)) { throw new BizApplicationException("AAPCME0006", new Object[] {"@pswd"}); } return checkPassword(null, pswd, null); }
TGT:
It checks if the input password equals with the registered password of the input login information.
PRED:
It checks if the input password equals the registered password of the main login information.
test 샘플별 bleu-4:  66.78
========================================================================================================================
SRC:
public BigDecimal getLastTxAfBalBeforeSpecificTx(ArrReal arr, String txDt, int txSeqNbr) throws BizApplicationException { BigDecimal txAfBal = _getArrTxXtnBiz().getLastTxAfBalBeforeSpecificTx(_getCmnContext().getInstCode(), arr, txDt, txSeqNbr); if (txAfBal == null) { txAfBal = BigDecimal.ZERO; } return txAfBal; }
TGT:
This method inquires last balance before specific transaction.
PRED:
This method inquires a last balance before specific transaction.
test 샘플별 bleu-4:  65.8
========================================================================================================================
SRC:
public Map<String, String> getMapXtnInfo(String assetId, String custId, String assetCustRelCd) throws BizApplicationException{ AsAssetCustXtnInfoDIO input = new AsAssetCustXtnInfoDIO(); input.setInstCd(_getCmnContextCore().getInstCode()); input.setAssetId(assetId); input.setCustId(custId); input.setAssetCustRelCd(assetCustRelCd); Map<String, String> xtnAtrbtMap = new HashMap<String, String>(); for(AsAssetCustXtnInfoDIO xtnInfo : _getAsAssetCustXtnInfoDDso().selectList(input)) { xtnAtrbtMap.put(xtnInfo.getXtnAtrbtNm(), xtnInfo.getXtnAtrbtCntnt()); } return xtnAtrbtMap; }
TGT:
Inquire the actor extended information map. Inquire extended information with normal extended attribute status code.
PRED:
Inquire the actor extended information map. Inquire extended information with normal extended attribute status code.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArrSrvcBlckngGetOut getArrServiceBlocking(Integer arrSrvcBlckngSeqNbr, String baseDt, Boolean isActiveOnly) throws BizApplicationException { return _getArrSrvcBlckngBiz().getArrServiceActiveBlocking(arrSrvcBlckngSeqNbr, baseDt, isActiveOnly, false, this); } /** * <div class='en'> * @description * <pre> * Get service blocking information registered to the arrangement based on the service blocking sequence number. * However, extended information of service restrictions is provided only with attribute method (EAV) information. * </pre> * * @seealso {@link #getListArrServiceBlockingByEav(String, String, Boolean)} : Get a list of service blocking information registered to the arrangement with specific service blocking kind code * </div> * * * * <div class='ko'> * @description * <pre> * 서비스제한 일련번호를 기준으로 계약에 등록된 서비스제한 정보를 조회한다. * 단, 서비스제한의 확장정보는 속성방식(EAV) 정보만 조회함 * </pre> * * @seealso {@link #getListArrServiceBlockingByEav(String, String, Boolean)}
TGT:
Inquire service blocking information registered to the arrangement based on the service blocking sequence number.
PRED:
Inquire service blocking information registered to the arrangement based on the service blocking sequence number.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<? extends IOmmObject> getListDataForConsistency(Integer pgNbr, Integer pgCnt) throws BizApplicationException { int pageOffSet = PaginationCoreUtils.getPgOffset(pgNbr, pgCnt); return _getDstbCnstncySvScrnMDso().selectListForConsistency(pageOffSet, pgCnt); }
TGT:
Validate Query for Distribution Validation
PRED:
Validate Query for Distribution Validation
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaKrRoadAddrOut getKrRoadAddr(String addrId) throws BizApplicationException { CaCmKrRoadAddrMIO cmKrRoadAddrMIO = _getCaCmKrRoadAddrMDso().select(CaAddrHrarcyEnum.KOREA_ROAD_NAME_ADDRESS_CODE.getValue(), addrId); return _getKrRoadAddrOut(cmKrRoadAddrMIO); }
TGT:
It inquiries the Korea Road address.
PRED:
It inquiries the Korea Road address.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getDescription() { return desc; }
TGT:
Query parent class name
PRED:
Query parent class name
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public int delete(CaArArrArrRelPdRuleMIO arArrArrRelPdRuleMIO) { int cnt = _getArArrArrRelPdRuleM().delete(arArrArrRelPdRuleMIO); _getArDataCacheManager().clearInstanceCache(DataCacheCoreConfig.ARR_ARR_REL_PD_RULE_CACHE, null); return cnt; }
TGT:
It removes document information.
PRED:
Delete all occurrences of the given substring.
test 샘플별 bleu-4:  15.62
========================================================================================================================
SRC:
public boolean checkCode(CaCdNbrInfoIO in, String cd) throws BizApplicationException { String xtnCdClassNm = in.getXtnCdClassNm(); String lngCd = in.getLngCd(); if (StringUtils.isEmpty(xtnCdClassNm)) { throw new BizApplicationException("AAPCME0006", new Object[] { "@xtnCdClassNm" }); } // 해당 클래스의 빈명 추출 해야 된다. CaCbpClassIO cbpClass = _getCbpClass().getClassInfo(xtnCdClassNm); String beanName = cbpClass.getBeanNm(); if(logger.isDebugEnabled()) { logger.debug("lyj beanName : {}", beanName); } if(!CCM01.CHAR_AT.equals(beanName)) { xtnCdClassNm = beanName; } if (StringUtils.isEmpty(lngCd)) { lngCd = _getCaCmnContext().getLanguageCode(); } String cdNbr = in.getCdNbr(); String instCd = in.getInstCd(); if(StringUtils.isEmpty(in.getInstCd())) { instCd = _getCaCmnContext().getInstCode(); } // Get the login user's language code name Map<String, Object> supplInfoVal = new HashMap<String, Object>(); supplInfoVal.put(CaInstParamEnum.LANGUAGE_CODE.getValue(), lngCd); supplInfoVal.put(CaInstParamEnum.INSTITUTION_CODE.getValue(), instCd); supplInfoVal.put(CCM03.CD, cd); XtnCdCore xtdCd = (XtnCdCore) CbbApplicationContext.getBean(xtnCdClassNm); return xtdCd.checkCode(cdNbr, supplInfoVal); }
TGT:
It check code number & code value. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter
PRED:
It check code number & code value by cdDtlIO DTO. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter.
test 샘플별 bleu-4:  79.75
========================================================================================================================
SRC:
public void saveSubInfo(IValueObject subInfo, String txDt, Integer txSeqNbr, ArrRealImpl arrRealImpl) throws BizApplicationException { // null check if(subInfo == null){ throw new BizApplicationException("AAPCME0006", new Object[] {_getNewSubInfo(arrRealImpl.getSubInfoKnd()).getClass().getSimpleName()}); } // 1. 보조명세 종류 조회 ArrSubInfoKndEnum subInfoKnd = arrRealImpl.getSubInfoKnd(); // 2. 계약에 저장된 보조명세 캐시 조회결과에 따라 insert/update 판단 IValueObject subInfoCache = getSubInfoCache(arrRealImpl); if (subInfoCache == null) { // DBIO VO new instance subInfoCache = _getNewSubInfoSqlIO(subInfoKnd); subInfoCache.set("arrId", arrRealImpl.getArrId()); // 빈 이력 생성 --> undo 시 확장속성 저장 이전으로 속성값을 원복시키기 위함 _saveSubInfoHst(arrRealImpl, subInfoKnd, subInfoCache, txDt, txSeqNbr); // 입력된 I/F VO를 DBIO VO로 convert DtoUtils.setSubInfoIO(subInfo, subInfoCache); // insert _insertSubInfo(subInfoKnd, subInfoCache); // save cache arrRealImpl.saveSubInfoCache(XtnTableEnum.AR_ARR_M.getValue(), subInfoCache); } else { // 속성값 변
TGT:
Save an asset thing subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public void getLogSeqNbr(CmnJrnzArea cmnJrnzArea, String chnlCd) throws BizApplicationException { logger.debug("<AC-Core> AcctgJrnlCmnCoreCustomImpl _getLogSeqNbr CmnJrnzArea logSeqNbr : {}", cmnJrnzArea.getLogSeqNbr()); //20210121 CmnJrnzArea의 로그일련번호가 이미 외부에서 채번된 상태이면 채번하지 않음. if(cmnJrnzArea.getLogSeqNbr()!=null && cmnJrnzArea.getLogSeqNbr().compareTo(BigDecimal.ZERO)!=0) { return; } String logSeqNbr = null; // 로그일련번호 셋팅 if(!_getCmnContextCore().isChannelAtm() && !_getCmnContextCore().isChannelTellerWindow()) { // if (!ChannelEnum.CD_ATM.getValue().equals(chnlCd) && // !ChannelEnum.TELLER_WINDOW.getValue().equals(chnlCd)) { //Double d = Math.random() * Double.parseDouble("999999999999999") + 1; Double d = new SecureRandom().nextDouble()*Double.parseDouble("999999999999999") + 1; logSeqNbr = String.valueOf(d.longValue()); } else { // 로그일련번호 채번 logSeqNbr = _getNbrgCore().getNumbering(NumberingCoreEnum.LOG_SEQUENCE_NUMBER.getValue()); //log sequence number } cmnJrnzArea.setLogSeqNbr(new BigDecimal(logSeqNbr)); if(logger.isDebugEnabled()){ logger.debug("## AcctgJrnlCmnCoreCustomImpl > logSeq
TGT:
This method provides the ability to numbering log serial numbers for AC_ACCTG_L Table (accounting log).
PRED:
This method creates general ledger log sequence number. It depends on the requirements of the site, the log sequence number numbering method of the General ledger may be applied differently.
test 샘플별 bleu-4:  6.31
========================================================================================================================
SRC:
public String getRoleIdByName(String instCd, String roleNm) throws BizApplicationException { RoleIO param = new RoleIO(); param.setInstCd(instCd); param.setRoleNm(roleNm); param = this.getRole(param); if(param!=null) return param.getRoleId(); else return null; }
TGT:
It inquires role id by name
PRED:
It inquires role id by name
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getSectionEndDt() { return super.getSctnEndDt(); }
TGT:
This method inquires section end date of balance
PRED:
This method inquires section end date of product
test 샘플별 bleu-4:  86.33
========================================================================================================================
SRC:
static boolean isValid(String value) { for (StsEnum item : StsEnum.values()) { if (value.equals(item.getValue())) { return "99".equalsIgnoreCase(value) ? false : true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveMapSubInfo(CustTxImpl custTxImpl, Map<String, String> subInfoMap) throws BizApplicationException { // 0. null check if (subInfoMap == null || subInfoMap.isEmpty()) { return; } // 1. 보조명세 캐시 조회결과에 따라 insert/update 판단 AtCustTxSIO subInfoIO = getSubInfoCache(custTxImpl); if (subInfoIO == null) { // DBIO VO new instance subInfoIO = new AtCustTxSIO(); subInfoIO.setCustId(custTxImpl.getCustId()); subInfoIO.setTxDt(custTxImpl.getCustTxDt()); subInfoIO.setTxSeqNbr(custTxImpl.getCustTxSeqNbr()); // 입력된 Map을 DBIO VO에 반영 DtoUtils.setSubInfoIO(subInfoMap, subInfoIO); // insert _getAtCustTxSDso().insert(subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(subInfoMap, subInfoIO)) { return; } // 입력된 Map을 DBIO VO에 반영 DtoUtils.setSubInfoIO(subInfoMap, subInfoIO); // update _getAtCustTxSDso().update(subInfoIO); } // 2. 캐시 저장 custTxImpl.setSubInfoCache(subInfoIO); }
TGT:
Save the appraisal request subsidiary information using map.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  6.11
========================================================================================================================
SRC:
public void setTimeoutScnd( java.lang.Integer timeoutScnd ) { isSet_timeoutScnd = true; this.timeoutScnd = timeoutScnd; }
TGT:
Set timeout second.
PRED:
Set timeout second.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrRelStaffInfoOut> getListArrStaffRelation(String arrStaffRelCd, String staffId, String baseDt) throws BizApplicationException { return _getArrStaffRelBiz().getListArrStaffRelation(arrStaffRelCd, staffId, baseDt, this); }
TGT:
Inquire list of arrangement/staff relation information.
PRED:
Inquire list of arrangement/staff relation information.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<TaxRtIO> getListTaxRate(String isoNatCd, String taxRtCd, String aplyStartDt) throws BizApplicationException { return _getListTaxRate(isoNatCd, taxRtCd, "", aplyStartDt, ""); }
TGT:
This method provide the tax rate by ISO country code, tax rate code, tax type, start date, and end date.
PRED:
This method provides a list of tax rate information by ISO country code, start/end date.
test 샘플별 bleu-4:  21.59
========================================================================================================================
SRC:
public void modifyCurrencyBillCategory(CaCrncyBillCtgryDtlIO crncyBillCtgryDtlIO) throws BizApplicationException { // Check Input Argument _checkCurrencyBillCategoryInput(crncyBillCtgryDtlIO); if(!_getCurrencyBillCategory(crncyBillCtgryDtlIO)) { // No record found throw new BizApplicationException("AAPACE3018", null); } if(_getAcCrncyBillCtgryMDso().update(_setAcCrncyBillCtgryCdIO(crncyBillCtgryDtlIO)) == 0) { // Failed to update throw new BizApplicationException("AAPACE1001", null); } }
TGT:
Modify a denomination This method is for modifying a new domination. If the value entered by the service not exists, the institution code(instCd) is set institution code in CmnContext
PRED:
Modify a denomination Functionalities This method is used to change a new domination. If the value entered by the service not exists, the institution code(instCd) is set institution code in CmnContext
test 샘플별 bleu-4:  76.31
========================================================================================================================
SRC:
public List<ArrAtrbtChngHst> getAttributeChangeHistory(ArrTxCore arrTx, boolean isEavOnly, ArrRealCoreImpl arrReal) throws BizApplicationException { if(arrTx==null){ throw new BizApplicationException("AAPSVE0012", new Object[] {"@arrTx"}); } return _getArrBasicBiz().getAttributeChangeHistory(null,arrTx,isEavOnly,arrReal); }
TGT:
Inquire arrangement attribute change history of the arrangement itself and extended attribute by specified transaction.
PRED:
Inquire arrangement attribute change history of the arrangement master itself and extended attribute.
test 샘플별 bleu-4:  60.0
========================================================================================================================
SRC:
public Arr getArr(String acctNbr, Integer nthNbr) throws BizApplicationException { logger.debug("## <SHW> getArr(String, Integer executed!!"); ArrReal arrReal = (ArrReal) super.getArrRealCoreByAcctNbr(acctNbr, nthNbr); arrReal = _getArrRealCommon(arrReal, acctNbr); return (Arr)_checkArrObjectByKind(arrReal, ArrKndEnum.NORMAL); }
TGT:
Inquire customer account arrangement using arrangement id (internal use) or business key like account number, application number , mobile number so on..
PRED:
This method inquires a arrangement object using the arrangement ID(arrId) of the transaction.
test 샘플별 bleu-4:  5.68
========================================================================================================================
SRC:
public List<? extends IOmmObject> getListDataForConsistency(Integer pgNbr, Integer pgCnt) throws BizApplicationException { int pageOffSet = PaginationCoreUtils.getPgOffset(pgNbr, pgCnt); return _getDstbCnstncySvInstSrvcMDso().selectListForConsistency(pageOffSet, pgCnt); }
TGT:
Validate Query for Distribution Validation
PRED:
Validate Query for Distribution Validation
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value) throws BizApplicationException { if(!StringCoreUtils.isEmpty(value)) { for (PushDtlScrnDscdEnum item : PushDtlScrnDscdEnum.values()) { if (value.equals(item.getValue())) { return true; } } return false; } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value){ for (XtnTableEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public int getTxSeqNbr() { return txSeqNbr; }
TGT:
It takes the transaction sequence number for each transaction date.
PRED:
This method gets the sequence number of transaction about specific arrangement. - It gets the sequence number of transaction no transaction date about one arrangement in Core. - This function can be customized in site.
test 샘플별 bleu-4:  5.61
========================================================================================================================
SRC:
public ArrActvtyDlvry getArrActivityDelivery(Integer arrActvtySeqNbr, ArrReal arrReal) throws BizApplicationException{ return (ArrActvtyDlvry) super.getArrActivityCore(ArrActvtyTpEnum.DELIVERY.getValue(), arrActvtySeqNbr, (ArrRealCore)arrReal); }
TGT:
Inquire arrangement delivery activity by activity sequence number.
PRED:
Inquire arrangement delivery activity by activity sequence number.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArrReal> getListArrRealByArrStsList(String custId, List<ArrStsEnum> arrStsEnumList, String arrCustRelCd, String bizDscd,String pdTpCd, String pdTmpltCd, String pdCd, boolean hasVrtnArr) throws BizApplicationException { return _getArrCustRelQryBizImpl().getListArrRealByArrStsList(custId, arrStsEnumList, arrCustRelCd, bizDscd, pdTpCd, pdTmpltCd, pdCd, 0, 0, hasVrtnArr); }
TGT:
Inquire a list of arrangements of specific product currently in specific status lise related to customer with specific arrangement-customer relation type.
PRED:
Inquire a list of arrangements of specific product currently in specific status list related to customer with specific arrangement-customer relation type.
test 샘플별 bleu-4:  87.25
========================================================================================================================
SRC:
public int getProgressStatusTotalCount(String instCd, String stlmntBaseDt, String acctgDscd) throws BizApplicationException { _checkInputData(instCd, "instCd"); _checkInputData(stlmntBaseDt, "stlmntBaseDt"); _checkInputData(acctgDscd, "acctgDscd"); return _getAcStlmntPrgrsStsMDso().selectTotalCount(instCd, stlmntBaseDt, acctgDscd); }
TGT:
It inquires the total count of settlement progress.
PRED:
It inquires the total count of settlement progress.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean checkRoleAthrtyAplyRng( String staffId, String roleAthrtyAplyRngTpCd ) throws BizApplicationException { // 2020.08.07 LINE 프로젝트 성능 개선요청 반영 // 역할 테이블 JOIN하여 조회하는 것 대신에 한번에 조회하여 반영함 // 프로젝트에서 Customizing 가능하도록 코어에서 사이트에서 기능으로 이관처리함 return CCM01.YES.equals(_getCmRoleMDso().selectExistStaffRoleByAthrityAplyRngTpCd(_getCmnContext().getInstCode(), _getCmnContext().getDeptId(), staffId, roleAthrtyAplyRngTpCd)); }
TGT:
It checks if the staff has a role that matches the role authority range.
PRED:
It checks if there is a staff role with the applicable apply condition.
test 샘플별 bleu-4:  19.58
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(ScrtyIntImpl scrtyInt){ Map<String, String> subInfoMap = new HashMap<String, String>(); // 1. 설정에 저장된 보조명세 캐시 조회 AsScrtyIntSIO subInfo = getSubInfoCache(scrtyInt); // 2. 설정에 저장된 보조명세 캐시가 null인 경우, 빈 Map 리턴 if (subInfo == null) { return subInfoMap; } // 3. 설정에 저장된 보조원장 캐시를 Map으로 convert for (Entry<String, Object> entry : subInfo.getFieldValues().entrySet()) { if(ScrtyIntSubInfo.FIELDS.get(entry.getKey()) == null) { continue; } // Casting 시 Null 방지 if (entry.getValue() != null) { subInfoMap.put(entry.getKey(), String.valueOf(entry.getValue())); } } return subInfoMap; }
TGT:
Inquire all subsidiary information of the appraisal as a map.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  18.85
========================================================================================================================
SRC:
public String getSubInfo(ActorCore actorCore, String xtnAtrbtNm) throws BizApplicationException { return _getActorSubInfoBiz().getSubInfo(xtnAtrbtNm, (ActorImpl) actorCore); }
TGT:
Inquire a specific subsidiary information of the appraisal.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  67.87
========================================================================================================================
SRC:
static boolean isValid(String value){ for (CaDstbWayCdEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CashSndRcvMgmtSvcCashSndRcvIn clone(){ try{ CashSndRcvMgmtSvcCashSndRcvIn object= (CashSndRcvMgmtSvcCashSndRcvIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public BigDecimal getTaxRate(String isoNatCd, TaxRateEnum taxRtEnum, TaxTypeEnum taxTpEnum, String aplyStartDt) throws BizApplicationException { return getTaxRate(isoNatCd, taxRtEnum.getValue(), taxTpEnum.getValue(), aplyStartDt); }
TGT:
This method provides a list of tax rate information by ISO country code, tax rate code, and start date.
PRED:
This method provide the tax rate by ISO country code, tax rate code, tax type, and start date.
test 샘플별 bleu-4:  47.22
========================================================================================================================
SRC:
public List<? extends IOmmObject> getListDataForConsistency(Integer pgNbr, Integer pgCnt) throws BizApplicationException { int pageOffSet = PaginationCoreUtils.getPgOffset(pgNbr, pgCnt); return _getDstbCnstncySvInstSrvcPrflDDso().selectListForConsistency(pageOffSet, pgCnt); }
TGT:
Validate Query for Distribution Validation
PRED:
Validate Query for Distribution Validation
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, AprslCore aprslCore) throws BizApplicationException { _getAprslSubInfoBiz().saveSubInfo(xtnAtrbtNm, xtnAtrbtCntnt, (AprslImpl) aprslCore); }
TGT:
Save an asset subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public CaCoaMgmtSvcGetCoaListTreeOut clone(){ try{ CaCoaMgmtSvcGetCoaListTreeOut object= (CaCoaMgmtSvcGetCoaListTreeOut)super.clone(); if ( this.children== null ) object.children = null; else{ java.util.List<bankware.corebanking.configurationadmin.accounting.service.dto.CaCoaMgmtSvcGetCoaOut> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.accounting.service.dto.CaCoaMgmtSvcGetCoaOut>(children.size()); for( bankware.corebanking.configurationadmin.accounting.service.dto.CaCoaMgmtSvcGetCoaOut item : children ){ clonedList.add( (bankware.corebanking.configurationadmin.accounting.service.dto.CaCoaMgmtSvcGetCoaOut)item.clone()); } object.children = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CustPswdSvcAllChngIn clone(){ try{ CustPswdSvcAllChngIn object= (CustPswdSvcAllChngIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isChannelExternalNetwork(String chnlDscd) throws BizApplicationException { return ChannelEnum.EXTERNAL_NETWORK.getValue().equals(chnlDscd) ? true : false; }
TGT:
Inquiry whether it is a channel external
PRED:
It checks external channel.
test 샘플별 bleu-4:  16.97
========================================================================================================================
SRC:
public boolean isChannelArs() throws BizApplicationException { return ChannelEnum.PHONE_BANKING_ARS.getValue().equals(this.getChannelDscd()) ? true : false; }
TGT:
Inquiry whether it is a channel phone banking/ARS
PRED:
It checks phone banking/ARS channel.
test 샘플별 bleu-4:  19.72
========================================================================================================================
SRC:
public void registerBlckngTrgtSrvc(CaArrExtrnlIdSrvcIO arrExtrnlIdSrvcIO) throws BizApplicationException { CaArArrExtrnlIdSrvcRIO arArrExtrnlIdSrvcRIO = new CaArArrExtrnlIdSrvcRIO(); arArrExtrnlIdSrvcRIO.setInstCd(arrExtrnlIdSrvcIO.getInstCd()); arArrExtrnlIdSrvcRIO.setArrExtrnlIdNbrTpCd(arrExtrnlIdSrvcIO.getArrExtrnlIdNbrTpCd()); arArrExtrnlIdSrvcRIO.setArrSrvcTpCd(arrExtrnlIdSrvcIO.getArrSrvcTpCd()); _getCaCmnContext().setHeaderColumn(arArrExtrnlIdSrvcRIO); CaArArrExtrnlIdSrvcRIO arArrExtrnlIdSrvcRVO = this._getArArrExtrnlIdSrvcRDso().select(arArrExtrnlIdSrvcRIO); arArrExtrnlIdSrvcRIO.setActvStsCd(CaActiveStatusEnum.ACTIVE.getValue()); int result = 0; if (arArrExtrnlIdSrvcRVO == null) { result = this._getArArrExtrnlIdSrvcRDso().insert(arArrExtrnlIdSrvcRIO); } else { result = this._getArArrExtrnlIdSrvcRDso().update(arArrExtrnlIdSrvcRIO); } if (result == 0) { throw new BizApplicationException("AAPACE1002", null); // Failed to register. } }
TGT:
Register the information of relation between arrangement external identification number and service.
PRED:
Register the information of relation between arrangement external identification number and service. (Update activity status to "Active")
test 샘플별 bleu-4:  69.53
========================================================================================================================
SRC:
public int saveExchangeRateInfoActive(ExRtIO in) throws BizApplicationException { _checkNullInputArgument(in, CCM01.SAVE); int result = 0; CmExRtDIO daoIn = _setExRtDIO(in); daoIn.setExRgstrnStsCd(ExchngRegtStatusEnum.ACTIVE.getValue()); CmExRtDIO cmExRtDIO = new CmExRtDIO(); cmExRtDIO.setInstCd(in.getInstCd()); cmExRtDIO.setCrncyCd(in.getCrncyCd()); cmExRtDIO.setBaseDt(in.getBaseDt()); cmExRtDIO.setExRtAplyNth(in.getExRtAplyNth()); cmExRtDIO.setExRgstrnStsCd(ExchngRegtStatusEnum.REGISTER.getValue()); cmExRtDIO = _getCmExRtDDso().select(cmExRtDIO); if(cmExRtDIO == null) { /// 환율정보가 미등록되었습니다. throw new BizApplicationException("AAPARE0445", new Object[] {}); } result = _getCmExRtDDso().updateActive(daoIn); return result; }
TGT:
It saves the exchange rate information. Make the exchange registration status code '02' active.
PRED:
It saves the exchange rate information currently in "Active" status.
test 샘플별 bleu-4:  30.95
========================================================================================================================
SRC:
public java.lang.String getUnmaskId(){ return unmaskId; }
TGT:
Unmask Id inquiry from standard message
PRED:
Unmask Id inquiry from standard message
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public BillCtgryCashMgmtSvcGetBillCtgryCashOut clone(){ try{ BillCtgryCashMgmtSvcGetBillCtgryCashOut object= (BillCtgryCashMgmtSvcGetBillCtgryCashOut)super.clone(); object.lastChngTmstmp = (bxm.omm.format.wrapper.DateFormattedWrapper)this.lastChngTmstmp.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> subInfoMap, String txDt, Integer txSeqNbr, InsrncImpl insrncImpl) throws BizApplicationException { // 0. 저장할 정보가 입력되지 않으면 return if(subInfoMap==null || subInfoMap.isEmpty()) { return; } // 1. 표준속성에 등록된 검증규칙을 통해 입력받은 확장속성내용 검증 _getAtrbtChk().checkStandardAttributeMap(subInfoMap); // 2. 보조원장 캐시 조회결과에 따라 insert/update 판단 AsInsrncSIO subInfoCache = getSubInfoCache(insrncImpl); if(subInfoCache == null){ // DBIO VO new instance subInfoCache = new AsInsrncSIO(); subInfoCache.setInsrncId(insrncImpl.getInsrncBasicCache().getInsrncId()); // PK setting // 빈 이력 생성 --> undo 시 확장속성 저장 이전으로 속성값을 원복시키기 위함 _saveSubInfoHst(insrncImpl, subInfoCache, txDt, txSeqNbr); // 입력된 확장정보map을 DBIO VO에 setting DtoUtils.setSubInfo
TGT:
Save the asset thing subsidiary information using map.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  6.11
========================================================================================================================
SRC:
public boolean isChannelArs(String chnlDscd) throws BizApplicationException { return ChannelEnum.PHONE_BANKING_ARS.getValue().equals(chnlDscd) ? true : false; }
TGT:
Inquiry whether it is a channel phone banking/ARS
PRED:
It checks phone banking/ARS channel.
test 샘플별 bleu-4:  19.72
========================================================================================================================
SRC:
public List<ArrRelDeptInfoOut> getListArrDeptRelation(String arrDeptRelCd, String deptId, String baseDt) throws BizApplicationException { return _getArrDeptRelBiz().getListArrDeptRelation(arrDeptRelCd, deptId, baseDt, this); }
TGT:
Inquire list of arrangement/department relation information.
PRED:
Inquire list of arrangement/department relation information.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
protected String getMthrArrId() { return this.mthrArrId; }
TGT:
This method inquires a mother arrangement identification of the transaction.
PRED:
This method inquires a mother arrangement identification of the transaction.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean checkCode(CdNbrInfoIO in, String cd) throws BizApplicationException { CmCdDIO cmCdDIO = new CmCdDIO(); cmCdDIO.setCdNbr(in.getCdNbr()); cmCdDIO.setCdNm(in.getCdNm()); cmCdDIO.setCd(cd); cmCdDIO.setActvStsCd(ActiveStatusEnum.ACTIVE.getValue()); List<CmCdDIO> cdDtlList = _getCmCdDDso().selectListByCondition(cmCdDIO); if(cdDtlList == null || cdDtlList.isEmpty()) { return false; } return true; }
TGT:
It check code number & code value. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter
PRED:
It check code number & code value by cdDtlIO DTO. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter.
test 샘플별 bleu-4:  79.75
========================================================================================================================
SRC:
static boolean isValid(String value){ for (ArrCndStsEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Integer getNthNbr() { return nthNbr; }
TGT:
Inquire nth number of arrangement. Nth number is a sequence number to identify each arrangement when multiple arrangements use same account number for business purpose. This number is also given when the account number is given if it is necessary.
PRED:
Inquire nth number of arrangement. Nth number is a sequence number to identify each arrangement when multiple arrangements use same account number for business purpose. This number is also given when the account number is given if it is necessary.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveMapSubInfo(PrtnrCore prtnrCore, Map<String, String> xtnInfoMap) throws BizApplicationException { _getPrtnrSubInfoBiz().saveMapSubInfo(xtnInfoMap, (PrtnrImpl) prtnrCore); }
TGT:
This method save settlement subsidiary detail information using subInfoMap.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public boolean isIteration() { return isIter; }
TGT:
Check whether iteration
PRED:
Check whether iteration
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaDocBsicIO getDocBasic() throws BizApplicationException { return docBsicIO; }
TGT:
It inquiries a basic information of document.
PRED:
It inquiries document basic information.
test 샘플별 bleu-4:  25.88
========================================================================================================================
SRC:
public static boolean isValid(String value){ for (AcctgItmEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void restoreCustLoginInfo() throws BizApplicationException { // restore data & register information change history _getCustLoinInfoBiz().restoreCustLoginInformation(super.getCustBasicInfo(), getActor().getListActorInfoMgmtItem()); }
TGT:
It restores all terminated customer login information.
PRED:
It modifies the customer's login information. It terminates the customer login information on transaction date.
test 샘플별 bleu-4:  13.61
========================================================================================================================
SRC:
public String getDeptId(){ return deptId; }
TGT:
Department number inquiry from standard message
PRED:
Inquire department identification from basic information.
test 샘플별 bleu-4:  22.09
========================================================================================================================
SRC:
public Integer getListArrBasedOnStsHistoryCount( String deptId,ArrDeptRelEnum arrDeptRel, String bizDscd, String pdTpCd,String pdTmpltCd,String pdCd, List<String> arrKndList,List<String> curArrStsList, ArrStsEnum arrSts, String inqryStartDt, String inqryEndDt, boolean hasVrtnArr) throws BizApplicationException { return _getArrDeptRelImpl().getArrListBasedOnArrStatusHistoryCount(deptId, bizDscd, pdTpCd, pdTmpltCd, pdCd, arrDeptRel, arrKndList,curArrStsList, arrSts, inqryStartDt, inqryEndDt,hasVrtnArr ); }
TGT:
Inquire total count of specific department own (as accounting department) arrangements of specific product hierarchy whose status changed into specific status within inquiry period and currently in other specific status. (Paging) Inquire modification arrangement of inquired arrangement if hasVrtnArr is true.
PRED:
Inquire total count of specific department own (as accounting department) arrangements of specific product hierarchy whose ] status changed into specific status within inquiry period and currently in another specific status. Inquire modification arrangement of inquired arrangement if hasVrtnArr is true.
test 샘플별 bleu-4:  83.98
========================================================================================================================
SRC:
public List<SrvcPrflGetInstSrvcDtlIO> getListInstServiceByProfile(SrvcPrflGetInstSrvcIO in) throws BizApplicationException { List<SrvcPrflGetInstSrvcDtlIO> out = new ArrayList<SrvcPrflGetInstSrvcDtlIO>(); List<SvSrvcMIO> daoList = _getListInstitutionServiceBasic(in); for( SvSrvcMIO tmpList : daoList ) { SrvcPrflGetInstSrvcDtlIO srvcBsicIO = new SrvcPrflGetInstSrvcDtlIO(); srvcBsicIO.setSrvcCd(tmpList.getSrvcCd()); //서비스코드 srvcBsicIO.setSrvcNm(tmpList.getSrvcNm()); //서비스명 srvcBsicIO.setSrvcAbrvtnNm(tmpList.getSrvcAbrvtnNm()); //서비스약어명 srvcBsicIO.setCmpntCd(tmpList.getCmpntCd()); //컴포넌트코드 srvcBsicIO.setSrvcClassNm(tmpList.getSrvcClassNm()); //서비스클래스명 srvcBsicIO.setSrvcFtrCntnt(tmpList.getSrvcFtrCntnt()); //서비스특성내용 srvcBsicIO.setOprtnNm(tmpList.getOprtnNm()); //오퍼레이션명 srvcBsicIO.setInpDtoNm(tmpList.getInpDtoNm()); //입력DTO명 srvcBsicIO.setOutpDtoNm(tmpList.getOutpDtoNm()); //출�
TGT:
Inquire institute service lists by profile.
PRED:
Inquire institute service lists by profile.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value) throws BizApplicationException { if(!StringCoreUtils.isEmpty( value)) { for (AssetKndCoreEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } throw new BizApplicationException("AAPATE0028", new Object[] {value, "@AssetXtnAtrbtNm"});//({0}) is invalid {1}. } return true; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public static boolean isValid(String value) throws BizApplicationException { if(!StringCoreUtils.isEmpty( value)) { for (AprslThingKndCoreEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } throw new BizApplicationException("AAPATE0028", new Object[] {value, "@AssetXtnAtrbtNm"});//({0}) is invalid {1}. } return true; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Map<String, String> getMapXtnInfo(boolean isEavOnly, ArrRealCoreImpl arrReal) throws BizApplicationException { return _getArrXtnInfoBiz().getMapXtnInfo(isEavOnly, arrReal); }
TGT:
Inquire the actor extended information map. Inquire extended information with normal extended attribute status code.
PRED:
Inquire the actor extended information map. Inquire extended information with normal extended attribute status code.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CashCardIssueSvcOut clone(){ try{ CashCardIssueSvcOut object= (CashCardIssueSvcOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isChannelBatch() throws BizApplicationException { return ChannelEnum.BATCH.getValue().equals(this.getChannelDscd()) ? true : false; }
TGT:
It checks batch channel.
PRED:
Inquiry whether it is a channel batch
test 샘플별 bleu-4:  18.58
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(AprslImpl aprsl){ Map<String, String> subInfoMap = new HashMap<String, String>(); // 1. 자산에 저장된 보조명세 캐시 조회 IValueObject subInfo = getSubInfoCache(aprsl); // 2. 자산에 저장된 보조명세 캐시가 null인 경우, 빈 Map 리턴 if (subInfo == null) { return subInfoMap; } // 3. 자산에 저장된 보조원장 캐시를 Map으로 convert for (Entry<String, Object> entry : subInfo.getFieldValues().entrySet()) { if(!_isSubInfoContainsField(aprsl.getAprslSubInfoKnd(), entry.getKey())) { continue; } // Casting 시 Null 방지 if (entry.getValue() != null) { subInfoMap.put(entry.getKey(), String.valueOf(entry.getValue())); } } return subInfoMap; }
TGT:
Inquire all subsidiary information of the insurance as a map.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  18.85
========================================================================================================================
SRC:
public String getParentClassName() { return this.parntClassNm; }
TGT:
Query parent class name
PRED:
Query parent class name.
test 샘플별 bleu-4:  66.87
========================================================================================================================
SRC:
public CustCheckPwdOut checkPassword(CustLoinInfoIO custLoinInfoIO, String pswd, String loinTpCd) throws BizApplicationException { CustCheckPwdOut custCheckPwdOut = new CustCheckPwdOut(); if (custLoinInfoIO == null) { return custCheckPwdOut; } if (custLoinInfoIO.getEncrptnPswd() == null) { custCheckPwdOut.setPswdChkRsltTpCd(SecurityCheckRsltTpEnum.FAIL_NO_SCRTY_DATA.getValue()); } else if (pswd.equals(custLoinInfoIO.getEncrptnPswd())) { custCheckPwdOut.setPswdChkRsltTpCd(SecurityCheckRsltTpEnum.SUCCESS.getValue()); } else { custCheckPwdOut.setPswdChkRsltTpCd(SecurityCheckRsltTpEnum.FAIL_DIFF_SCRTY_DATA.getValue()); } return custCheckPwdOut; }
TGT:
It checks if the input password equals the registered password of the main login information.
PRED:
It checks if the input password equals the registered password of the main login information.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaNoticeMsgCdMgmtIO getInfo(String noticeMsgCd) throws BizApplicationException { if(StringUtils.isEmpty(noticeMsgCd)){ throw new BizApplicationException("AAPCME0006", new String[] {"@noticeMsgCd"}); } // get caching data CaNoticeMsgCdMgmtIO noticeMsgCdIO = new CaNoticeMsgCdMgmtIO(); // query data CaAtNoticeMsgMIO rgstrnAtNoticeMsgCdIO = _getAtNoticeMsgMDso().select(noticeMsgCd, null); if(rgstrnAtNoticeMsgCdIO != null) { noticeMsgCdIO.setNoticeGoalTpCd(rgstrnAtNoticeMsgCdIO.getNoticeGoalTpCd()); noticeMsgCdIO.setNoticeMsgCd(rgstrnAtNoticeMsgCdIO.getNoticeMsgCd()); noticeMsgCdIO.setNoticeMsgNm(rgstrnAtNoticeMsgCdIO.getNoticeMsgNm()); noticeMsgCdIO.setNoticeWayTpCd(rgstrnAtNoticeMsgCdIO.getNoticeWayTpCd()); noticeMsgCdIO.setDelYn(rgstrnAtNoticeMsgCdIO.getDelYn()); } return noticeMsgCdIO; }
TGT:
Inquire document-notice relation information.
PRED:
Inquire notice message code information by notice message code and deleted YN.
test 샘플별 bleu-4:  10.39
========================================================================================================================
SRC:
public void validate() throws BizApplicationException { if (!ArrConditionErrorTypeEnum.NoError.equals(isValidCndValue(getRngVal()))){ //This product purchasable time is ({0} ~ {1}) //본상품은의 판매 가능 시간은 ({0} ~ {1}) 입니다 throw new BizApplicationException("AAPARE0279" , new Object[]{getMinVal().setScale(0).toPlainString(),getMaxVal().setScale(0).toPlainString()}); } }
TGT:
Processing rules should be commonly performed according to the rules defined in the service processing rule, based on the representative service type registered to the specific service.
PRED:
It performs common service processing rules defined in the service processing rules and whether the contract-based service is available, based on the representative service type registered to the specific service. Whether contract services are available verifies: 1) Verification of service restriction based on product information of contract. 2) Verification of restriction related to the service set in the contract such as pledge setting. 3) Perform verification rules that should be performed in common as the requirement that dead customers should not become financial transactions.
test 샘플별 bleu-4:  19.66
========================================================================================================================
SRC:
public String getDescription() { return description; }
TGT:
Query the description
PRED:
Query parent class name
test 샘플별 bleu-4:  35.93
========================================================================================================================
SRC:
public void validate(ArrReal arrReal, Map<ArrVldtnRequiredValEnum, Object> vldtnRequiredValMap) throws BizApplicationException { super.validate((ArrRealCore) arrReal, _convertValMap(vldtnRequiredValMap)); }
TGT:
It performs common service processing rules defined in the service processing rules and whether the contract-based service is available, based on the service type input. Whether contract services are available verifies: 1) Verification of service restriction based on product information of contract. 2) Verification of restriction related to the service set in the contract such as pledge setting. 3) Perform verification rules that should be performed in common as the requirement that dead customers should not become financial transactions.
PRED:
It performs common service processing rules defined in the service processing rules and whether the contract-based service is available, based on the representative service type registered to the specific service. Whether contract services are available verifies: 1) Verification of service restriction based on product information of contract. 2) Verification of restriction related to the service set in the contract such as pledge setting. 3) Perform verification rules that should be performed in common as the requirement that dead customers should not become financial transactions.
test 샘플별 bleu-4:  89.46
========================================================================================================================
SRC:
public boolean isTableAttributeValid(String xtnTblNm, String xtnAtrbtNm, String xtnAtrbtCntnt, XtnAtrbtVrtnCmpsEnum xtnAtrbtVrtnCmpsEnum, String inputValue) throws BizApplicationException { // 상품과 관련 없는 확장속성변형구성 코드를 검증 한다. return _getAtrbt().isTableAttributeValid(xtnTblNm, xtnAtrbtNm, xtnAtrbtCntnt, xtnAtrbtVrtnCmpsEnum, inputValue); }
TGT:
Validate extend attribute validation.
PRED:
Validate extend attribute validation Not product.
test 샘플별 bleu-4:  41.11
========================================================================================================================
SRC:
public String getInstCd() { return arrTxBsicIO.getInstCd(); }
TGT:
Inquire institution code of arrangement activity.
PRED:
This method inquire institution code.
test 샘플별 bleu-4:  22.35
========================================================================================================================
SRC:
public String getBeforeDateTxYn() throws BizApplicationException { return _getContextHeader().getBfDtTxYn(); }
TGT:
Before date transaction Yn inquiry from standard message
PRED:
Before date transaction Yn inquiry from standard message
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public java.lang.String getCndVal(){ return cndVal; }
TGT:
This method get the arrangement condition value as string. for list type condition, return list code and the other type return the string number applied the scale 2.
PRED:
This method get the arrangement condition value as string. For list type condition, return list code and the other type return the string number applied the scale 2
test 샘플별 bleu-4:  86.96
========================================================================================================================
SRC:
public CaStdAbrvtnMgmtSvcGetStdAbrvtnOut clone(){ try{ CaStdAbrvtnMgmtSvcGetStdAbrvtnOut object= (CaStdAbrvtnMgmtSvcGetStdAbrvtnOut)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getTxHhmmss() throws BizApplicationException { return this.getTxTime(); }
TGT:
Transaction time Inquiry from standard message
PRED:
This method inquires a specific time of the transaction.
test 샘플별 bleu-4:  14.11
========================================================================================================================
SRC:
public String getInsrncXtnInfo(String xtnAtrbtNm) throws BizApplicationException { return _getInsrncXtnInfoBiz().getInsrncXtnInfo(this, xtnAtrbtNm); }
TGT:
Inquire a specific extended information of the insurance.
PRED:
Inquire a specific extended information of the insurance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm,String xtnAtrbtCntnt, ArrTxImpl arrTx) { // 0. 저장하려는 속성값의 유효성 검증(코드관련 속성일 경우 유효한 코드값인지 검증한다.) _getAtrbtChk().checkStandardAttribute(xtnAtrbtNm, xtnAtrbtCntnt); // 1. 거래관련 보조명세 조회(캐시로부터) - DBIO VO IValueObject oldCache = getSubInfoCache(arrTx); // 2. DB 반영 if(oldCache == null) { // 2.1.1 DBIO VO 인스턴스 생성 oldCache = _newSubInfoDBIO(arrTx); // 2.1.2 primary key 조립 _setKey(oldCache,arrTx); // 2.1.3 보조정보(단건)으로부터 DBIO VO값 채우기 DtoUtils.setSubInfoIO(xtnAtrbtNm, xtnAtrbtCntnt, oldCache); // 2.1.4 캐싱된 보조명세 정보가 없으면 최초 저장, 즉 insert _insertSubInfo(arrTx, oldCache); // 2.1.5 캐싱
TGT:
Store one extended attribute of subsidiary information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  81.37
========================================================================================================================
SRC:
public StaffSelfAuthSvcXtnAtrbtIO clone(){ try{ StaffSelfAuthSvcXtnAtrbtIO object= (StaffSelfAuthSvcXtnAtrbtIO)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaStyleSvcGetStyleListOut clone(){ try{ CaStyleSvcGetStyleListOut object= (CaStyleSvcGetStyleListOut)super.clone(); if ( this.tblNm== null ) object.tblNm = null; else{ java.util.List<bankware.corebanking.configurationadmin.style.service.dto.CaStyleSvcStyleIO> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.style.service.dto.CaStyleSvcStyleIO>(tblNm.size()); for( bankware.corebanking.configurationadmin.style.service.dto.CaStyleSvcStyleIO item : tblNm ){ clonedList.add( (bankware.corebanking.configurationadmin.style.service.dto.CaStyleSvcStyleIO)item.clone()); } object.tblNm = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void doServiceAction(ArrangementCoreImpl arrangement,String arrSrvcTpCd,ArrActionRequiredValue arrActionRequiredValue) throws BizApplicationException { if (StringUtils.isEmpty(arrSrvcTpCd)) { arrSrvcTpCd = _getSrvcPrflCore().getInstServiceProfile(SrvcPrflAtrbtCoreEnum.REPRESENTATIVE_ARRANGEMENT_SERVICE_TYPE_CODE.getValue()); } if (StringUtils.isEmpty(arrSrvcTpCd)) { // There is no representative arrangement service type nor arrangement service type input. Please check input value. // 대표계약서비스유형 또는 입력된 계약서비스유형이 없습니다. 입력값을 확인하십시오. throw new BizApplicationException("AAPARE0716", null); } //1.조건처리 this.doConditionAction(arrangement, arrSrvcTpCd,arrActionRequiredValue); //2.확장속성처리 this.doXtnAtrbtAction(arrangement, arrSrvcTpCd, arrActionRequiredValue); arrangement.setIsSrvcActionDone(true); }
TGT:
Perform the condition action related to the specific service type. For example 1 , In case of loan installment disbursement possible condition ,the loan disbursement possible condition class' "doServiceAction" method dose the validation step like 1.investigates disbursed amount, 2.get product condition value whether installment disbursement is allowed, 3. make decision whether the service is permitted or not. The other example, the interest capitalization YN condition class do the action to make a interest capitalization arrangement plan on next planed date when arrangement open
PRED:
Process the special action to process "Service Process Rule" related to representative service type, which is registered to the specific service. For example, the "Open Deposit" service must validate available channel, available age, and subscribe limit count. These process rules are implemented in seperated classes in terms of each product condition. Each process rule class cab be registered to specific service type in Configuration Admin. Service process rule includes "Product Condition Process Rule" and "Extend Attribute Process Rule". Implementation of product condition process rule : - The rules that should be processed in terms of product condition are implemented in arrangement condition class which
test 샘플별 bleu-4:  4.31
========================================================================================================================
SRC:
public static boolean isValid(String value) throws BizApplicationException { if(!StringCoreUtils.isEmpty(value)) { for (CdNbrCoreEnum item : CdNbrCoreEnum.values()) { if (value.equals(item.getValue())) { return true; } } return false; } return false; }
TGT:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
PRED:
It verifies whether the service being executed is a service executed by the execution branch or the terminal.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public DocPrntIO issueTemporaryDoc(Doc doc, DocIssueIn docIssueIn, PrntWayTpEnum prntWayTp, Map<String,Object> refObjectMap) throws BizApplicationException { DocCore docCore = (DocCore)doc; return super.issueTemporaryDoc(docCore, docIssueIn, prntWayTp, refObjectMap); }
TGT:
It creates temporary document and issue temporary document. It doesn't insert issued information, crate only temporary information. It creates issuing document content from document template.
PRED:
It creates temporary document and issue temporary document. It doesn't insert issued information, crate only temporary information. It creates issuing document content from document template.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Pd getPd(String instCd,String arrCrtnDt,String arrCrtnTm, String pdCd) throws BizApplicationException { PdIn pdIn = new PdIn(); pdIn.setInstCd(instCd); // Product Code pdIn.setPdCd(pdCd); // Product Code pdIn.setAplyDt(arrCrtnDt); // Apply Date pdIn.setAplyTm(arrCrtnTm); // Product Code Pd pd = _getPdMngr().getPd(pdIn); if (pd == null || !pd.isAvailable() ) { throw new BizApplicationException("AAPARE0000", new Object[]{instCd+":"+pdCd+":"+arrCrtnDt+":"+arrCrtnTm}); } return pd; }
TGT:
Inquire product of arrangement
PRED:
Methods to create a product object Product information initialization. Use inputed product code, apply date to create a product object and return it if the product does not exist, return null
test 샘플별 bleu-4:  3.9
========================================================================================================================
SRC:
public List<PdCnd> getCndHistory(PdCndHstIn in) throws BizApplicationException { List<PdCnd> out = null; Date aplyStartDt = PdUtil.parseStringToDate(in.getAplyStartDt() + in.getAplyStartTm()); Date aplyEndDt = PdUtil.parseStringToDate(in.getAplyEndDt() + _getAplyTmString(in.getAplyEndTm())); List<PdPdCndMIO> list = null; PdCndHistoryListIn pdCndHistoryListIn = new PdCndHistoryListIn(); pdCndHistoryListIn.setInstitutionId(getInstCd()); pdCndHistoryListIn.setPdCd(pd.getPdCd()); pdCndHistoryListIn.setCndCd(cndCd); pdCndHistoryListIn.setStartDate(aplyStartDt); pdCndHistoryListIn.setEndDate(aplyEndDt); List<PdCndBaseOut> pdCndBaseOutList = _getPdCndCore().getListPdCndHistory(pdCndHistoryListIn); if (!CollectionCoreUtils.isEmpty(pdCndBaseOutList)) { list = new ArrayList<>(); for (PdCndBaseOut pdCndBaseOut : pdCndBaseOutList) { PdPdCndMIO pdPdCndMIO = new PdPdCndMIO(); pdPdCndMIO.setInstCd(pdCndBaseOut.getInstitutionId()); pdPdCndMIO.setCndGrpTmpltCd(pdCndBaseOut.getCndGroupTemplateCd()); pdPdCndMIO.setCndGrpCd(pdCndBaseOut.getCndGroupCd()); pdPdCndMIO.setCndCd(pdCndBaseOut.getCndCd()); pdPdCndMIO.setAplyStartDt(pdCndBaseOut.getApplyStartDate()); pdPdCndMIO.setAplyEndDt(pdCndBaseOut.getApplyEndDate()); pdPdCndMIO.setStsChngDt(Pd
TGT:
This method inquire condition history information.
PRED:
This method inquire condition history information.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ImportGrntAmtWhdrwlSvcIn clone(){ try{ ImportGrntAmtWhdrwlSvcIn object= (ImportGrntAmtWhdrwlSvcIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public PdTemplateQuerySvcGetCndGrpTmpltListTypeOut clone(){ try{ PdTemplateQuerySvcGetCndGrpTmpltListTypeOut object= (PdTemplateQuerySvcGetCndGrpTmpltListTypeOut)super.clone(); if ( this.childCatalogList== null ) object.childCatalogList = null; else{ java.util.List<bankware.corebanking.product.service.dto.PdTemplateQuerySvcGetCndGrpTmpltListTypeOut> clonedList = new java.util.ArrayList<bankware.corebanking.product.service.dto.PdTemplateQuerySvcGetCndGrpTmpltListTypeOut>(childCatalogList.size()); for( bankware.corebanking.product.service.dto.PdTemplateQuerySvcGetCndGrpTmpltListTypeOut item : childCatalogList ){ clonedList.add( (bankware.corebanking.product.service.dto.PdTemplateQuerySvcGetCndGrpTmpltListTypeOut)item.clone()); } object.childCatalogList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<ArArrAssetRXtnInfoDIO> selectList(ArArrAssetRXtnInfoDIO arArrAssetRXtnInfoDIO) { return _getArArrAssetRXtnInfoD().selectList(arArrAssetRXtnInfoDIO); }
TGT:
It gets list of http header properties.
PRED:
It gets list of http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public LnAplyIntRtHstSvcListOut clone(){ try{ LnAplyIntRtHstSvcListOut object= (LnAplyIntRtHstSvcListOut)super.clone(); if ( this.intRtList== null ) object.intRtList = null; else{ java.util.List<bankware.corebanking.loan.query.service.dto.LnArr360IntRt> clonedList = new java.util.ArrayList<bankware.corebanking.loan.query.service.dto.LnArr360IntRt>(intRtList.size()); for( bankware.corebanking.loan.query.service.dto.LnArr360IntRt item : intRtList ){ clonedList.add( (bankware.corebanking.loan.query.service.dto.LnArr360IntRt)item.clone()); } object.intRtList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveMapSubInfo(ActorCore actorCore, Map<String, String> xtnInfoMap) throws BizApplicationException { _getActorSubInfoBiz().saveMapSubInfo(xtnInfoMap, (ActorImpl) actorCore); }
TGT:
Save the asset subsidiary information using map.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  6.11
========================================================================================================================
SRC:
public void saveSubInfo(IValueObject subInfo, AprslImpl aprslImpl, Integer aprslThingSeqNbr) throws BizApplicationException{ // 0. null check if(subInfo == null){ throw new BizApplicationException("AAPCME0006", new Object[] {_getNewSubInfo(aprslImpl.getAprslThingSubInfoKnd(aprslThingSeqNbr)).getClass().getSimpleName()}); } logger.debug("## <AS> saveSubInfo -> subInfo = {} :: ", subInfo.getFieldValues()); // 1. 감정물건보조명세의 종류 조회 AprslThingSubInfoKndEnum subInfoKnd = aprslImpl.getAprslThingSubInfoKnd(aprslThingSeqNbr); // 2. 표준속성에 등록된 검증규칙을 통해 입력받은 확장속성내용 검증 for(Entry<String, Object> entry : subInfo.getFieldValues().entrySet()) { if(entry.getValue() != null) { _getAtrbtChk().checkStandardAttribute(entry.getKey(), String.valueOf(entry.getValue())); } } // 3. 보조원장 캐시 조회결과에 따라 insert/update 판단 IValueObject subInfoCache = getSubInfoCache(aprslImpl, aprslThingSeqNbr); if(subInfoCache == null){ // DBIO VO new instance subInfoCache = _getNewSubInfoSqlIO(subInfoKnd); subInfoCache.set("aprslId", aprslImpl.getAprslBasicCache().getAprslId()); // PK setting subInfoCache
TGT:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Map<String, String> getMapSubInfo(ArrTxCore arrTx){ return _getArrTxSubInfoBiz().getMapSubInfo((ArrTxImpl)arrTx); }
TGT:
Inquire all subsidiary information of the asset thing as a map.
PRED:
Inquire entire extended information of Subsidiary Information(CTI) as MAP type.
test 샘플별 bleu-4:  17.06
========================================================================================================================
SRC:
public int saveDstbTgtMInfo(CaDstbTgtMVO in) throws BizApplicationException{ int result = _getSvDstbTgtMDso().insert(_getDstbTgtReqMIO(in)); return result; }
TGT:
- This method save target server distribution request master information - Functionalities 1. save for target server distribution request master information
PRED:
- This method save distribution target main information - Functionalities 1. save for target server distribution request information 2. sending with result to master server
test 샘플별 bleu-4:  51.75
========================================================================================================================
SRC:
public ArrIntSmltnSvcCndItmListOut clone(){ try{ ArrIntSmltnSvcCndItmListOut object= (ArrIntSmltnSvcCndItmListOut)super.clone(); if ( this.arrStrctrCndList== null ) object.arrStrctrCndList = null; else{ java.util.List<bankware.corebanking.arrangementservice.query.service.dto.ArrCndStrctr> clonedList = new java.util.ArrayList<bankware.corebanking.arrangementservice.query.service.dto.ArrCndStrctr>(arrStrctrCndList.size()); for( bankware.corebanking.arrangementservice.query.service.dto.ArrCndStrctr item : arrStrctrCndList ){ clonedList.add( (bankware.corebanking.arrangementservice.query.service.dto.ArrCndStrctr)item.clone()); } object.arrStrctrCndList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public ArrRelCustInfoOut getArrCustRelation(String arrCustRelCd, String custId, String baseDt, ArrRealCoreImpl arrReal) throws BizApplicationException { if(ArrKndCoreEnum.TEMPORARY.getValue().equals(arrReal.getArrKindCd())){return null;} if( StringCoreUtils.isEmpty(arrCustRelCd)) { throw new BizApplicationException("AAPCME0006", new Object[]{"@arrCustRelCd"}); } if( StringCoreUtils.isEmpty(custId)) { _getArrRelRuleImpl().validateArrRelationPluralPossibleYn(ArrRelKndCoreEnum.CUSTOMER.getValue(), arrCustRelCd, arrReal); custId = null; } String inqBaseDt = baseDt; if( StringCoreUtils.isEmpty(baseDt)) { inqBaseDt = ArrCmnCoreUtil.getRckngDt( _getCmnContextCore() ); } ArArrCustRIO arArrCustRIO = _getArArrCustRDso().selectEffective(arrReal.getInstCd(), arrReal.getArrId(), custId, arrCustRelCd, inqBaseDt); return _buildArrRelInfoOut( arArrCustRIO ); }
TGT:
Inquire available arrangement/customer relation information on specific date.
PRED:
Inquire available arrangement/customer relation information on specific date.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public PreScrningCardPrfrmnc clone(){ try{ PreScrningCardPrfrmnc object= (PreScrningCardPrfrmnc)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaDocRgstSvcBsicModifyIn clone(){ try{ CaDocRgstSvcBsicModifyIn object= (CaDocRgstSvcBsicModifyIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void setTxAblStartHms( java.lang.String txAblStartHms ) { isSet_txAblStartHms = true; this.txAblStartHms = txAblStartHms; }
TGT:
Set transaction able start hms.
PRED:
Set transaction able start hms.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaExtrnlIntrfcMsgAuthInfoMgmtSvcGetIn clone(){ try{ CaExtrnlIntrfcMsgAuthInfoMgmtSvcGetIn object= (CaExtrnlIntrfcMsgAuthInfoMgmtSvcGetIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void validate(String arrSrvcCd,ArrRealCore arrReal, CustCore cust, Map<String, Object> vldtnRequiredValMap) throws BizApplicationException { if (!_getCmnContext().isSelfChannel()) return; ArrMbrshp arrMbrshp = _getArrCustMngr().getMembershipArr(cust.getCustId()); if (arrMbrshp == null || !arrMbrshp.isActive()) { //You are not authenticated with this bank or authentication is under processing. Please, Apply for authentication first. //인증에 대한 심사가 진행중이거나, 인증을 받지 않은 회원입니다. 먼저 인증을 받으시기 바랍니다. throw new BizApplicationException("AAPARE0404", new Object[]{}); } ArrCnd arrCnd = arrMbrshp.getArrCnd(PdCndEnum.INTERNET_CHANNEL_USE_YN.getValue()); if (_getCmnContext().isChannelInternet() && ( arrCnd == null || CCM01.NO.equals(arrCnd.getCndVal()))) { //Internet web service is not registered for you //인터넷 서비스 등록이 되어 있지 않습니다 throw new BizApplicationException("AAPARE0408", new Object[]{}); } arrCnd = arrMbrshp.getArrCnd(PdCndEnum.MOBILE_APP_CHANNEL_USE_YN.getValue()); if (_getCmnContext().isChannelMobile() && ( arrCnd == null || CCM01.NO.equals(arrCnd.getCndVal
TGT:
Check if the issued media is available. Throw error if it is unavailable.
PRED:
It performs common service processing rules defined in the service processing rules and whether the contract-based service is available, based on the representative service type registered to the specific service. Whether contract services are available verifies: 1) Verification of service restriction based on product information of contract. 2) Verification of restriction related to the service set in the contract such as pledge setting. 3) Perform verification rules that should be performed in common as the requirement that dead customers should not become financial transactions.
test 샘플별 bleu-4:  1.58
========================================================================================================================
SRC:
public void validate(String arrSrvcCd,ArrReal arrReal, Map<ArrVldtnRequiredValEnum, Object> vldtnRequiredValMap) throws BizApplicationException { super.validate(arrSrvcCd, (ArrRealCore) arrReal, _convertValMap(vldtnRequiredValMap)); }
TGT:
Processing rules should be commonly performed according to the rules defined in the service processing rule, based on the service type input.
PRED:
It performs common service processing rules defined in the service processing rules and whether the contract-based service is available, based on the representative service type registered to the specific service. Whether contract services are available verifies: 1) Verification of service restriction based on product information of contract. 2) Verification of restriction related to the service set in the contract such as pledge setting. 3) Perform verification rules that should be performed in common as the requirement that dead customers should not become financial transactions.
test 샘플별 bleu-4:  10.16
========================================================================================================================
SRC:
public TxHstQrySvcInquiryTxBsicInfoOut clone(){ try{ TxHstQrySvcInquiryTxBsicInfoOut object= (TxHstQrySvcInquiryTxBsicInfoOut)super.clone(); if ( this.entryList== null ) object.entryList = null; else{ java.util.List<bankware.corebanking.deposit.query.service.dto.TxHstQrySvcInquiryEntryOut> clonedList = new java.util.ArrayList<bankware.corebanking.deposit.query.service.dto.TxHstQrySvcInquiryEntryOut>(entryList.size()); for( bankware.corebanking.deposit.query.service.dto.TxHstQrySvcInquiryEntryOut item : entryList ){ clonedList.add( (bankware.corebanking.deposit.query.service.dto.TxHstQrySvcInquiryEntryOut)item.clone()); } object.entryList = clonedList; } if ( this.stlmntMList== null ) object.stlmntMList = null; else{ java.util.List<bankware.corebanking.deposit.query.service.dto.TxHstQrySvcInquiryStlmntMOut> clonedList = new java.util.ArrayList<bankware.corebanking.deposit.query.service.dto.TxHstQrySvcInquiryStlmntMOut>(stlmntMList.size()); for( bankware.corebanking.deposit.query.service.dto.TxHstQrySvcInquiryStlmntMOut item : stlmntMList ){ clonedList.add( (bankware.corebanking.deposit.query.service.dto.TxHstQrySvcInquiryStlmntMOut)item.clone()); } object.stlmntMList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean isStandardAttributeValidationUse() { return (isValidationTailored)? isStdAtrbtVldtnUse: stdDtoClassAtrbt.isStandardAttributeValidationUse(); }
TGT:
Check whether standard attribute validation use
PRED:
Check whether standard attribute validation use
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Map<String, String> getMapXtnInfo(ArrTxCoreImpl arrTx, ArrRealCore arr) { return _getMapXtnInfoCache(arrTx); }
TGT:
Inquire partner and actor extended information map.
PRED:
Inquire the actor extended information map. Inquire extended information with normal extended attribute status code.
test 샘플별 bleu-4:  23.96
========================================================================================================================
SRC:
public boolean isChannelCenterCut(String chnlDscd) throws BizApplicationException { return ChannelEnum.CENTER_CUT.getValue().equals(chnlDscd) ? true : false; }
TGT:
Inquiry whether it is a channel center cut
PRED:
It checks center cut channel.
test 샘플별 bleu-4:  19.72
========================================================================================================================
SRC:
public ArArrGrpArrRIO select(ArArrGrpArrRIO arArrGrpArrRIO) { return _getArArrGrpArrR().select(arArrGrpArrRIO); }
TGT:
It get a http header properties.
PRED:
It get a http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveSubInfo(String xtnAtrbtNm, String xtnAtrbtCntnt, String txDt, Integer txSeqNbr, ArrRealImpl arrRealImpl) throws BizApplicationException { // null check if (StringUtils.isEmpty(xtnAtrbtNm)){ return; } // 1. 보조명세 종류 조회 ArrSubInfoKndEnum subInfoKnd = arrRealImpl.getSubInfoKnd(); // 2. 계약에 저장된 보조명세 캐시 조회결과에 따라 insert/update 판단 IValueObject subInfoCache = getSubInfoCache(arrRealImpl); if (subInfoCache == null) { // DBIO VO new instance subInfoCache = _getNewSubInfoSqlIO(subInfoKnd); subInfoCache.set("arrId", arrRealImpl.getArrId()); // 빈 이력 생성 --> undo 시 확장속성 저장 이전으로 속성값을 원복시키기 위함 _saveSubInfoHst(arrRealImpl, subInfoKnd, subInfoCache, txDt, txSeqNbr); // 입력된 속성명/속성값을 DBIO VO에 set DtoUtils.setSubInfoIO(xtnAtrbtNm, xtnAtrbtCntnt, subInfoCache); // insert _insertSubInfo(subInfoKnd, subInfoCache); // save cache arrRealImpl.saveSubInfoCache(XtnTableEnum.AR_ARR_M.getValue(), subInfoCache); } else { // 속성�
TGT:
Save an appraisal preferential claim subsidiary information.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> subInfoMap, DeptImpl deptImpl) throws BizApplicationException { // 0. null check if(subInfoMap==null || subInfoMap.isEmpty()) { return; } // 2. 보조원장 캐시 조회결과에 따라 insert/update 판단 AtDeptSIO subInfoIO = getSubInfoCache(deptImpl); if (subInfoIO == null) { // DBIO VO new instance subInfoIO = new AtDeptSIO(); subInfoIO.setDeptId(deptImpl.getDeptId()); // 입력된 Map을 DBIO VO에 반영 DtoUtils.setSubInfoIO(subInfoMap, subInfoIO); // insert _getAtDeptSDso().insert(subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(subInfoMap, subInfoIO)) { return; } // 변경전 이력 저장 _saveSubInfoHst(deptImpl, subInfoIO); // 입력된 Map을 DBIO VO에 반영 DtoUtils.setSubInfoIO(subInfoMap, subInfoIO); // update _getAtDeptSDso().update(subInfoIO); } // 2. 캐시 저장 deptImpl.setSubInfoCache(subInfoIO); }
TGT:
This method save settlement subsidiary detail information using subInfoMap.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  5.14
========================================================================================================================
SRC:
public LnAplyIntRtHstSvcListIn clone(){ try{ LnAplyIntRtHstSvcListIn object= (LnAplyIntRtHstSvcListIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getSubInfo(String xtnAtrbtNm, ArrRealCore arrReal) throws BizApplicationException { return _getArrSubInfoBiz().getSubInfo(xtnAtrbtNm, (ArrRealImpl) arrReal); }
TGT:
Inquire a specific subsidiary information of the asset transaction.
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  67.87
========================================================================================================================
SRC:
private BfCndTestSvcOut getQueryBaseDayCode(BfCndTestSvcIn in) throws BizApplicationException { // Set input BfIn bfIn = new BfIn(); bfIn.setBfCd(in.getPdCd()); bfIn.setAplyDt(in.getAplyDt()); // BF 객체생성 Bf bf = _getBfMngr().getBf(bfIn); // 조건객체 생성 BfCnd bfCnd = bf.getCnd(in.getCndCd()); String output = bfCnd.getQueryBaseDayCode(); BfCndTestSvcOut out = new BfCndTestSvcOut(); if (StringUtils.isEmpty(output)) { out.setChkYn(false); } else { out.setChkYn(true); out.setCntnt(output.toString()); } return out; }
TGT:
This method inquire query base day code of benefit conditon.
PRED:
This method inquire query base day code of point conditon.
test 샘플별 bleu-4:  80.71
========================================================================================================================
SRC:
public List<PntCnd> getCndMultiple(List<String> cndCdList, String aplyStartDt, String aplyStartTm, String aplyEndDt, String aplyEndTm) throws BizApplicationException { // Set input PntCndMltplIn in = new PntCndMltplIn(); in.setAplyStartDt(aplyStartDt); in.setAplyStartTm(_getAplyTmString(aplyStartTm)); in.setAplyEndDt(aplyEndDt); in.setAplyEndTm(_getAplyTmString(aplyEndTm)); in.setCndCdList(cndCdList); // Return output return getCndMultiple(in); }
TGT:
This Method create a list of condition objects for the list of input condition codes. condition information initialization. condition object has condition defined in point or common condition information.
PRED:
This Method create a list of condition objects for the list of input condition codes. condition information initialization. condition object has condition defined in benefit or common condition information.
test 샘플별 bleu-4:  90.96
========================================================================================================================
SRC:
public String getNumbering(String nbrgAtrbtNm,Map<String, Object> inpParmMap,Boolean isReUseSameTxNbrg) throws BizApplicationException { return getNumbering(_getCmnContext().getInstCode(), nbrgAtrbtNm, inpParmMap, isReUseSameTxNbrg); }
TGT:
It calculates next number. Compared to the default method, the omitted 'instCd' value is replaced by instCd in Common Context. Compared to the default method, the omitted 'isReUseSameTxNbrg' value is replaced by false. Compared to the default method, the omitted 'inpParmMap' value is replaced by null.
PRED:
It calculates next number. Compared to the default method, the omitted 'instCd' value is replaced by instCd in Common Context. Compared to the default method, the omitted 'isReUseSameTxNbrg' value is replaced by false. Compared to the default method, the omitted 'inpParmMap' value is replaced by null.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public List<SctnBalWhdrwlOrderIO> getListSctnBalWhdrwlOrder(SctnBalWhdrwlOrderIO in) throws BizApplicationException { // Inquiry Product By Extend Amount Type List from DB StTxWhdrwlOrderBalHIO stTxWhdrwlOrderBalHIO = new StTxWhdrwlOrderBalHIO(); _getCmnContext().setHeaderColumn(stTxWhdrwlOrderBalHIO); stTxWhdrwlOrderBalHIO.setArrId(in.getArrId()); List<StTxWhdrwlOrderBalHIO> listStTxWhdrwlOrderBalHIO = _getStTxWhdrwlOrderBalHXtnDso().selectSctnList(stTxWhdrwlOrderBalHIO, in.getSctnStartDt(), in.getSctnEndDt()); // Set Result value List<SctnBalWhdrwlOrderIO> outList = new ArrayList<SctnBalWhdrwlOrderIO>(); if (listStTxWhdrwlOrderBalHIO != null) { for(StTxWhdrwlOrderBalHIO out : listStTxWhdrwlOrderBalHIO) { outList.add(_getSctnBalWhdrwlOrderIO(out)); } } return outList; }
TGT:
This method inquires section of Balance Withdrawal Order List.
PRED:
This method inquires a list of SctnBalWhdrwlOrder.
test 샘플별 bleu-4:  27.47
========================================================================================================================
SRC:
public List<CaCndTmpltOut> getListCndTmpltInfo(CaCndTmpltIn in) throws BizApplicationException { CaPdCtMIO daoIn = new CaPdCtMIO(); daoIn.setTntInstId(in.getInstCd()); daoIn.setCndCd(in.getCndCd()); daoIn.setCndNm(in.getCndNm()); daoIn.setCndTpCd(in.getCndTpCd()); daoIn.setCndDtlsTpCd(in.getCndDtlsTpCd()); daoIn.setActvYn(in.getActvYn()); if (StringUtils.isEmpty(daoIn.getTntInstId())) { daoIn.setTntInstId(_getCmnContext().getInstCode()); } List<CaCndTmpltOut> outList = _getCaPdCtMDso().selectConditionTemplateDetailList(daoIn); return outList; }
TGT:
Method to query list of condition template information - Information of condition template with interest composition element y/n
PRED:
query list of condition template information
test 샘플별 bleu-4:  13.53
========================================================================================================================
SRC:
public CaTblMgmtSvcGetTblXtnAtrbtListOut clone(){ try{ CaTblMgmtSvcGetTblXtnAtrbtListOut object= (CaTblMgmtSvcGetTblXtnAtrbtListOut)super.clone(); if ( this.atrbtList== null ) object.atrbtList = null; else{ java.util.List<bankware.corebanking.configurationadmin.attribute.service.dto.CaTblMgmtSvcGetTblXtnAtrbtListDtlOut> clonedList = new java.util.ArrayList<bankware.corebanking.configurationadmin.attribute.service.dto.CaTblMgmtSvcGetTblXtnAtrbtListDtlOut>(atrbtList.size()); for( bankware.corebanking.configurationadmin.attribute.service.dto.CaTblMgmtSvcGetTblXtnAtrbtListDtlOut item : atrbtList ){ clonedList.add( (bankware.corebanking.configurationadmin.attribute.service.dto.CaTblMgmtSvcGetTblXtnAtrbtListDtlOut)item.clone()); } object.atrbtList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaCmInstPMIO select(CaCmInstPMIO cmInstPMIO) { return _getCmInstPM().select(cmInstPMIO); }
TGT:
It get a http header properties.
PRED:
It get a http header properties.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public boolean checkCode(String cdNbr, Map<String, Object> supplInfoVal) throws BizApplicationException { String cd = ""; if(supplInfoVal.get(CCM03.CD) != null) { cd = supplInfoVal.get(CCM03.CD).toString(); } ArArrSrvcBlckngMIO sqlIn = new ArArrSrvcBlckngMIO(); sqlIn.setArrSrvcBlckngCd(cd); ArArrSrvcBlckngMIO ArArrSrvcBlckngMIO = _getArArrSrvcBlckngMDso().select(sqlIn); if(ArArrSrvcBlckngMIO == null){ return false; } return true; }
TGT:
It check code number & code value by cdDtlIO DTO. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter.
PRED:
It check code number & code value by cdDtlIO DTO. The arguments for this method is a pair of code number and code. It returns true if there are query result of parameter.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getInputDtoName() { return inpDtoNm; }
TGT:
Inquire input dto name.
PRED:
Inquire input dto name.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public PdBaseIntRtInqrySvcOut clone(){ try{ PdBaseIntRtInqrySvcOut object= (PdBaseIntRtInqrySvcOut)super.clone(); if ( this.list== null ) object.list = null; else{ java.util.List<bankware.corebanking.product.service.dto.PdBaseIntRtInqrySvcBaseRt> clonedList = new java.util.ArrayList<bankware.corebanking.product.service.dto.PdBaseIntRtInqrySvcBaseRt>(list.size()); for( bankware.corebanking.product.service.dto.PdBaseIntRtInqrySvcBaseRt item : list ){ clonedList.add( (bankware.corebanking.product.service.dto.PdBaseIntRtInqrySvcBaseRt)item.clone()); } object.list = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public FrgnCrncyChkClctnSvcIn clone(){ try{ FrgnCrncyChkClctnSvcIn object= (FrgnCrncyChkClctnSvcIn)super.clone(); if ( this.chkInfoList== null ) object.chkInfoList = null; else{ java.util.List<bankware.corebanking.foreignexchange.currencyexchange.service.dto.FrgnCrncyChkInfoListIn> clonedList = new java.util.ArrayList<bankware.corebanking.foreignexchange.currencyexchange.service.dto.FrgnCrncyChkInfoListIn>(chkInfoList.size()); for( bankware.corebanking.foreignexchange.currencyexchange.service.dto.FrgnCrncyChkInfoListIn item : chkInfoList ){ clonedList.add( (bankware.corebanking.foreignexchange.currencyexchange.service.dto.FrgnCrncyChkInfoListIn)item.clone()); } object.chkInfoList = clonedList; } return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public java.util.List<bankware.corebanking.configurationadmin.assessment.service.dto.CaAsmItmMgmtSvcGetAsmItm> getAsmItmList(){ return asmItmList; }
TGT:
It inquiries assessment item information list.
PRED:
It inquiries assessment item information list.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public CaCoaMgmtSvcGetXtnTblAtrbtIO clone(){ try{ CaCoaMgmtSvcGetXtnTblAtrbtIO object= (CaCoaMgmtSvcGetXtnTblAtrbtIO)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public MbrshpArrOpnSvcArrXtnIn clone(){ try{ MbrshpArrOpnSvcArrXtnIn object= (MbrshpArrOpnSvcArrXtnIn)super.clone(); return object; } catch(CloneNotSupportedException e){ throw new bxm.omm.exception.CloneFailedException(); } }
TGT:
Clone the array.
PRED:
Clone the array.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getSubInfo(String xtnAtrbtNm, Integer arrSrvcBlckngSeqNbr, Integer seqNbr, ArrRealCore arrRealCore) throws BizApplicationException { return _getArrSrvcBlckngSubInfoBiz().getSubInfo(xtnAtrbtNm, arrSrvcBlckngSeqNbr, seqNbr, (ArrRealImpl)arrRealCore); }
TGT:
get a extended information of subsidiary information(CTI)
PRED:
Inquire a specific subsidiary information of the appraisal preferential claim.
test 샘플별 bleu-4:  18.85
========================================================================================================================
SRC:
public void saveSubInfo(IValueObject subInfo, String txDt, Integer txSeqNbr, ArrRealImpl arrRealImpl) throws BizApplicationException { // null check if(subInfo == null){ throw new BizApplicationException("AAPCME0006", new Object[] {_getNewSubInfo(arrRealImpl.getSubInfoKnd()).getClass().getSimpleName()}); } // 1. 보조명세 종류 조회 ArrSubInfoKndEnum subInfoKnd = arrRealImpl.getSubInfoKnd(); // 2. 계약에 저장된 보조명세 캐시 조회결과에 따라 insert/update 판단 IValueObject subInfoCache = getSubInfoCache(arrRealImpl); if (subInfoCache == null) { // DBIO VO new instance subInfoCache = _getNewSubInfoSqlIO(subInfoKnd); subInfoCache.set("arrId", arrRealImpl.getArrId()); // 빈 이력 생성 --> undo 시 확장속성 저장 이전으로 속성값을 원복시키기 위함 _saveSubInfoHst(arrRealImpl, subInfoKnd, subInfoCache, txDt, txSeqNbr); // 입력된 I/F VO를 DBIO VO로 convert DtoUtils.setSubInfoIO(subInfo, subInfoCache); // insert _insertSubInfo(subInfoKnd, subInfoCache); // save cache arrRealImpl.saveSubInfoCache(XtnTableEnum.AR_ARR_M.getValue(), subInfoCache); } else { // 속성값 변
TGT:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
PRED:
Store one extended attribute of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getAttributeValidationRule() { return atrbtVldtnRule; }
TGT:
Query attribute validation rule
PRED:
Query attribute validation rule
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
protected void register(CustImpl custImpl) throws BizApplicationException { AtCustMIO atCustMIO = custImpl.getCustBsicCache(); List<AtScrtyQstnrAnswerDIO> atScrtyQstnrAnswerDIOList = custImpl.getListQstnrAnswerCache(); if (atScrtyQstnrAnswerDIOList.isEmpty()) { return; } for (AtScrtyQstnrAnswerDIO item : atScrtyQstnrAnswerDIOList) { item.setInstCd(atCustMIO.getInstCd()); item.setAnswerTrgtId(atCustMIO.getCustId()); item.setAnswerTrgtTpCd(AnswerTrgtTpEnum.CUST.getValue()); } _getSecurityQuestionnaireAnswer().register(atScrtyQstnrAnswerDIOList); }
TGT:
It registers the self authentication code information. Needs caution as the registered information performs the update transaction. It gets the first institution code in the list and query the entire contents.
PRED:
It registers the self authentication code information. Needs caution as the registered information performs the update transaction. It gets the first institution code in the list and query the entire contents.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public PdCardAprvlMIO selectAprvlInfo(String tntInstId, String aprvlDt, String cardNbr, String aprvlNbr) { // 조회 PdCardAprvlMIO out = _getPdServiceM().selectAprvlInfo(tntInstId, aprvlDt, cardNbr, aprvlNbr); // Return output return out; }
TGT:
Methods to query Approval information
PRED:
Methods to query Approval information
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public Pnt getDummyPnt() { return new PntImpl(); }
TGT:
Methods to get dummy point objects
PRED:
Methods to get dummy point objects
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public String getCndGrpTmpltCd() { if (pdPdCndM == null) { return null; } return pdPdCndM.getCndGrpTmpltCd(); }
TGT:
This method inquire condition group template code.
PRED:
This method inquire condition group template code.
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
static boolean isValid(String value){ for (ArrCndActionRequiredValueCoreEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> subInfoMap, AtrlImpl atrlImpl) throws BizApplicationException { // null check if (subInfoMap == null || subInfoMap.isEmpty()) { return; } // 1. 액터역할에 저장된 보조명세 캐시 조회결과에 따라 insert/update 판단 AtAtrlSIO subInfoIO = getSubInfoCache(atrlImpl); if (subInfoIO == null) { // DBIO VO new instance subInfoIO = new AtAtrlSIO(); subInfoIO.setAtrlId(atrlImpl.getAtrlId()); // 입력된 Map을 DBIO VO에 반영 DtoUtils.setSubInfoIO(subInfoMap, subInfoIO); // insert _getAtAtrlSDso().insert(subInfoIO); } else { // 속성값 변경여부 검증 if (!DtoUtils.isValChanged(subInfoMap, subInfoIO)) { return; } // 변경전 이력 저장 _saveSubInfoHst(atrlImpl, subInfoIO); // 입력된 Map을 기존 캐시 저장된 DBIO VO에 반영 DtoUtils.setSubInfoIO(subInfoMap, subInfoIO); // update _getAtAtrlSDso().update(subInfoIO); } // 2. 캐시 저장 atrlImpl.setSubInfoCache(subInfoIO); }
TGT:
Save the asset subsidiary information using map.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  6.11
========================================================================================================================
SRC:
public void saveMapSubInfo(Map<String, String> assetThingSubInfoMap, AssetCore assetImpl, Integer assetThingSeqNbr, String txDt, Integer txSeqNbr) throws BizApplicationException { _getAssetThingSubInfoBiz().saveMapSubInfo(assetThingSubInfoMap, txDt, txSeqNbr, (AssetImpl) assetImpl, assetThingSeqNbr); }
TGT:
Save the asset transaction subsidiary information using map.
PRED:
Store several extended attributes of Subsidiary Information(CTI). Storage logic implemented in the project is performed at the time of performance.
test 샘플별 bleu-4:  6.11
========================================================================================================================
SRC:
public boolean isTerminated() { return this.arrGrpStsCd.equals(ArrGrpStsCoreEnum.TERMINATED.getValue()); }
TGT:
It checks if the actor role's actor role status is terminated. It returns true if terminated, return false if actor role status doesn't exist or it is not terminated.
PRED:
Check whether if the status of arrangement is "TERMINATED". Detail function descripation refers to {@link #isActive()}.
test 샘플별 bleu-4:  5.1
========================================================================================================================
SRC:
static boolean isValid(String value){ for (ArrCustRelStsEnum enumObject: values()){ if(enumObject.getValue().equals(value)) { return true; } } return false; }
TGT:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
PRED:
Check whether the service is restricted by the service code. If restricted service, call the error message (AAPSVE0009).
test 샘플별 bleu-4:  100.0
/home/ysnamgoong42/ws/BANKWAREGLOBAL/#WORKSPACE/4_2023-11-24_CodeBase/saved_models/Salesforce/codet5-base/SRC_TGT_PRED_BLEU_LOG.csv 파일에 데이터가 저장되었습니다.
BLEU: 56.31 ; Acc: 56.4
